
==> Rule  started  >RDVC6 
    RDVC6     TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
        RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
        RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC6     TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC6     TRUE   IF:   ?OLDTAB = _IDEMAND = APPWK(DVTABLE,1) 
    RDVC6     TRUE   IF:   FREE [:DVTABLE=]**** 
    RDVC6     TRUE   IF:   :DVTABLE = _IDEMAND = [?TAB=]_IDEMAND 
    RDVC6     TRUE   IF:   FILL APPWK(DVTABLE,1) = [:DVTABLE=]_IDEMAND 
    RDVC6     TRUE   IF:   ?CURVIEW = _IDEMAND = DVEDITS3([:DVTABLE=]_IDEMAND,2) 
    RDVC6     TRUE   IF:   FREE [:VIEW=]**** 
    RDVC6     TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
    RDVC6     TRUE   IF:   ?TMPSWCH = ON = APPDATA(DVPMSWITCH,1) 
    RDVC6     TRUE   IF:   APPDATA(DVPMSWITCH,1) = "OFF" 
    RDVC6     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC6     TRUE   IF:   TRUE 
    RDVC6     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC6     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC6     TRUE   IF:   TRUE 
    RDVC6     TRUE   IF:   FREE [:VIEW=]**** 
    RDVC6     TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
    RDVC6     TRUE   IF:   :VIEW = _IDEMAND IN DVVIEWS 
    RDVC6     TRUE   IF:   ?VIEWTY = DATALIST = DVOPT(@,VIEWTYPE) 
    RDVC6     TRUE   IF:   ?VT = TABLE 
    RDVC6     FALSE  IF:   ?VT = TABLE IN VIEWTYPE 
    RDVC6     TRUE   IF:   TRUE 
        RDVC61    TRUE   IF:   FILL DVMSTATE(*,1) = "TRUE" 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_UOM IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_UOM IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_NBRFMT IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_NBRFMT IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE =  = DDVOPT(@,D) 
        RDVC61    FALSE  IF:   [?STATE=] == "DISABLED" 
        RDVC61    TRUE   IF:   TRUE 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_AGGTYPE IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_AGGTYPE IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWSGRP IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWSGRP IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB1 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB1 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB2 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB2 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB3 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB3 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB4 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB4 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB5 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLAB5 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST1 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST1 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST2 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST2 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST3 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST3 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST4 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST4 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST5 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_ROWLIST5 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLSGRP IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLSGRP IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB1 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB1 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB2 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB2 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB3 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLAB3 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST1 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST1 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST2 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST2 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST3 IN DVOPTCTR 
        RDVC61    TRUE   IF:   ?CNTR = STYLE_COLLIST3 IN DDVOPT 
        RDVC61    TRUE   IF:   ?STATE = DISABLED = DDVOPT(@,D) 
        RDVC61    TRUE   IF:   [?STATE=]DISABLED == "DISABLED" 
        RDVC61    TRUE   IF:   FILL DVMSTATE(@,1) = "FALSE" 
        RDVC61    TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
    RDVC6     TRUE   IF:   RDVCALL_INITIALIZE_VIEW_SETTING_PANEL_STATE 
    RDVC6     TRUE   IF:   ?VIEWTY = DATALIST IN VIEWTYPE 
    RDVC6     TRUE   THEN: RDVCALL_INITIALIZE_VIEW_SETTINGS 
==> Rule  >RDVC6                                          total  time:     0.00 sec 
 
==> Rule  started  >RDVC7B 
    RDVC7B    TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
        RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
        RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC7B    TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC7B    TRUE   IF:   ?OLDTAB = _IDEMAND = APPWK(DVTABLE,1) 
    RDVC7B    TRUE   IF:   FREE [:DVTABLE=]**** 
    RDVC7B    TRUE   IF:   :DVTABLE = _IDEMAND = [?TAB=]_IDEMAND 
    RDVC7B    TRUE   IF:   APPWK(DVTABLE,1) = [:DVTABLE=]_IDEMAND 
    RDVC7B    TRUE   IF:   ?CURVIEW = _IDEMAND = DVEDITS3([?TAB=]_IDEMAND,2) 
    RDVC7B    TRUE   IF:   APPWK(DVVIEW,1) = [?CURVIEW=]_IDEMAND 
    RDVC7B    TRUE   IF:   :TABLE = _IDEMAND = DVCTL([:DVTABLE=]_IDEMAND,TABLE) 
    RDVC7B    TRUE   IF:   SETIND DVVIEWS([?CURVIEW=]_IDEMAND) 
    RDVC7B    FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC7B    TRUE   IF:   TRUE 
    RDVC7B    TRUE   IF:   FREE [:VIEW=]**** 
    RDVC7B    TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
    RDVC7B    FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC7B    TRUE   IF:   TRUE 
    RDVC7B    TRUE   IF:   ?RESET = 0 = DVEDITS3([?TAB=]_IDEMAND,4) 
    RDVC7B    TRUE   IF:   [?RESET=]0 == 0 
        RDVC7G    TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
            RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
            RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
            RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
            RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
        RDVC7G    TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
        RDVC7G    TRUE   IF:   ?CURVIEW = _IDEMAND = DVEDITS3([?TAB=]_IDEMAND,2) 
        RDVC7G    TRUE   IF:   FREE [:VIEW=]**** 
        RDVC7G    TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
            RDVSAV73  TRUE   IF:   TSELFIL1 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL2 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL3 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL4 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL5 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL6 = NULL 
            RDVSAV73  TRUE   IF:   TSELFIL7 = NULL 
            RDVSAV73  TRUE   IF:   TSELECT DVFLTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV73  TRUE   IF:   ?SIZE = 2 = SIZEOF TCHOSENR 
            RDVSAV73  TRUE   IF:   [?SIZE=]2 GT 0 
            RDVSAV73  TRUE   IF:   ?ROW = _IDEMAND-F1 IN TCHOSENR 
            RDVSAV73  TRUE   IF:   ?ROW = _IDEMAND-F1 IN DVFLTRR 
                RDVSAV99  TRUE   IF:   ?ATT = MAT = DVFLTR(@,LISTSET) 
                RDVSAV99  TRUE   IF:   ?ATT = MAT IN LISTWRK 
                RDVSAV99  TRUE   IF:   ?N = 3 = TLISTWRK(@,LISTNUM) 
                RDVSAV99  TRUE   THEN: RDVSAV_DETERMINE_N_FOR_FILTER_LIST [?N=]3 
            RDVSAV73  TRUE   IF:   RDVSAV_DETERMINE_N_FOR_FILTER_LIST [?N=]3 
            RDVSAV73  TRUE   IF:   ?TSELFIL = TSELFIL3 = 'TSELFIL[?N=]3' 
            RDVSAV73  TRUE   IF:   ?LISTFIL = LISTFIL3 = 'LISTFIL[?N=]3' 
            RDVSAV73  TRUE   IF:   ?FILTER = LF1020DD = DVFLTR([?ROW=]_IDEMAND-F1,FILTER) 
            RDVSAV73  TRUE   IF:   APPENDIF [?LISTFIL=]LISTFIL3 [?FILTER=]LF1020DD 
            RDVSAV73  TRUE   IF:   FILL [?TSELFIL=]TSELFIL3(@,1) = 1 
            RDVSAV73  TRUE   THEN: RDVSAV_RESTORE_FILTER_LISTS 
            RDVSAV73  TRUE   IF:   ?ROW = _IDEMAND-F2 IN TCHOSENR 
            RDVSAV73  TRUE   IF:   ?ROW = _IDEMAND-F2 IN DVFLTRR 
                RDVSAV99  TRUE   IF:   ?ATT = SHIPTO = DVFLTR(@,LISTSET) 
                RDVSAV99  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
                RDVSAV99  TRUE   IF:   ?N = 4 = TLISTWRK(@,LISTNUM) 
                RDVSAV99  TRUE   THEN: RDVSAV_DETERMINE_N_FOR_FILTER_LIST [?N=]4 
            RDVSAV73  TRUE   IF:   RDVSAV_DETERMINE_N_FOR_FILTER_LIST [?N=]4 
            RDVSAV73  TRUE   IF:   ?TSELFIL = TSELFIL4 = 'TSELFIL[?N=]4' 
            RDVSAV73  TRUE   IF:   ?LISTFIL = LISTFIL4 = 'LISTFIL[?N=]4' 
            RDVSAV73  TRUE   IF:   ?FILTER = 0000025055 = DVFLTR([?ROW=]_IDEMAND-F2,FILTER) 
            RDVSAV73  TRUE   IF:   APPENDIF [?LISTFIL=]LISTFIL4 [?FILTER=]0000025055 
            RDVSAV73  TRUE   IF:   FILL [?TSELFIL=]TSELFIL4(@,1) = 1 
            RDVSAV73  TRUE   THEN: RDVSAV_RESTORE_FILTER_LISTS 
        RDVC7G    TRUE   IF:   RDVSAV_RESTORE_FILTER_LISTS 
                RDVC7G2   TRUE   IF:   ?ATT = _DIV IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
                RDVC7G2   TRUE   IF:   ?ATT = PLA IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
                RDVC7G2   TRUE   IF:   ?ATT = MAT IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
                RDVC7G2   TRUE   IF:   ?ATT = SHIPTO IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
                RDVC7G2   TRUE   IF:   ?ATT = DTYPE IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
                RDVC7G2   TRUE   IF:   ?ATT = EFFDTTM IN DVATTWKR 
                RDVC7G2   TRUE   IF:   ?AGG =  = DVATTWK(@,AFILTER) 
                RDVC7G2   FALSE  IF:   [?AGG=] == Y 
            RDVC7G1   FALSE  IF:   RDVCALL_CLEAN_AGGR_FILTERS_HELPER 
            RDVC7G1   TRUE   IF:   TRUE 
            RDVC7G1   TRUE   THEN: RDVCALL_CLEAN_AGGR_FILTERS 
        RDVC7G    TRUE   IF:   RDVCALL_CLEAN_AGGR_FILTERS 
            RDVSAV76  TRUE   IF:   TSELECT DVAFLTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV76  TRUE   IF:   ?SIZE = 0 = SIZEOF TCHOSENR 
            RDVSAV76  FALSE  IF:   [?SIZE=]0 GT 0 
            RDVSAV76  TRUE   IF:   TRUE 
            RDVSAV76  TRUE   THEN: RDVSAV_RESTORE_AGGR_FILTER_LISTS 
        RDVC7G    TRUE   IF:   RDVSAV_RESTORE_AGGR_FILTER_LISTS 
        RDVC7G    FALSE  IF:   ?CURVIEW = _IDEMAND IN DVVIEWS2 
        RDVC7G    TRUE   IF:   TRUE 
        RDVC7G    TRUE   IF:   ?GF = YES = APPDATA(DVGLOBALFILTER,1) 
        RDVC7G    TRUE   IF:   [?GF=]YES == YES 
                RGF4H     TRUE   IF:   GFFILT = [&BLANK=] 
                RGF4H     TRUE   IF:   ?FLT = _DIV IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 1 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 = 'FLTRSHOW[?SLNUM=]1' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = _DIV IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(_DIV,GFSWITCH) = 'GFUICTL([?FLT=]_DIV,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(_DIV,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4H     TRUE   IF:   ?FLT = PLA IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 2 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 = 'FLTRSHOW[?SLNUM=]2' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = PLA IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(PLA,GFSWITCH) = 'GFUICTL([?FLT=]PLA,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(PLA,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4H     TRUE   IF:   ?FLT = MAT IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 3 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 = 'FLTRSHOW[?SLNUM=]3' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = MAT IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(MAT,GFSWITCH) = 'GFUICTL([?FLT=]MAT,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(MAT,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4H     TRUE   IF:   ?FLT = SHIPTO IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 4 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 = 'FLTRSHOW[?SLNUM=]4' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = SHIPTO IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(SHIPTO,GFSWITCH) = 'GFUICTL([?FLT=]SHIPTO,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(SHIPTO,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4H     TRUE   IF:   ?FLT = DTYPE IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 5 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 = 'FLTRSHOW[?SLNUM=]5' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = DTYPE IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(DTYPE,GFSWITCH) = 'GFUICTL([?FLT=]DTYPE,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(DTYPE,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4H     TRUE   IF:   ?FLT = EFFDTTM IN LISTWRK 
                RGF4H     TRUE   IF:   ?SLNUM = 6 = TLISTWRK(@,LISTNUM) 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 = 'FLTRSHOW[?SLNUM=]6' 
                RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 IN ADVFILTR 
                    RGF4A     TRUE   IF:   ?FLT = EFFDTTM IN GFUI 
                    RGF4A     TRUE   IF:   ?STR = GFUICTL(EFFDTTM,GFSWITCH) = 'GFUICTL([?FLT=]EFFDTTM,GFSWITCH)' 
                    RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(EFFDTTM,GFSWITCH) 
                    RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
                RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
                RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4      TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
                RGF4B     TRUE   IF:   FREE [:NUM=]**** 
                RGF4B     TRUE   IF:   :NUM = 10 
                RGF4B     TRUE   IF:   ?ROW = _DIV IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   ?ROW = PLA IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   ?ROW = MAT IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   ?ROW = SHIPTO IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   ?ROW = DTYPE IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   ?ROW = EFFDTTM IN DVATTWKR 
                RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
                RGF4B     TRUE   IF:   TRUE 
                RGF4B     TRUE   THEN: RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
            RGF4      TRUE   IF:   RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
                RGF4C     TRUE   IF:   TMPSET3 = NULL 
                RGF4C     TRUE   IF:   TMPSET4 = NULL 
                    RGF4C1    TRUE   IF:   SELECT GFFILT(*,1) != BLANK 
                    RGF4C1    TRUE   IF:   ?SIZ = 6 = SIZEOF TCHOSENR 
                    RGF4C1    FALSE  IF:   [?SIZ=]6 == 0 
                    RGF4C1    TRUE   IF:   ?ONE = 1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW1 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(_DIV,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW2 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(PLA,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW3 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(MAT,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW4 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(SHIPTO,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW5 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(DTYPE,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                    RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW6 IN TCHOSENR 
                    RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(EFFDTTM,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                    RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                    RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                    RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C     TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C     TRUE   IF:   ?SIZ1 = 6 = SIZEOF TMPSET3 
                RGF4C     TRUE   IF:   ?SIZ2 = 6 = SIZEOF TMPSET4 
                RGF4C     TRUE   IF:   [?SIZ1=]6 == [?SIZ2=]6 
                RGF4C     TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT 
            RGF4      TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT 
                RGF5A1    TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
                RGF5A1    TRUE   IF:   ?SIZE = 0 = SIZEOF CHOSEN 
                RGF5A1    FALSE  IF:   [?SIZE=]0 > 0 
                RGF5A1    TRUE   IF:   FILL APPWK(DVCLRGF_ENABLED,1) = 0 
                RGF5A1    TRUE   THEN: RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
            RGF4      TRUE   IF:   RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
            RGF4      TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
        RDVC7G    TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
            RGF2      TRUE   IF:   ?INDFIL = NO = APPDATA(DVGFINDFILTER,1) 
            RGF2      TRUE   IF:   [?INDFIL=]NO NE YES 
            RGF2      TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
            RGF2      TRUE   IF:   GFSETS = GFSETS * CHOSEN 
            RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
            RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
            RGF2      FALSE  IF:   [?CASE=]PS EQ "SP" 
            RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
            RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
            RGF2      TRUE   IF:   [?CASE=]PS EQ "PS" 
            === Macro started  <MUTIL DO_CMD >RCNSP ===================== 
                Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                Mac:         ON ERROR ERR_RTN 
                Mac:         GOTO DO_CMD 
                Mac:         IF ">RCNSP" =   THEN GOTO DO_CMD0 
                Mac:         IF " " =   THEN GOTO DO_CMD1 
                Mac:         GOTO DO_CMD1 
                === Rule  started  >RCNSP    ===================== 
                    RCNSP     FALSE  IF:   GFUICTL(MAT,GFSWITCH) == 1 
                    RCNSP     FALSE  IF:   GFUICTL(PRO,GFSWITCH) == 1 
                    RCNSP     TRUE   IF:   TRUE 
                    RCNSP     TRUE   IF:   REMOVEIF GFSETS PRO MPPRO 
                    RCNSP     TRUE   IF:   REMOVEIF GFSETS MAT MPMAT 
                    RCNSP     TRUE   THEN: RCN_ADD_SPECIAL_SETS_TO_GFSETS 
                === Rule  finished >RCNSP    =====================    elapse time:     0.00 sec 
                Mac:         END 
==> Macro <MUTIL DO_CMD >RCNSP                            total  time:     0.00 sec 
 
            RGF2      TRUE   IF:   <MUTIL DO_CMD >RCNSP 
            RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
            RGF2      FALSE  IF:   [?SC=]0 GT 0 
            RGF2      TRUE   IF:   TRUE 
            RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
            RGF2      FALSE  IF:   [?SC=]0 GT 0 
            RGF2      TRUE   IF:   TRUE 
            RGF2      TRUE   THEN: RGF_APPLY_GLOBAL_FILTERS 
        RDVC7G    TRUE   IF:   RGF_APPLY_GLOBAL_FILTERS 
            RDVSAV65  TRUE   IF:   TSELECT DVAFLTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV65  TRUE   IF:   DVAFLTRR = DVAFLTRR - TCHOSENR 
            RDVSAV65  TRUE   IF:   ?SC = 7 = SETCOU ATT 
            RDVSAV65  TRUE   IF:   [?SC=]7 GT 0 
            RDVSAV65  TRUE   IF:   ?LIST = _IDEMANR IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = _IDEMANR IN DVSFLTR 
            RDVSAV65  TRUE   IF:  NOT ?LIST = _IDEMANR IN LISTWRK 
            RDVSAV65  FALSE  IF:   ATTDEF(@,DEFINE) NE 
            RDVSAV65  TRUE   IF:   ?LIST = _DIV IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = _DIV IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = _DIV IN LISTWRK 
            RDVSAV65  TRUE   IF:   ?LIST = PLA IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = PLA IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = PLA IN LISTWRK 
            RDVSAV65  TRUE   IF:   ?LIST = MAT IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = MAT IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = MAT IN LISTWRK 
            RDVSAV65  TRUE   IF:   ?LIST = SHIPTO IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = SHIPTO IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = SHIPTO IN LISTWRK 
            RDVSAV65  TRUE   IF:   ?LIST = DTYPE IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = DTYPE IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = DTYPE IN LISTWRK 
            RDVSAV65  TRUE   IF:   ?LIST = EFFDTTM IN ATT 
            RDVSAV65  TRUE   IF:  NOT ?LIST = EFFDTTM IN DVSFLTR 
            RDVSAV65  FALSE  IF:  NOT ?LIST = EFFDTTM IN LISTWRK 
            RDVSAV65  TRUE   IF:   TRUE 
            RDVSAV65  TRUE   THEN: RDVSAV_SAVE_SELECTED_AGGREGATED_FILTERS_FOR_VIEW 
        RDVC7G    TRUE   IF:   RDVSAV_SAVE_SELECTED_AGGREGATED_FILTERS_FOR_VIEW 
            RDVSAV77  TRUE   IF:   ?LISTSET = _DIV IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = _DIV IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = _DIV = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = _DIV IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]_DIV) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 1 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL1 = 'TSELFIL[?NUM=]1' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = _DIV = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 1 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL1 = 'LISTFIL[?N=]1' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL1 = 'TSELFIL[?N=]1' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = _DIV = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]_DIV [?LISTFIL=]LISTFIL1 [?TSELFIL=]TSELFIL1 [?DECODEL= 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]_DIV [?LISTFIL=]LISTFIL1 [?TSELFIL=]TSELFIL1 [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST1 = 'PORTION_LST[?N=]1' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST1,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = _DIV IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 1 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL1 = 'LISTFIL[?N=]1' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL1 = 'TSELFIL[?N=]1' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  FALSE  IF:   ?ATT = _DIV IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = D = TLISTFLT(@,DECODEL) 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL1 
                    === Macro started  <MUTIL NULL LISTFIL1 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL1 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL1                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL1 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]_DIV FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL1 [?ATT=]_DIV TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL1 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL1 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL1 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL1 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]_DIV 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]_DIV 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV77  TRUE   IF:   ?LISTSET = PLA IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = PLA IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = PLA = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = PLA IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]PLA) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 2 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL2 = 'TSELFIL[?NUM=]2' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = PLA = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 2 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL2 = 'LISTFIL[?N=]2' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL2 = 'TSELFIL[?N=]2' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = PLA = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]PLA [?LISTFIL=]LISTFIL2 [?TSELFIL=]TSELFIL2 [?DECODEL=] 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]PLA [?LISTFIL=]LISTFIL2 [?TSELFIL=]TSELFIL2 [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST2 = 'PORTION_LST[?N=]2' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST2,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = PLA IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 2 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL2 = 'LISTFIL[?N=]2' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL2 = 'TSELFIL[?N=]2' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  FALSE  IF:   ?ATT = PLA IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = D = TLISTFLT(@,DECODEL) 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL2 
                    === Macro started  <MUTIL NULL LISTFIL2 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL2 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL2                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL2 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]PLA FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL2 [?ATT=]PLA TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL2 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL2 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL2 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL2 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]PLA 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]PLA 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV77  TRUE   IF:   ?LISTSET = MAT IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = MAT IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = MAT = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = MAT IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]MAT) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 3 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL3 = 'TSELFIL[?NUM=]3' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = MAT = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 3 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL3 = 'LISTFIL[?N=]3' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL3 = 'TSELFIL[?N=]3' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = MAT = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]MAT [?LISTFIL=]LISTFIL3 [?TSELFIL=]TSELFIL3 [?DECODEL=] 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]MAT [?LISTFIL=]LISTFIL3 [?TSELFIL=]TSELFIL3 [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST3 = 'PORTION_LST[?N=]3' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST3,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = MAT IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 3 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL3 = 'LISTFIL[?N=]3' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL3 = 'TSELFIL[?N=]3' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  FALSE  IF:   ?ATT = MAT IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = D = TLISTFLT(@,DECODEL) 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL3 
                    === Macro started  <MUTIL NULL LISTFIL3 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL3 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL3                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL3 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]MAT FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL3 [?ATT=]MAT TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL3 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL3 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL3 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL3 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]MAT 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]MAT 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV77  TRUE   IF:   ?LISTSET = SHIPTO IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = SHIPTO IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = SHIPTO = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = SHIPTO IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]SHIPTO) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 4 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL4 = 'TSELFIL[?NUM=]4' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = SHIPTO = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 4 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL4 = 'LISTFIL[?N=]4' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL4 = 'TSELFIL[?N=]4' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = SHIPTO = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]SHIPTO [?LISTFIL=]LISTFIL4 [?TSELFIL=]TSELFIL4 [?DECODE 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]SHIPTO [?LISTFIL=]LISTFIL4 [?TSELFIL=]TSELFIL4 [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST4 = 'PORTION_LST[?N=]4' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST4,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 4 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL4 = 'LISTFIL[?N=]4' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL4 = 'TSELFIL[?N=]4' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  FALSE  IF:   ?ATT = SHIPTO IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = D = TLISTFLT(@,DECODEL) 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL4 
                    === Macro started  <MUTIL NULL LISTFIL4 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL4 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL4                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL4 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]SHIPTO FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL4 [?ATT=]SHIPTO TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL4 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL4 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL4 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL4 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]SHIPTO 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]SHIPTO 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV77  TRUE   IF:   ?LISTSET = DTYPE IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = DTYPE IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = DTYPE = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = DTYPE IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]DTYPE) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 5 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL5 = 'TSELFIL[?NUM=]5' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = DTYPE = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 5 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL5 = 'LISTFIL[?N=]5' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL5 = 'TSELFIL[?N=]5' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = DTYPE = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]DTYPE [?LISTFIL=]LISTFIL5 [?TSELFIL=]TSELFIL5 [?DECODEL 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]DTYPE [?LISTFIL=]LISTFIL5 [?TSELFIL=]TSELFIL5 [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST5 = 'PORTION_LST[?N=]5' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST5,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = DTYPE IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 5 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL5 = 'LISTFIL[?N=]5' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL5 = 'TSELFIL[?N=]5' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  FALSE  IF:   ?ATT = DTYPE IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = D = TLISTFLT(@,DECODEL) 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL5 
                    === Macro started  <MUTIL NULL LISTFIL5 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL5 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL5                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL5 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]DTYPE FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL5 [?ATT=]DTYPE TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL5 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL5 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL5 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL5 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]DTYPE 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]DTYPE 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV77  TRUE   IF:   ?LISTSET = EFFDTTM IN LISTWRK 
            RDVSAV77  TRUE   IF:   ?LISTSET = EFFDTTM IN DVATTWKR 
            RDVSAV77  TRUE   IF:   ?TEXT = * = TLISTFLT(@,TEXT) 
            RDVSAV77  TRUE   IF:   APPWK(HOLDER0,1) = [?TEXT=]* 
                RDVAFLT1  TRUE   IF:   AGGLEVEL = NULL 
                RDVAFLT1  TRUE   IF:   DDVAFLT(DATA_AFLTLIST,D) = " " 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AFLTLIST,D) = "INVISIBLE" 
                RDVAFLT1  TRUE   IF:   DDVAFLT(STYLE_AGGLEVBOX,D) = "DISABLED" 
                RDVAFLT1  TRUE   IF:   ?DIM = EFFDTTM = LISTWRK(@,C) 
                RDVAFLT1  TRUE   IF:   ?DIM = EFFDTTM IN ATT 
                RDVAFLT1  TRUE   IF:   SELECT >0 [$A=]TTDF1(*,[?DIM=]EFFDTTM) 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN - DVSFLTR 
                RDVAFLT1  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAFLT1  TRUE   IF:   CHOSEN = CHOSEN * TCHOSENR 
                RDVAFLT1  TRUE   IF:   ?SIZ = 0 = SIZEOF CHOSEN 
                RDVAFLT1  FALSE  IF:   [?SIZ=]0 GT 0 
            RDVSAV77  FALSE  IF:   INITIALIZE_AGGREGATION_FILTER 
            RDVSAV77  TRUE   IF:   TRUE 
            RDVSAV77  TRUE   IF:   ?SORT = N = TLISTFLT(@,SORTTYPE) 
            RDVSAV77  TRUE   IF:   SETIND SORTTYPE([?SORT=]N) 
            RDVSAV77  TRUE   IF:   ?DECODEL = D = TLISTFLT(@,DECODEL) 
            RDVSAV77  TRUE   IF:   SETIND DECODEL([?DECODEL=]D) 
                    RDVAF15A  TRUE   IF:   ?TYPI = -1 = INDEXOF FLTTYP(@) 
                    RDVAF15A  FALSE  IF:   [?TYPI=]-1 NE -1 
                    RDVAF15A  TRUE   IF:   ?TYP = NONE 
                    RDVAF15A  TRUE   IF:   ?NUM = 6 = TLISTWRK(@,LISTNUM) 
                    RDVAF15A  TRUE   IF:   ?TAB = TSELFIL6 = 'TSELFIL[?NUM=]6' 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ SELALL 
                    RDVAF15A  FALSE  IF:   [?TYP=]NONE EQ CLRALL 
                    RDVAF15A  TRUE   IF:   [?TYP=]NONE EQ NONE 
                    RDVAF15A  TRUE   THEN: SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   SELECT_CLEAR_ALL_LIST 
                RDVAFL21  TRUE   IF:   ?LISTSET = EFFDTTM = LISTWRK(@,C) 
                RDVAFL21  TRUE   IF:   ?N = 6 = TLISTWRK(@,LISTNUM) 
                RDVAFL21  TRUE   IF:   ?LISTFIL = LISTFIL6 = 'LISTFIL[?N=]6' 
                RDVAFL21  TRUE   IF:   ?TSELFIL = TSELFIL6 = 'TSELFIL[?N=]6' 
                RDVAFL21  TRUE   IF:   SETIND APPWKR(HOLDER0) 
                RDVAFL21  TRUE   IF:   ?FTEXT = * = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   [?FTEXT=]* NE " " 
                RDVAFL21  TRUE   IF:   ?DECODEL = D = DECODEL(@,C) 
                RDVAFL21  TRUE   IF:   ?COU = 0 = SETCOU AGGLEVEL 
                RDVAFL21  TRUE   IF:   ?DIM = EFFDTTM = LISTWRK(@,C) 
                RDVAFL21  FALSE  IF:   [?COU=]0 GT 0 
                    RDVAFL24  FALSE  IF:   APPWK(@,1) NE "*" 
                    RDVAFL24  TRUE   IF:   TRUE 
                    RDVAFL24  TRUE   THEN: APPLY_TEXT_MASK_FILTER [?DIM=]EFFDTTM [?LISTFIL=]LISTFIL6 [?TSELFIL=]TSELFIL6 [?DECOD 
                RDVAFL21  TRUE   IF:   APPLY_TEXT_MASK_FILTER [?DIM=]EFFDTTM [?LISTFIL=]LISTFIL6 [?TSELFIL=]TSELFIL6 [?DECODEL=] 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,TEXT) = APPWK(@,1) 
                RDVAFL21  TRUE   IF:   ?PORTION = PORTION_LST6 = 'PORTION_LST[?N=]6' 
                RDVAFL21  TRUE   IF:   AMPSET [&1=]D = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   FILL [:DVDLG=]DDVFLT([?PORTION=]PORTION_LST6,D) = "[&1=]D" 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,DECODEL) = [?DECODEL=]D 
                RDVAFL21  TRUE   IF:   ?SORTTYP = N = CODEOF SORTTYPE(@) 
                RDVAFL21  TRUE   IF:   TLISTFLT(@,SORTTYPE) = [?SORTTYP=]N 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = N = APPDATA(DVIGNORECASE,1) 
                    RDVAFL37  FALSE  IF:   [?IGNCASE=]N EQ "Y" 
                    RDVAFL37  TRUE   IF:   ?IGNCASE = " " 
                    RDVAFL37  TRUE   IF:   ?ATT = EFFDTTM IN LISTWRK 
                    RDVAFL37  TRUE   IF:   ?N = 6 = TLISTWRK(@,LISTNUM) 
                    RDVAFL37  TRUE   IF:   ?LISTFIL = LISTFIL6 = 'LISTFIL[?N=]6' 
                    RDVAFL37  TRUE   IF:   ?TSELFIL = TSELFIL6 = 'TSELFIL[?N=]6' 
                    RDVAFL37  TRUE   IF:   ?SORTTYP = N = TLISTFLT(@,SORTTYPE) 
                    RDVAFL37  TRUE   IF:   ?ATT = EFFDTTM IN DVATTACS 
                    RDVAFL37  TRUE   IF:   ?DECODE = "C" 
                    RDVAFL37  TRUE   IF:   [?SORTTYP=]N EQ "N" 
                    RDVAFL37  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL6 
                    === Macro started  <MUTIL NULL LISTFIL6 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     LISTFIL6 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL LISTFIL6                            total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL NULL [?LISTFIL=]LISTFIL6 
                    RDVAFL37  TRUE   IF:   FMTDATA [?ATT=]EFFDTTM FDV(BUILD_LISTFIL) [?LISTFIL=]LISTFIL6 [?ATT=]EFFDTTM TCHOSENR 
                    === Macro started  <MUTIL TABMATCH TSELFIL6 TCHOSEN ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     TSELFIL6 = TCHOSEN MATCH                 elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH TSELFIL6 TCHOSEN                total  time:     0.00 sec 
 
                    RDVAFL37  TRUE   IF:   <MUTIL TABMATCH [?TSELFIL=]TSELFIL6 TCHOSEN 
                    RDVAFL37  TRUE   THEN: RDVAFLT_SORT_FILTER_LIST [?ATT=]EFFDTTM 
                RDVAFL21  TRUE   IF:   RDVAFLT_SORT_FILTER_LIST [?LISTSET=]EFFDTTM 
                RDVAFL21  TRUE   THEN: APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   IF:   APPLY_ADVANCED_FILTER_SELECTION 
            RDVSAV77  TRUE   THEN: RDVSAV_APPLY_ADVANCE_FILTERS 
        RDVC7G    TRUE   IF:   RDVSAV_APPLY_ADVANCE_FILTERS 
            RDVSAV64  TRUE   IF:   TSELECT DVFLTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV64  TRUE   IF:   DVFLTRR = DVFLTRR - TCHOSENR 
            RDVSAV64  TRUE   IF:   FREE [:CNT=]**** 
            RDVSAV64  TRUE   IF:   :CNT = 1 
            RDVSAV64  TRUE   IF:   ?ATT = _DIV IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 1 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL1 = 'TSELFIL[?N=]1' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL1(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
            RDVSAV64  FALSE  IF:   [?SETCOU=]0 GT 0 
            RDVSAV64  TRUE   IF:   ?ATT = PLA IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 2 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL2 = 'TSELFIL[?N=]2' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL2(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
            RDVSAV64  FALSE  IF:   [?SETCOU=]0 GT 0 
            RDVSAV64  TRUE   IF:   ?ATT = MAT IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 3 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL3 = 'TSELFIL[?N=]3' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL3(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 1 = SETCOU TCHOSENR 
            RDVSAV64  TRUE   IF:   [?SETCOU=]1 GT 0 
            RDVSAV64  TRUE   IF:   ?FILTER = LF1020DD IN TCHOSENR 
            RDVSAV64  TRUE   IF:   ?NEWROW = _IDEMAND-F1 = '[:VIEW-F:CNT=]****' 
            RDVSAV64  TRUE   IF:   APPENDIF DVFLTRR [?NEWROW=]_IDEMAND-F1 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F1,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F1,LISTSET) = [?ATT=]MAT 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F1,FILTER) = [?FILTER=]LF1020DD 
            RDVSAV64  TRUE   IF:   :CNT = 2 = [:CNT=]2 + 1 
            RDVSAV64  TRUE   THEN: RDVSAV_SAVE_SELECTED_FILTERS_FOR_VIEW 
            RDVSAV64  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 4 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL4 = 'TSELFIL[?N=]4' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL4(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 1 = SETCOU TCHOSENR 
            RDVSAV64  TRUE   IF:   [?SETCOU=]1 GT 0 
            RDVSAV64  TRUE   IF:   ?FILTER = 0000025055 IN TCHOSENR 
            RDVSAV64  TRUE   IF:   ?NEWROW = _IDEMAND-F2 = '[:VIEW-F:CNT=]****' 
            RDVSAV64  TRUE   IF:   APPENDIF DVFLTRR [?NEWROW=]_IDEMAND-F2 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F2,DVVIEW) = [:VIEW=]_IDEMAND 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F2,LISTSET) = [?ATT=]SHIPTO 
            RDVSAV64  TRUE   IF:   DVFLTR([?NEWROW=]_IDEMAND-F2,FILTER) = [?FILTER=]0000025055 
            RDVSAV64  TRUE   IF:   :CNT = 3 = [:CNT=]3 + 1 
            RDVSAV64  TRUE   THEN: RDVSAV_SAVE_SELECTED_FILTERS_FOR_VIEW 
            RDVSAV64  TRUE   IF:   ?ATT = DTYPE IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 5 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL5 = 'TSELFIL[?N=]5' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL5(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
            RDVSAV64  FALSE  IF:   [?SETCOU=]0 GT 0 
            RDVSAV64  TRUE   IF:   ?ATT = EFFDTTM IN LISTWRK 
            RDVSAV64  TRUE   IF:   ?N = 6 = TLISTWRK(@,LISTNUM) 
            RDVSAV64  TRUE   IF:   ?TSELFIL = TSELFIL6 = 'TSELFIL[?N=]6' 
            RDVSAV64  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL6(*,1) > 0 
            RDVSAV64  TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
            RDVSAV64  FALSE  IF:   [?SETCOU=]0 GT 0 
        RDVC7G    TRUE   IF:   RDVSAV_SAVE_SELECTED_FILTERS_FOR_VIEW 
        RDVC7G    TRUE   IF:   VMACTION [?CURVM=]CDVCUST:_IDEMAND_VM !RESET FilterSettings 
        RDVC7G    TRUE   THEN: RDVCALL_INITIALIZE_FILTERS_IF_SHOWING_SAVED_VIEW 
    RDVC7B    TRUE   IF:   RDVCALL_INITIALIZE_FILTERS_IF_SHOWING_SAVED_VIEW 
            RDVAT501  TRUE   IF:   ATTWK = NULL 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,FILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = TCHOSENR 
            RDVAT501  TRUE   IF:   BASEWK = TCHOSENR 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = ATTWK + TCHOSENR 
            RDVAT501  TRUE   IF:   NBASEWK = TCHOSENR 
            RDVAT501  TRUE   THEN: RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   ?SIZE = 6 = SIZEOF ATTWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?SIZE=]6 GT 0 
        RDVC9     FALSE  IF:   [?BASE=]6 GT 6 
        RDVC9     TRUE   IF:   ?SIZE = 0 = SIZEOF NBASEWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?BASE=]6 LE 6 
        RDVC9     FALSE  IF:   [?SIZE=]0 GT 0 
        RDVC9     TRUE   IF:   TRUE 
        RDVC9     TRUE   THEN: RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
    RDVC7B    TRUE   IF:   RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
        RDVC7A    TRUE   IF:   ?ENTRY = "DEBUG" 
        RDVC7A    TRUE   IF:   ?VIEWTYP = DATALIST = DVOPT([:VIEW=]_IDEMAND,VIEWTYPE) 
        RDVC7A    TRUE   IF:   ?X = MD_NUM_DATALIST = '[:TABTYPE_:TABFMT_?VIEWTYP=]MD' 
        RDVC7A    TRUE   IF:   ?X = MD_NUM_DATALIST IN DVOPTCTC 
        RDVC7A    TRUE   IF:   SELECT DVTABCTL(*,[?X=]MD_NUM_DATALIST) != " " 
        RDVC7A    TRUE   IF:   ?TMP = "DDVSCR" 
        RDVC7A    TRUE   IF:   ?TMP = DDVSCR IN TCHOSENR 
        RDVC7A    TRUE   IF:   FILL CDVVCTL(VALUEFILTER,1) = NO 
        RDVC7A    TRUE   IF:   FILL ADVFILT(*,1) = "YES" 
                RDVAT501  TRUE   IF:   ATTWK = NULL 
                RDVAT501  TRUE   IF:   SELECT DVATTWK(*,FILTER) = "Y" 
                RDVAT501  TRUE   IF:   ATTWK = TCHOSENR 
                RDVAT501  TRUE   IF:   BASEWK = TCHOSENR 
                RDVAT501  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
                RDVAT501  TRUE   IF:   ATTWK = ATTWK + TCHOSENR 
                RDVAT501  TRUE   IF:   NBASEWK = TCHOSENR 
                RDVAT501  TRUE   THEN: RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
            RDVC7L    TRUE   IF:   RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
            RDVC7L    TRUE   IF:   ?SIZE = 6 = SIZEOF BASEWK 
            RDVC7L    TRUE   IF:   [?SIZE=]6 GT 0 
            RDVC7L    TRUE   IF:   ?ROW = _DIV IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 0 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]0 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]0 LT 6 
            RDVC7L    TRUE   IF:   ?J = 1 = [?I=]0 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW1 = 'FLTRSHOW[?J=]1' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW1,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7L    TRUE   IF:   ?ROW = PLA IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 1 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]1 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]1 LT 6 
            RDVC7L    TRUE   IF:   ?J = 2 = [?I=]1 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW2 = 'FLTRSHOW[?J=]2' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW2,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7L    TRUE   IF:   ?ROW = MAT IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 2 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]2 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]2 LT 6 
            RDVC7L    TRUE   IF:   ?J = 3 = [?I=]2 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW3 = 'FLTRSHOW[?J=]3' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW3,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7L    TRUE   IF:   ?ROW = SHIPTO IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 3 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]3 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]3 LT 6 
            RDVC7L    TRUE   IF:   ?J = 4 = [?I=]3 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW4 = 'FLTRSHOW[?J=]4' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW4,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7L    TRUE   IF:   ?ROW = DTYPE IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 4 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]4 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]4 LT 6 
            RDVC7L    TRUE   IF:   ?J = 5 = [?I=]4 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW5 = 'FLTRSHOW[?J=]5' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW5,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7L    TRUE   IF:   ?ROW = EFFDTTM IN BASEWK 
            RDVC7L    TRUE   IF:   ?I = 5 = INDEXOF BASEWK(@) 
            RDVC7L    TRUE   IF:   [?I=]5 LT [?SIZE=]6 
            RDVC7L    TRUE   IF:   [?I=]5 LT 6 
            RDVC7L    TRUE   IF:   ?J = 6 = [?I=]5 + 1 
            RDVC7L    TRUE   IF:   ?FILT = FLTRSHOW6 = 'FLTRSHOW[?J=]6' 
            RDVC7L    TRUE   IF:   FILL ADVFILT([?FILT=]FLTRSHOW6,1) = "NO" 
            RDVC7L    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
        RDVC7A    TRUE   IF:   RDVCALL_FILL_ADVFILT_FOR_DOM_FILTER_VISIBILITY 
            RDVC7K    TRUE   IF:   ?SIZE = 0 = SIZEOF NBASEWK 
            RDVC7K    FALSE  IF:   [?SIZE=]0 GT 0 
            RDVC7K    TRUE   IF:   TRUE 
            RDVC7K    TRUE   THEN: RDVCALL_FILL_ADVFILT_FOR_AGG_FILTER_VISIBILITY 
        RDVC7A    TRUE   IF:   RDVCALL_FILL_ADVFILT_FOR_AGG_FILTER_VISIBILITY 
        RDVC7A    TRUE   THEN: RDVCALL_FILL_APPWK_FOR_FILTER_VISIBILITY 
    RDVC7B    TRUE   IF:   RDVCALL_FILL_APPWK_FOR_FILTER_VISIBILITY 
        RDVC7M    TRUE   IF:   SELECT DVATTUSG(*,@) != BLANK 
        RDVC7M    TRUE   IF:   ?COU = 6 = SETCOU TCHOSENR 
        RDVC7M    TRUE   IF:   [?COU=]6 GT 0 
        RDVC7M    TRUE   IF:   WHILE [?I=]0 
        RDVC7M    TRUE   IF:   ?I = 1 = [?I=]1 + 1 
        RDVC7M    TRUE   IF:   [?I=]1 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 01 = STRFMT([?I=]1,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT01 = 'AGFILT[?NUM=]01' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK01 = 'AGFWK[?NUM=]01' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT07 = [?AGFILT=]AGFILT01 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT07 = [&1=]MATATT07 
            RDVC7P    FALSE  IF:   ?ROW = MATATT07 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]1 
        RDVC7M    TRUE   IF:   ?I = 2 = [?I=]2 + 1 
        RDVC7M    TRUE   IF:   [?I=]2 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 02 = STRFMT([?I=]2,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT02 = 'AGFILT[?NUM=]02' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK02 = 'AGFWK[?NUM=]02' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]DAYOF = [?AGFILT=]AGFILT02 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = DAYOF = [&1=]DAYOF 
            RDVC7P    FALSE  IF:   ?ROW = DAYOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]2 
        RDVC7M    TRUE   IF:   ?I = 3 = [?I=]3 + 1 
        RDVC7M    TRUE   IF:   [?I=]3 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 03 = STRFMT([?I=]3,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT03 = 'AGFILT[?NUM=]03' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK03 = 'AGFWK[?NUM=]03' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]WEEKOF = [?AGFILT=]AGFILT03 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = WEEKOF = [&1=]WEEKOF 
            RDVC7P    FALSE  IF:   ?ROW = WEEKOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]3 
        RDVC7M    TRUE   IF:   ?I = 4 = [?I=]4 + 1 
        RDVC7M    TRUE   IF:   [?I=]4 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 04 = STRFMT([?I=]4,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT04 = 'AGFILT[?NUM=]04' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK04 = 'AGFWK[?NUM=]04' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MONTHOF = [?AGFILT=]AGFILT04 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MONTHOF = [&1=]MONTHOF 
            RDVC7P    FALSE  IF:   ?ROW = MONTHOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]4 
        RDVC7M    TRUE   IF:   ?I = 5 = [?I=]5 + 1 
        RDVC7M    TRUE   IF:   [?I=]5 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 05 = STRFMT([?I=]5,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT05 = 'AGFILT[?NUM=]05' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK05 = 'AGFWK[?NUM=]05' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT01 = [?AGFILT=]AGFILT05 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT01 = [&1=]MATATT01 
            RDVC7P    FALSE  IF:   ?ROW = MATATT01 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]5 
        RDVC7M    TRUE   IF:   ?I = 6 = [?I=]6 + 1 
        RDVC7M    TRUE   IF:   [?I=]6 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 06 = STRFMT([?I=]6,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT06 = 'AGFILT[?NUM=]06' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK06 = 'AGFWK[?NUM=]06' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT10 = [?AGFILT=]AGFILT06 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT10 = [&1=]MATATT10 
            RDVC7P    FALSE  IF:   ?ROW = MATATT10 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]6 
        RDVC7M    TRUE   IF:   ?I = 7 = [?I=]7 + 1 
        RDVC7M    FALSE  IF:   [?I=]7 LE [?COU=]6 
        RDVC7M    BREAK  IF:   BREAK [?I=]7 
    RDVC7B    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC702   TRUE   IF:   FILL ADVFILT(*,2) = "" 
        RDVC702   TRUE   IF:   TSELECT DVTXTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
        RDVC702   TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
        RDVC702   FALSE  IF:   [?SETCOU=]0 GT 0 
        RDVC702   TRUE   IF:   TRUE 
        RDVC702   TRUE   THEN: RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
    RDVC7B    TRUE   IF:   RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
        RDVSC100  TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
        RDVSC100  TRUE   IF:   :TABLE = _IDEMAND = DVCTL([:DVTABLE=]_IDEMAND,TABLE) 
        RDVSC100  TRUE   IF:   SORT DVSCRGP 
        RDVSC100  TRUE   IF:   SORT DVSCRDTR 
        RDVSC100  TRUE   IF:   ?MASK = _IDEMAND-* = '[:DVTABLE-*=]_IDEMAND' 
        RDVSC100  TRUE   IF:   SELECT DVSCRGP([?MASK=]_IDEMAND-*,C) 
        RDVSC100  TRUE   IF:   DVSCRGWK = CHOSEN 
        RDVSC100  TRUE   IF:   SORT DVSCRGWK(D) A 
        RDVSC100  TRUE   IF:   ?NONE = None = LNGTEXT(DV_NONE,@) 
        RDVSC100  TRUE   IF:   APPENDIF DVSCRGWK "NA" [?NONE=]None 
        RDVSC100  TRUE   IF:   RESEQUENCE DVSCRGWK NA TOP 
        RDVSC100  TRUE   IF:   ?SCRGP =  = DVOPT([:DVTABLE=]_IDEMAND,SCRGP) 
        RDVSC100  TRUE   IF:   ?SCRGP2 = _IDEMAND- = '[:DVTABLE-?SCRGP=]_IDEMAND' 
        RDVSC100  FALSE  IF:   ?SCRGP2 = _IDEMAND- IN DVSCRGWK 
        RDVSC100  TRUE   IF:   SETIND DVSCRGWK = 0 
            RDVSC201  TRUE   IF:   DVSCRDWK = NULL 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_ADDGRP,D) = 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_DELETEGRP,D) = DISABLED 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_DTLSBOX,D) = DISABLED 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_ADDDTL,D) = DISABLED 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_REMOVEDTL,D) = DISABLED 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_DETAILS,D) = DISABLED 
            RDVSC201  TRUE   IF:   DVSCRRI = 0 
            RDVSC201  TRUE   IF:   DVSCRCI = 0 
            RDVSC201  TRUE   IF:   DVSCRCLI = 0 
            RDVSC201  TRUE   IF:   ?VIEWTYP = DATALIST = CODEOF VIEWTYPE(@) 
            RDVSC201  TRUE   IF:   [?VIEWTYP=]DATALIST EQ "DATALIST" 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_OPTNSBOX,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_SCRROWBOX,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_SCRROWLAB,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_SCRCOLBOX,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_SCRCOLLAB,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_COLORBOX,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_COLORLAB,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_COLORSAMP,D) = INVISIBLE 
            RDVSC201  TRUE   IF:   DDVSCR(STYLE_COLORBTN,D) = INVISIBLE 
            RDVSC201  TRUE   THEN: RDVSCR_DISABLE_DDVSCR_CONTROLS 
        RDVSC100  TRUE   IF:   RDVSCR_DISABLE_DDVSCR_CONTROLS 
        RDVSC100  TRUE   THEN: RDVSCR_INITIALIZE_SCREEN_DIALOG 
    RDVC7B    TRUE   IF:   RDVSCR_INITIALIZE_SCREEN_DIALOG 
        RDVSC232  TRUE   IF:   ?SCRATT =  = DVCTL([:DVTABLE=]_IDEMAND,SCRATT) 
        RDVSC232  TRUE   IF:   [?SCRATT=] EQ 
        RDVSC232  TRUE   IF:   ?DESC = Demand = DVTABLES([:DVTABLE=]_IDEMAND,D) 
        RDVSC232  TRUE   IF:   [?DESC=]Demand NE 
        RDVSC232  TRUE   IF:   DVSCRAWK = NULL 
        RDVSC232  TRUE   IF:   APPEND DVSCRAWK 1 [?DESC=]Demand 
        RDVSC232  TRUE   THEN: RDVSCR_DETERMINE_SCREEN_ATTRIBUTES 
    RDVC7B    TRUE   IF:   RDVSCR_DETERMINE_SCREEN_ATTRIBUTES 
    RDVC7B    TRUE   THEN: RDVCALL_INITIALIZE_FILTERS 
==> Rule  >RDVC7B                                         total  time:     0.00 sec 
 
==> Rule  started  >RSVVW001 
    RSVVW001  TRUE   IF:   CSWCHVW = NULL 
    RSVVW001  TRUE   IF:   FILL SAVEVW(DESC,1) = "" 
        RSVVW002  TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
            RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
            RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
            RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
            RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
        RSVVW002  TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
        RSVVW002  TRUE   IF:   DVVIEWS2 = NULL 
        RSVVW002  TRUE   IF:   SELECT DVOPT(*,DVTABLE) = [?TAB=]_IDEMAND 
        RSVVW002  TRUE   IF:   DVVIEWS2 = TCHOSENR 
        RSVVW002  TRUE   IF:   SELECT DVOPT(*,OVRVIEW) != BLANK 
        RSVVW002  TRUE   IF:   DVVIEWS2 = DVVIEWS2 - TCHOSENR 
        RSVVW002  FALSE  IF:  NOT ?TAB = _IDEMAND IN DVVIEWS2 
        RSVVW002  TRUE   IF:   REMOVE DVVIEWS2 [?TAB=]_IDEMAND 
        RSVVW002  TRUE   IF:   SORT DVVIEWS2(D) A 
        RSVVW002  TRUE   IF:   SETIND DVVIEWS2 = -1 
        RSVVW002  TRUE   THEN: RDVCALL_INITIALIZE_SAVED_VIEWS 
    RSVVW001  TRUE   IF:   RDVCALL_INITIALIZE_SAVED_VIEWS 
    RSVVW001  TRUE   IF:   ?SIZE = 0 = SIZEOF DVVIEWS2 
    RSVVW001  FALSE  IF:   [?SIZE=]0 > 0 
    RSVVW001  TRUE   IF:   TRUE 
    RSVVW001  TRUE   THEN: RDVCALL_SAVED_VIEW_SETUP 
==> Rule  >RSVVW001                                       total  time:     0.00 sec 
 
==> Rule  started  >RDVC3 DATALIST 
    RDVC3     TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
        RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
        RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?DATA = DATALIST = [%1=]DATALIST 
        RDV888    TRUE   IF:   ?TAB = _IDEMAND IN DVTABLES 
        RDV888    TRUE   IF:   ?USRBEF =  = DVCTL(@,DVSETUP) 
        RDV888    FALSE  IF:   [?USRBEF=] NE 
        RDV888    TRUE   IF:   TRUE 
        RDV888    TRUE   THEN: RDV_RUN_USER_BEFORE [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   RDV_RUN_USER_BEFORE [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?OLDTAB = _IDEMAND = APPWK(DVTABLE,1) 
    RDVC3     TRUE   IF:   ?TABTYPE = MD = DVCTL(@,TABTYPE) 
    RDVC3     TRUE   IF:   APPWK(DVTABLE,1) = [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?CURVIEW = _IDEMAND = DVEDITS3([?TAB=]_IDEMAND,2) 
    RDVC3     TRUE   IF:   ?TMPVTYP = DATALIST = DVOPT([?CURVIEW=]_IDEMAND,VIEWTYPE) 
    RDVC3     TRUE   IF:   FREE [:VIEWTYP=]**** 
    RDVC3     TRUE   IF:   :VIEWTYP = DATALIST = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   FREE [:VIEW=]**** 
    RDVC3     TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
    RDVC3     TRUE   IF:   FREE [:ISPMSHO=]**** 
    RDVC3     TRUE   IF:   :ISPMSHO = FALSE 
    RDVC3     TRUE   IF:   ?TMPSWCH = ON = APPDATA(DVPMSWITCH,1) 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = "OFF" 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   ?GF = YES = APPDATA(DVGLOBALFILTER,1) 
    RDVC3     TRUE   IF:   [?GF=]YES == YES 
            RGF4H     TRUE   IF:   GFFILT = [&BLANK=] 
            RGF4H     TRUE   IF:   ?FLT = _DIV IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 1 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 = 'FLTRSHOW[?SLNUM=]1' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = _DIV IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(_DIV,GFSWITCH) = 'GFUICTL([?FLT=]_DIV,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(_DIV,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = PLA IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 2 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 = 'FLTRSHOW[?SLNUM=]2' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = PLA IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(PLA,GFSWITCH) = 'GFUICTL([?FLT=]PLA,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(PLA,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = MAT IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 3 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 = 'FLTRSHOW[?SLNUM=]3' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = MAT IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(MAT,GFSWITCH) = 'GFUICTL([?FLT=]MAT,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(MAT,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = SHIPTO IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 4 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 = 'FLTRSHOW[?SLNUM=]4' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = SHIPTO IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(SHIPTO,GFSWITCH) = 'GFUICTL([?FLT=]SHIPTO,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = DTYPE IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 5 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 = 'FLTRSHOW[?SLNUM=]5' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = DTYPE IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(DTYPE,GFSWITCH) = 'GFUICTL([?FLT=]DTYPE,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = EFFDTTM IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 6 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 = 'FLTRSHOW[?SLNUM=]6' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = EFFDTTM IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(EFFDTTM,GFSWITCH) = 'GFUICTL([?FLT=]EFFDTTM,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
        RGF4      TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4B     TRUE   IF:   FREE [:NUM=]**** 
            RGF4B     TRUE   IF:   :NUM = 10 
            RGF4B     TRUE   IF:   ?ROW = _DIV IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = PLA IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = MAT IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = SHIPTO IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = DTYPE IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = EFFDTTM IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   TRUE 
            RGF4B     TRUE   THEN: RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
        RGF4      TRUE   IF:   RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
            RGF4C     TRUE   IF:   TMPSET3 = NULL 
            RGF4C     TRUE   IF:   TMPSET4 = NULL 
                RGF4C1    TRUE   IF:   SELECT GFFILT(*,1) != BLANK 
                RGF4C1    TRUE   IF:   ?SIZ = 6 = SIZEOF TCHOSENR 
                RGF4C1    FALSE  IF:   [?SIZ=]6 == 0 
                RGF4C1    TRUE   IF:   ?ONE = 1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW1 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(_DIV,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW2 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(PLA,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW3 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(MAT,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW4 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(SHIPTO,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW5 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(DTYPE,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW6 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(EFFDTTM,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
            RGF4C     TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
            RGF4C     TRUE   IF:   ?SIZ1 = 6 = SIZEOF TMPSET3 
            RGF4C     TRUE   IF:   ?SIZ2 = 6 = SIZEOF TMPSET4 
            RGF4C     TRUE   IF:   [?SIZ1=]6 == [?SIZ2=]6 
            RGF4C     TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT 
        RGF4      TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT 
            RGF5A1    TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
            RGF5A1    TRUE   IF:   ?SIZE = 0 = SIZEOF CHOSEN 
            RGF5A1    FALSE  IF:   [?SIZE=]0 > 0 
            RGF5A1    TRUE   IF:   FILL APPWK(DVCLRGF_ENABLED,1) = 0 
            RGF5A1    TRUE   THEN: RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
        RGF4      TRUE   IF:   RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
        RGF4      TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
    RDVC3     TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
        RGF2      TRUE   IF:   ?INDFIL = NO = APPDATA(DVGFINDFILTER,1) 
        RGF2      TRUE   IF:   [?INDFIL=]NO NE YES 
        RGF2      TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
        RGF2      TRUE   IF:   GFSETS = GFSETS * CHOSEN 
        RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
        RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
        RGF2      FALSE  IF:   [?CASE=]PS EQ "SP" 
        RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
        RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
        RGF2      TRUE   IF:   [?CASE=]PS EQ "PS" 
        === Macro started  <MUTIL DO_CMD >RCNSP ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF ">RCNSP" =   THEN GOTO DO_CMD0 
            Mac:         IF " " =   THEN GOTO DO_CMD1 
            Mac:         GOTO DO_CMD1 
            === Rule  started  >RCNSP    ===================== 
                RCNSP     FALSE  IF:   GFUICTL(MAT,GFSWITCH) == 1 
                RCNSP     FALSE  IF:   GFUICTL(PRO,GFSWITCH) == 1 
                RCNSP     TRUE   IF:   TRUE 
                RCNSP     TRUE   IF:   REMOVEIF GFSETS PRO MPPRO 
                RCNSP     TRUE   IF:   REMOVEIF GFSETS MAT MPMAT 
                RCNSP     TRUE   THEN: RCN_ADD_SPECIAL_SETS_TO_GFSETS 
            === Rule  finished >RCNSP    =====================    elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD >RCNSP                            total  time:     0.00 sec 
 
        RGF2      TRUE   IF:   <MUTIL DO_CMD >RCNSP 
        RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
        RGF2      FALSE  IF:   [?SC=]0 GT 0 
        RGF2      TRUE   IF:   TRUE 
        RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
        RGF2      FALSE  IF:   [?SC=]0 GT 0 
        RGF2      TRUE   IF:   TRUE 
        RGF2      TRUE   THEN: RGF_APPLY_GLOBAL_FILTERS 
    RDVC3     TRUE   IF:   RGF_APPLY_GLOBAL_FILTERS 
        RDVC702   TRUE   IF:   FILL ADVFILT(*,2) = "" 
        RDVC702   TRUE   IF:   TSELECT DVTXTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
        RDVC702   TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
        RDVC702   FALSE  IF:   [?SETCOU=]0 GT 0 
        RDVC702   TRUE   IF:   TRUE 
        RDVC702   TRUE   THEN: RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
    RDVC3     TRUE   IF:   RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
        RDVC7M    TRUE   IF:   SELECT DVATTUSG(*,@) != BLANK 
        RDVC7M    TRUE   IF:   ?COU = 6 = SETCOU TCHOSENR 
        RDVC7M    TRUE   IF:   [?COU=]6 GT 0 
        RDVC7M    TRUE   IF:   WHILE [?I=]0 
        RDVC7M    TRUE   IF:   ?I = 1 = [?I=]1 + 1 
        RDVC7M    TRUE   IF:   [?I=]1 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 01 = STRFMT([?I=]1,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT01 = 'AGFILT[?NUM=]01' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK01 = 'AGFWK[?NUM=]01' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT07 = [?AGFILT=]AGFILT01 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT07 = [&1=]MATATT07 
            RDVC7P    FALSE  IF:   ?ROW = MATATT07 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]1 
        RDVC7M    TRUE   IF:   ?I = 2 = [?I=]2 + 1 
        RDVC7M    TRUE   IF:   [?I=]2 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 02 = STRFMT([?I=]2,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT02 = 'AGFILT[?NUM=]02' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK02 = 'AGFWK[?NUM=]02' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]DAYOF = [?AGFILT=]AGFILT02 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = DAYOF = [&1=]DAYOF 
            RDVC7P    FALSE  IF:   ?ROW = DAYOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]2 
        RDVC7M    TRUE   IF:   ?I = 3 = [?I=]3 + 1 
        RDVC7M    TRUE   IF:   [?I=]3 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 03 = STRFMT([?I=]3,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT03 = 'AGFILT[?NUM=]03' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK03 = 'AGFWK[?NUM=]03' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]WEEKOF = [?AGFILT=]AGFILT03 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = WEEKOF = [&1=]WEEKOF 
            RDVC7P    FALSE  IF:   ?ROW = WEEKOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]3 
        RDVC7M    TRUE   IF:   ?I = 4 = [?I=]4 + 1 
        RDVC7M    TRUE   IF:   [?I=]4 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 04 = STRFMT([?I=]4,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT04 = 'AGFILT[?NUM=]04' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK04 = 'AGFWK[?NUM=]04' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MONTHOF = [?AGFILT=]AGFILT04 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MONTHOF = [&1=]MONTHOF 
            RDVC7P    FALSE  IF:   ?ROW = MONTHOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]4 
        RDVC7M    TRUE   IF:   ?I = 5 = [?I=]5 + 1 
        RDVC7M    TRUE   IF:   [?I=]5 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 05 = STRFMT([?I=]5,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT05 = 'AGFILT[?NUM=]05' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK05 = 'AGFWK[?NUM=]05' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT01 = [?AGFILT=]AGFILT05 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT01 = [&1=]MATATT01 
            RDVC7P    FALSE  IF:   ?ROW = MATATT01 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]5 
        RDVC7M    TRUE   IF:   ?I = 6 = [?I=]6 + 1 
        RDVC7M    TRUE   IF:   [?I=]6 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 06 = STRFMT([?I=]6,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT06 = 'AGFILT[?NUM=]06' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK06 = 'AGFWK[?NUM=]06' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT10 = [?AGFILT=]AGFILT06 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT10 = [&1=]MATATT10 
            RDVC7P    FALSE  IF:   ?ROW = MATATT10 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]6 
        RDVC7M    TRUE   IF:   ?I = 7 = [?I=]7 + 1 
        RDVC7M    FALSE  IF:   [?I=]7 LE [?COU=]6 
        RDVC7M    BREAK  IF:   BREAK [?I=]7 
    RDVC3     TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M1   TRUE   IF:   :ISAGGCH = FALSE 
        RDVC7M1   FALSE  IF:   [:ISAGGCH=]FALSE == TRUE 
        RDVC7M1   TRUE   IF:   TRUE 
        RDVC7M1   TRUE   THEN: RDVCALL_APPLY_AGGR_FILTERS [?CURVM=]CDVCUST:_IDEMAND_VM [?RESET=]TRUE 
    RDVC3     TRUE   IF:   RDVCALL_APPLY_AGGR_FILTERS [?CURVM=]CDVCUST:_IDEMAND_VM TRUE 
        RDV201    TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
        RDV201    TRUE   IF:   :TABFMT = NUM = DVCTL([:DVTABLE=]_IDEMAND,TABFMT) 
        RDV201    TRUE   IF:   :TABTYPE = MD = DVCTL([:DVTABLE=]_IDEMAND,TABTYPE) 
        RDV201    TRUE   IF:   :DVPMSAV = ON = APPDATA(PMSWITCH,1) 
        RDV201    TRUE   IF:   FILL APPDATA(PMSWITCH,1) = APPDATA(DVPMSWITCH,1) 
        === Macro started  <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK1,@) ===================== 
            Cmd:  OK     FILL APPWK(MSGP1,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP2,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP3,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP4,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP5,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP6,1) = " "                elapse time:     0.00 sec 
            === Rule  started  >RPM ".10" "LNGTEXT(DV_RDV_PROC1,@)" "LNGTEXT(DV_RDV_TASK1,@)" ===================== 
                RPM       FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                RPM       TRUE   IF:   AMPSET [&1=].10 = [%1=].10 
                RPM       TRUE   IF:   FILL APPWK(PMFRACTION,1) = "[&1=].10" 
                RPM       TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [%2=]LNGTEXT(DV_RDV_PROC1,@) 
                RPM       TRUE   IF:   FILL APPWK(PMPROCESS,1) = "[&1=]Running the Data Viewer..." 
                    RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                    RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                    RMSG      TRUE   IF:   MSGWRKR = NULL 
                    RMSG      TRUE   IF:   :MSGID = PMPROCESS* = '[?MSGID*=]****' 
                        RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                            RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                            RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                            RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                            RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                            RMSGLANG  TRUE   IF:   TRUE 
                            RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                        RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                        RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMPROCESS* 
                    RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                    RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                    RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                        RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                        RMSG1     TRUE   IF:   :COUNT = 1 
                        RMSG1     TRUE   IF:   ?ID = PMPROCESS IN MSGWRKR 
                        RMSG1     TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [?MSGTS=]APPWK([?ID=]PMPROCESS,[:MSGCOL= 
                        RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Running the Data Viewer..." 
                        RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                        RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                        RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                    RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                    RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                    RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                    RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                    RMSG      TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = MSGWRKR(@,D) 
                    RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Running the Data Viewer..." 
                    RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMPROCESS 
                RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMPROCESS 
                RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                RPM       TRUE   IF:   APPWK(PMPROCESS,1) = MSGWRK(@,1,64) 
                RPM       TRUE   IF:   AMPSET [&1=]Preparing the view = [%3=]LNGTEXT(DV_RDV_TASK1,@) 
                RPM       TRUE   IF:   FILL APPWK(PMTASK,1) = "[&1=]Preparing the view" 
                    RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                    RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                    RMSG      TRUE   IF:   MSGWRKR = NULL 
                    RMSG      TRUE   IF:   :MSGID = PMTASK* = '[?MSGID*=]****' 
                        RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                            RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                            RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                            RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                            RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                            RMSGLANG  TRUE   IF:   TRUE 
                            RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                        RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                        RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMTASK* 
                    RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                    RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                    RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                        RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                        RMSG1     TRUE   IF:   :COUNT = 1 
                        RMSG1     TRUE   IF:   ?ID = PMTASK IN MSGWRKR 
                        RMSG1     TRUE   IF:   AMPSET [&1=]Preparing the view = [?MSGTS=]APPWK([?ID=]PMTASK,[:MSGCOL=]1) 
                        RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Preparing the view" 
                        RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                        RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                        RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                    RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                    RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                    RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                    RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                    RMSG      TRUE   IF:   AMPSET [&1=]Preparing the view = MSGWRKR(@,D) 
                    RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Preparing the view" 
                    RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMTASK 
                RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMTASK 
                RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                RPM       TRUE   IF:   APPWK(PMTASK,1) = MSGWRK(@,1,64) 
                    PMUPDATE  FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                    === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
                        Mac:         ON ERROR INITIAL_PM 
                        Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
                        Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
                        Mac:         END 
                    === Macro finished <MREGRAPH =====================    elapse time:     0.00 sec 
                    PMUPDATE  TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
                    PMUPDATE  TRUE   IF:   :PMWINBG = 258 
                    PMUPDATE  TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = APPWK(PMPROCESS,1) 
                    PMUPDATE  TRUE   IF:   AMPSET [&2=]Preparing the view = APPWK(PMTASK,1) 
                    PMUPDATE  TRUE   IF:   ?FRACTIO = .10 = APPWK(PMFRACTION,1) 
                        PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
                        PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                            PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                            PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
                    PMUPDATE  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
                    === Macro started  <MUTIL DO_CMD PMETER .10 "Running the Data Viewer..." "Preparing the view" ============== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO DO_CMD 
                        Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                        Mac:         IF ".10" =   THEN GOTO DO_CMD1 
                        Mac:         IF "Running the Data Viewer..." =   THEN 
                        Mac:         IF "Preparing the view" =   THEN GOTO DO 
                        Mac:         IF " " =   THEN GOTO DO_CMD4 
                        Mac:         GOTO DO_CMD4 
                        Cmd:  OK     PMETER ".10" "Running the Data Viewer... elapse time:     0.11 sec 
                        Mac:         END 
                    === Macro finished <MUTIL    =====================    elapse time:     0.11 sec 
                    PMUPDATE  TRUE   IF:   <MUTIL DO_CMD PMETER [?FRACTIO=].10 "[&1=]Running the Data Viewer..." "[&2=]Preparing 
                    PMUPDATE  TRUE   THEN: UPDATE_PROGRESS_METER_TASK 
                RPM       TRUE   IF:   UPDATE_PROGRESS_METER_TASK 
                RPM       TRUE   THEN: PROGRESS_METER 
            === Rule  finished >RPM      =====================    elapse time:     0.14 sec 
            Mac:         END 
==> Macro <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT        total  time:     0.14 sec 
 
        RDV201    TRUE   IF:   <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK1,@) 
        RDV201    TRUE   THEN: RDV_UPDATE_VIEW_INITIALIZATION 
    RDVC3     TRUE   IF:   RDV_UPDATE_VIEW_INITIALIZATION 
        RDV999    TRUE   IF:   ?USREXIT =  = DVCTL([:DVTABLE=]_IDEMAND,[?PARM=]VIEWBEFORE) 
        === Macro started  <MUTILDV DO_CMD ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF " " =   THEN GOTO DO_CMD0 
            Mac:         GOTO DO_CMD0 
            Mac:         END 
==> Macro <MUTILDV DO_CMD                                 total  time:     0.00 sec 
 
        RDV999    TRUE   IF:   <MUTILDV DO_CMD [?USREXIT=] 
        RDV999    FALSE  IF:   [&RETURN=] EQ "EXIT" 
        RDV999    TRUE   IF:   [&RETURN=] EQ 
        RDV999    TRUE   THEN: RDV_RUN_USER_EXIT [?PARM=]VIEWBEFORE 
    RDVC3     TRUE   IF:   RDV_RUN_USER_EXIT VIEWBEFORE 
    RDVC3     TRUE   IF:   [?DATA=]DATALIST == DATALIST 
        RDVC3A    TRUE   IF:   ?F1 = DATALIST 
        RDVC3A    TRUE   IF:   ?F1 = DATALIST IN VIEWTYPE 
            === Macro started  <MPM .20 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK2,@) ===================== 
                Cmd:  OK     FILL APPWK(MSGP1,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP2,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP3,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP4,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP5,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP6,1) = " "                elapse time:     0.00 sec 
                === Rule  started  >RPM ".20" "LNGTEXT(DV_RDV_PROC1,@)" "LNGTEXT(DV_RDV_TASK2,@)" ===================== 
                    RPM       FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                    RPM       TRUE   IF:   AMPSET [&1=].20 = [%1=].20 
                    RPM       TRUE   IF:   FILL APPWK(PMFRACTION,1) = "[&1=].20" 
                    RPM       TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [%2=]LNGTEXT(DV_RDV_PROC1,@) 
                    RPM       TRUE   IF:   FILL APPWK(PMPROCESS,1) = "[&1=]Running the Data Viewer..." 
                        RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                        RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                        RMSG      TRUE   IF:   MSGWRKR = NULL 
                        RMSG      TRUE   IF:   :MSGID = PMPROCESS* = '[?MSGID*=]****' 
                            RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                                RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                                RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                                RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                                RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                                RMSGLANG  TRUE   IF:   TRUE 
                                RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                            RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                            RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMPROCESS* 
                        RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                        RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                        RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                            RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                            RMSG1     TRUE   IF:   :COUNT = 1 
                            RMSG1     TRUE   IF:   ?ID = PMPROCESS IN MSGWRKR 
                            RMSG1     TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [?MSGTS=]APPWK([?ID=]PMPROCESS,[:MSG 
                            RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Running the Data Viewer..." 
                            RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                            RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                            RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                        RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                        RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                        RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                        RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                        RMSG      TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = MSGWRKR(@,D) 
                        RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Running the Data Viewer..." 
                        RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMPROCESS 
                    RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMPROCESS 
                    RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                    RPM       TRUE   IF:   APPWK(PMPROCESS,1) = MSGWRK(@,1,64) 
                    RPM       TRUE   IF:   AMPSET [&1=]Generating the view = [%3=]LNGTEXT(DV_RDV_TASK2,@) 
                    RPM       TRUE   IF:   FILL APPWK(PMTASK,1) = "[&1=]Generating the view" 
                        RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                        RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                        RMSG      TRUE   IF:   MSGWRKR = NULL 
                        RMSG      TRUE   IF:   :MSGID = PMTASK* = '[?MSGID*=]****' 
                            RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                                RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                                RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                                RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                                RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                                RMSGLANG  TRUE   IF:   TRUE 
                                RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                            RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                            RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMTASK* 
                        RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                        RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                        RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                            RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                            RMSG1     TRUE   IF:   :COUNT = 1 
                            RMSG1     TRUE   IF:   ?ID = PMTASK IN MSGWRKR 
                            RMSG1     TRUE   IF:   AMPSET [&1=]Generating the view = [?MSGTS=]APPWK([?ID=]PMTASK,[:MSGCOL=]1) 
                            RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Generating the view" 
                            RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                            RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                            RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                        RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                        RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                        RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                        RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                        RMSG      TRUE   IF:   AMPSET [&1=]Generating the view = MSGWRKR(@,D) 
                        RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Generating the view" 
                        RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMTASK 
                    RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMTASK 
                    RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                    RPM       TRUE   IF:   APPWK(PMTASK,1) = MSGWRK(@,1,64) 
                        PMUPDATE  FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                        === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
                            Mac:         ON ERROR INITIAL_PM 
                            Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
                            Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
                            Mac:         END 
                        === Macro finished <MREGRAPH =====================    elapse time:     0.00 sec 
                        PMUPDATE  TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
                        PMUPDATE  TRUE   IF:   :PMWINBG = 258 
                        PMUPDATE  TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = APPWK(PMPROCESS,1) 
                        PMUPDATE  TRUE   IF:   AMPSET [&2=]Generating the view = APPWK(PMTASK,1) 
                        PMUPDATE  TRUE   IF:   ?FRACTIO = .20 = APPWK(PMFRACTION,1) 
                            PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
                            PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                                PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                                PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                            PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                            PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
                        PMUPDATE  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
                        === Macro started  <MUTIL DO_CMD PMETER .20 "Running the Data Viewer..." "Generating the view" ========= 
                            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                            Mac:         ON ERROR ERR_RTN 
                            Mac:         GOTO DO_CMD 
                            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                            Mac:         IF ".20" =   THEN GOTO DO_CMD1 
                            Mac:         IF "Running the Data Viewer..." =   THEN 
                            Mac:         IF "Generating the view" =   THEN GOTO D 
                            Mac:         IF " " =   THEN GOTO DO_CMD4 
                            Mac:         GOTO DO_CMD4 
                            Cmd:  OK     PMETER ".20" "Running the Data Viewer... elapse time:     0.00 sec 
                            Mac:         END 
                        === Macro finished <MUTIL    =====================    elapse time:     0.00 sec 
                        PMUPDATE  TRUE   IF:   <MUTIL DO_CMD PMETER [?FRACTIO=].20 "[&1=]Running the Data Viewer..." "[&2=]Gener 
                        PMUPDATE  TRUE   THEN: UPDATE_PROGRESS_METER_TASK 
                    RPM       TRUE   IF:   UPDATE_PROGRESS_METER_TASK 
                    RPM       TRUE   THEN: PROGRESS_METER 
                === Rule  finished >RPM      =====================    elapse time:     0.01 sec 
                Mac:         END 
==> Macro <MPM .20 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT        total  time:     0.01 sec 
 
            RDVX200   TRUE   IF:   <MPM .20 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK2,@) 
            RDVX200   TRUE   IF:   TMPAGCHT = NULL 
            RDVX200   TRUE   IF:   :VIEWTYP = DATALIST = DVOPT([:DVTABLE=]_IDEMAND,VIEWTYPE) 
            RDVX200   FALSE  IF:   [:TABFMT=]NUM EQ "CHAR" 
            RDVX200   TRUE   IF:   [:VIEWTYP=]DATALIST EQ "DATALIST" 
                RDVTXT10  TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
                RDVTXT10  TRUE   IF:   :TABTYPE = MD = DVCTL([:DVTABLE=]_IDEMAND,TABTYPE) 
                RDVTXT10  TRUE   IF:   :TABFMT = NUM = DVCTL([:DVTABLE=]_IDEMAND,TABFMT) 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ LP 
                    RDVTXT11  TRUE   IF:   GETCAT [&0=]_IDEMANR = [:TABLE=]_IDEMAND ROWSET 
                    RDVTXT11  TRUE   IF:   :ROWSET = _IDEMANR = [&0=]_IDEMANR 
                    RDVTXT11  TRUE   IF:   GETCAT [&0=]_IDEMANC = [:TABLE=]_IDEMAND COLSET 
                    RDVTXT11  TRUE   IF:   :COLSET = _IDEMANC = [&0=]_IDEMANC 
                    RDVTXT11  TRUE   THEN: RDVTXT_INITIALIZATE_VARIABLES 
                RDVTXT10  TRUE   IF:   RDVTXT_INITIALIZATE_VARIABLES 
                RDVTXT10  FALSE  IF:   [:DVTABLE=]_IDEMAND EQ "FLOWRPT" 
                RDVTXT10  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   IF:   ?ATT = _IDEMANR IN ATT 
                    RDVAGG50  FALSE  IF:   ?ATT = _IDEMANR IN LISTWRK 
                    RDVAGG50  TRUE   IF:  NOT ?ATT = _IDEMANR IN LISTWRK 
                        RDVAGG53  TRUE   IF:   ATTFLTSW(@,1) = 0 
                        RDVAGG53  TRUE   IF:   ?FILTTAB = DVFILT01 = ATTDEF(@,FILTTAB) 
                        RDVAGG53  TRUE   IF:   [?FILTTAB=]DVFILT01 NE "" 
                        RDVAGG53  TRUE   IF:   SELECT >0 [?FILTTAB=]DVFILT01(*,1) 
                        RDVAGG53  TRUE   IF:   ?COU = 0 = SIZEOF CHOSEN 
                        RDVAGG53  FALSE  IF:   [?COU=]0 GT 0 
                        RDVAGG53  TRUE   IF:   TRUE 
                        RDVAGG53  TRUE   THEN: RDVAGG_FILL_ATTFLTSW [?ATT=]_IDEMANR 
                    RDVAGG50  TRUE   IF:   RDVAGG_FILL_ATTFLTSW [?ATT=]_IDEMANR 
                    RDVAGG50  FALSE  IF:   ?ATT = _IDEMANR IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = _DIV IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = _DIV IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = _DIV IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT02 = ATTDEF([?ATT=]_DIV,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT02 NE 
                    === Macro started  <MUTIL NULL DVFILT02 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT02 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT02                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT02 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 1 = TLISTWRK([?ATT=]_DIV,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL1 = 'TSELFIL[?LISTNUM=]1' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL1(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 0 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL1 = 'LISTFIL[?LISTNUM=]1' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 1 = SETCOU [?LISTFIL=]LISTFIL1 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 1 = SETCOU [?ATT=]_DIV 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]1 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]1 NE [?ATTCNT=]1 
                    RDVAGG50  FALSE  IF:   [?CNT=]0 GT 0 
                    RDVAGG50  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                    RDVAGG50  TRUE   IF:   ?ATT = PLA IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = PLA IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = PLA IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT03 = ATTDEF([?ATT=]PLA,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT03 NE 
                    === Macro started  <MUTIL NULL DVFILT03 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT03 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT03                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT03 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 2 = TLISTWRK([?ATT=]PLA,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL2 = 'TSELFIL[?LISTNUM=]2' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL2(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 0 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL2 = 'LISTFIL[?LISTNUM=]2' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 1 = SETCOU [?LISTFIL=]LISTFIL2 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 1 = SETCOU [?ATT=]PLA 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]1 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]1 NE [?ATTCNT=]1 
                    RDVAGG50  FALSE  IF:   [?CNT=]0 GT 0 
                    RDVAGG50  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                    RDVAGG50  TRUE   IF:   ?ATT = MAT IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = MAT IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = MAT IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT04 = ATTDEF([?ATT=]MAT,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT04 NE 
                    === Macro started  <MUTIL NULL DVFILT04 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT04 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT04                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT04 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 3 = TLISTWRK([?ATT=]MAT,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL3 = 'TSELFIL[?LISTNUM=]3' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL3(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 1 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL3 = 'LISTFIL[?LISTNUM=]3' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 110 = SETCOU [?LISTFIL=]LISTFIL3 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 110 = SETCOU [?ATT=]MAT 
                    RDVAGG50  FALSE  IF:   [?CNT=]1 EQ 0 
                    RDVAGG50  FALSE  IF:   [?CNT=]1 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]1 GT 0 
                    === Macro started  <MUTIL TABMATCH DVFILT04 TSELFIL3 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     DVFILT04 = TSELFIL3 MATCH                elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH DVFILT04 TSELFIL3               total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL TABMATCH [?FILTTAB=]DVFILT04 [?TSELFIL=]TSELFIL3 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(?ATT,1) = 1 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                    RDVAGG50  TRUE   IF:   ?ATT = SHIPTO IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT05 = ATTDEF([?ATT=]SHIPTO,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT05 NE 
                    === Macro started  <MUTIL NULL DVFILT05 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT05 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT05                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT05 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 4 = TLISTWRK([?ATT=]SHIPTO,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL4 = 'TSELFIL[?LISTNUM=]4' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL4(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 1 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL4 = 'LISTFIL[?LISTNUM=]4' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 876 = SETCOU [?LISTFIL=]LISTFIL4 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 876 = SETCOU [?ATT=]SHIPTO 
                    RDVAGG50  FALSE  IF:   [?CNT=]1 EQ 0 
                    RDVAGG50  FALSE  IF:   [?CNT=]1 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]1 GT 0 
                    === Macro started  <MUTIL TABMATCH DVFILT05 TSELFIL4 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO TABMATCH 
                        Cmd:  OK     DVFILT05 = TSELFIL4 MATCH                elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL TABMATCH DVFILT05 TSELFIL4               total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL TABMATCH [?FILTTAB=]DVFILT05 [?TSELFIL=]TSELFIL4 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(?ATT,1) = 1 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                    RDVAGG50  TRUE   IF:   ?ATT = DTYPE IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = DTYPE IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = DTYPE IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT06 = ATTDEF([?ATT=]DTYPE,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT06 NE 
                    === Macro started  <MUTIL NULL DVFILT06 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT06 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT06                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT06 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 5 = TLISTWRK([?ATT=]DTYPE,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL5 = 'TSELFIL[?LISTNUM=]5' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL5(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 0 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL5 = 'LISTFIL[?LISTNUM=]5' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 2 = SETCOU [?LISTFIL=]LISTFIL5 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 2 = SETCOU [?ATT=]DTYPE 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]2 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]2 NE [?ATTCNT=]2 
                    RDVAGG50  FALSE  IF:   [?CNT=]0 GT 0 
                    RDVAGG50  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                    RDVAGG50  TRUE   IF:   ?ATT = EFFDTTM IN ATT 
                    RDVAGG50  TRUE   IF:   ?ATT = EFFDTTM IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ?ATT = EFFDTTM IN LISTWRK 
                    RDVAGG50  TRUE   IF:   ATTFLTSW(@,1) = 0 
                    RDVAGG50  TRUE   IF:   ?FILTTAB = DVFILT07 = ATTDEF([?ATT=]EFFDTTM,FILTTAB) 
                    RDVAGG50  TRUE   IF:   [?FILTTAB=]DVFILT07 NE 
                    === Macro started  <MUTIL NULL DVFILT07 ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO NULL 
                        Cmd:  OK     DVFILT07 = NULL                          elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL NULL DVFILT07                            total  time:     0.00 sec 
 
                    RDVAGG50  TRUE   IF:   <MUTIL NULL [?FILTTAB=]DVFILT07 
                    RDVAGG50  TRUE   IF:   ?LISTNUM = 6 = TLISTWRK([?ATT=]EFFDTTM,LISTNUM) 
                    RDVAGG50  TRUE   IF:   ?TSELFIL = TSELFIL6 = 'TSELFIL[?LISTNUM=]6' 
                    RDVAGG50  TRUE   IF:   SELECT [?TSELFIL=]TSELFIL6(*,1) = 1 
                    RDVAGG50  TRUE   IF:   ?CNT = 0 = SETCOU TCHOSENR 
                    RDVAGG50  TRUE   IF:   ?LISTFIL = LISTFIL6 = 'LISTFIL[?LISTNUM=]6' 
                    RDVAGG50  TRUE   IF:   ?LISTCNT = 102 = SETCOU [?LISTFIL=]LISTFIL6 
                    RDVAGG50  TRUE   IF:   ?ATTCNT = 102 = SETCOU [?ATT=]EFFDTTM 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]102 EQ 0 
                    RDVAGG50  TRUE   IF:   [?CNT=]0 EQ 0 
                    RDVAGG50  FALSE  IF:   [?LISTCNT=]102 NE [?ATTCNT=]102 
                    RDVAGG50  FALSE  IF:   [?CNT=]0 GT 0 
                    RDVAGG50  TRUE   IF:   TRUE 
                    RDVAGG50  TRUE   THEN: RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                RDVTXT10  TRUE   IF:   RDVAGG_ASSIGN_FILTERS_FOR_AGGR 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ "2D" 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ "2D" 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ "2D" 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ "LP" 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMR MAXCT = 1 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMC MAXCT = 1 
                    RDVTXT20  TRUE   IF:   DVTABMR = NULL 
                    RDVTXT20  TRUE   IF:   DVTABMC = NULL 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMR CODE = 64 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMR DESC = 64 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMC CODE = 64 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMC DESC = 64 
                    RDVTXT20  TRUE   IF:   [:TABTYPE=]MD NE "2D" 
                    RDVTXT20  TRUE   IF:   [:TABTYPE=]MD NE "LP" 
                    RDVTXT20  TRUE   IF:   ?MAXCOUN = 759 = SIZEOF [:ROWSET=]_IDEMANR 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMR MAXCOUNT = [?MAXCOUN=]759 
                    RDVTXT20  TRUE   IF:   ?MAXCOUN = 20 = SIZEOF [:COLSET=]_IDEMANC 
                    RDVTXT20  TRUE   IF:   MODIFY DVTABMC MAXCOUNT = [?MAXCOUN=]20 
                    RDVTXT20  TRUE   THEN: RDVTXT_PREPARE_TARGET_TABLE DVTABM 
                RDVTXT10  TRUE   IF:   RDVTXT_PREPARE_TARGET_TABLE DVTABM 
                    RDVTXT40  TRUE   IF:   DVQUERY = NULL 
                        RDVTXT42  TRUE   IF:   APPEND DVQUERY QUERY1 " " 
                        RDVTXT42  TRUE   IF:   APPEND DVQUERY INTO DVTABM 
                        RDVTXT42  TRUE   IF:   ?FROMD = _IDEMAND LOOP ROWSET = '[:TABLE=]_IDEMAND LOOP ROWSET' 
                        RDVTXT42  TRUE   IF:   APPEND DVQUERY FROM [?FROMD=]_IDEMAND LOOP ROWSET 
                        RDVTXT42  TRUE   IF:   APPEND DVQUERY ATTEXP [:ROWSET=]_IDEMANR 
                        RDVTXT42  TRUE   IF:   APPEND DVQUERY WHERE 1 = 1 
                        RDVTXT42  TRUE   IF:   FREE [:OUTPUT=]**** 
                        RDVTXT42  TRUE   IF:   :OUTPUT = DVTABM 
                        RDVTXT42  TRUE   THEN: RDVTXT_ADD_LINES_TO_CHOOSE_QUERY MD 
                    RDVTXT40  TRUE   IF:   RDVTXT_ADD_LINES_TO_CHOOSE_QUERY [:TABTYPE=]MD 
                        RDVTXT44  TRUE   IF:   [:TABFMT=]NUM EQ "NUM" 
                        RDVTXT44  FALSE  IF:   DVOPT([:DVTABLE=]_IDEMAND,SCRGP) NE " " 
                        RDVTXT44  TRUE   IF:   TRUE 
                        RDVTXT44  TRUE   THEN: RDVTXT_ADD_SCREENING_LINE 
                    RDVTXT40  TRUE   IF:   RDVTXT_ADD_SCREENING_LINE 
                    RDVTXT40  TRUE   IF:   APPEND DVQUERY END " " 
                    RDVTXT40  TRUE   IF:   MODIFY [$R=]OWDEF ROWSET = ONE 
                    RDVTXT40  TRUE   IF:   MODIFY [$C=]OLDEF ROWSET = ONE 
                    RDVTXT40  TRUE   IF:   CHOOSE DVQUERY(QUERY1) 
                    RDVTXT40  TRUE   THEN: RDVTXT_SELECT_DATA 
                RDVTXT10  TRUE   IF:   RDVTXT_SELECT_DATA 
                    RDVTXT50  TRUE   IF:   ?SIZE = 0 = SETCOU DVTABMR 
                    RDVTXT50  FALSE  IF:   [?SIZE=]0 GT 0 
                    RDVTXT50  TRUE   IF:   TRUE 
                    RDVTXT50  TRUE   THEN: RDVTXT_REPLACE_CODES_WITH_DESC 
                RDVTXT10  TRUE   IF:   RDVTXT_REPLACE_CODES_WITH_DESC 
                RDVTXT10  FALSE  IF:   [:TABTYPE=]MD EQ LP 
                RDVTXT10  TRUE   IF:   [:VIEWTYP=]DATALIST EQ "DATALIST" 
                    RDVTXT60  FALSE  IF:   DVOPT([:DVTABLE=]_IDEMAND,SORTLV1) EQ "NONE" 
                    RDVTXT60  FALSE  IF:   DVOPT([:DVTABLE=]_IDEMAND,SORTLV1) EQ " " 
                    RDVTXT60  TRUE   IF:   TRUE 
                    RDVTXT60  TRUE   THEN: RDVTXT_SORT_DATALIST 
                RDVTXT10  TRUE   IF:   RDVTXT_SORT_DATALIST 
                RDVTXT10  TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
                RDVTXT10  TRUE   THEN: RDVTXT_RUN_TEXT_VIEWER 
            RDVX200   TRUE   IF:   RDVTXT_RUN_TEXT_VIEWER 
            === Macro started  <MPM .90 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK3,@) ===================== 
                Cmd:  OK     FILL APPWK(MSGP1,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP2,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP3,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP4,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP5,1) = " "                elapse time:     0.00 sec 
                Cmd:  OK     FILL APPWK(MSGP6,1) = " "                elapse time:     0.00 sec 
                === Rule  started  >RPM ".90" "LNGTEXT(DV_RDV_PROC1,@)" "LNGTEXT(DV_RDV_TASK3,@)" ===================== 
                    RPM       FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                    RPM       TRUE   IF:   AMPSET [&1=].90 = [%1=].90 
                    RPM       TRUE   IF:   FILL APPWK(PMFRACTION,1) = "[&1=].90" 
                    RPM       TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [%2=]LNGTEXT(DV_RDV_PROC1,@) 
                    RPM       TRUE   IF:   FILL APPWK(PMPROCESS,1) = "[&1=]Running the Data Viewer..." 
                        RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                        RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                        RMSG      TRUE   IF:   MSGWRKR = NULL 
                        RMSG      TRUE   IF:   :MSGID = PMPROCESS* = '[?MSGID*=]****' 
                            RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                                RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                                RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                                RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                                RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                                RMSGLANG  TRUE   IF:   TRUE 
                                RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                            RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                            RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMPROCESS* 
                        RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                        RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                        RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                            RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                            RMSG1     TRUE   IF:   :COUNT = 1 
                            RMSG1     TRUE   IF:   ?ID = PMPROCESS IN MSGWRKR 
                            RMSG1     TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [?MSGTS=]APPWK([?ID=]PMPROCESS,[:MSG 
                            RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Running the Data Viewer..." 
                            RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                            RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                            RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                        RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                        RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                        RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                        RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                        RMSG      TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = MSGWRKR(@,D) 
                        RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Running the Data Viewer..." 
                        RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMPROCESS 
                    RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMPROCESS 
                    RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                    RPM       TRUE   IF:   APPWK(PMPROCESS,1) = MSGWRK(@,1,64) 
                    RPM       TRUE   IF:   AMPSET [&1=]Formatting the view = [%3=]LNGTEXT(DV_RDV_TASK3,@) 
                    RPM       TRUE   IF:   FILL APPWK(PMTASK,1) = "[&1=]Formatting the view" 
                        RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                        RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                        RMSG      TRUE   IF:   MSGWRKR = NULL 
                        RMSG      TRUE   IF:   :MSGID = PMTASK* = '[?MSGID*=]****' 
                            RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                                RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                                RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                                RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                                RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                                RMSGLANG  TRUE   IF:   TRUE 
                                RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                            RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                            RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                            RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                        RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMTASK* 
                        RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                        RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                        RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                            RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                            RMSG1     TRUE   IF:   :COUNT = 1 
                            RMSG1     TRUE   IF:   ?ID = PMTASK IN MSGWRKR 
                            RMSG1     TRUE   IF:   AMPSET [&1=]Formatting the view = [?MSGTS=]APPWK([?ID=]PMTASK,[:MSGCOL=]1) 
                            RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Formatting the view" 
                            RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                            RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                            RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                        RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                        RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                        RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                            RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                            RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                            RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                            RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                            RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                        RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                        RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                        RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                        RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                        RMSG      TRUE   IF:   AMPSET [&1=]Formatting the view = MSGWRKR(@,D) 
                        RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Formatting the view" 
                        RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMTASK 
                    RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMTASK 
                    RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                    RPM       TRUE   IF:   APPWK(PMTASK,1) = MSGWRK(@,1,64) 
                        PMUPDATE  FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                        === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
                            Mac:         ON ERROR INITIAL_PM 
                            Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
                            Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
                            Mac:         END 
                        === Macro finished <MREGRAPH =====================    elapse time:     0.00 sec 
                        PMUPDATE  TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
                        PMUPDATE  TRUE   IF:   :PMWINBG = 258 
                        PMUPDATE  TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = APPWK(PMPROCESS,1) 
                        PMUPDATE  TRUE   IF:   AMPSET [&2=]Formatting the view = APPWK(PMTASK,1) 
                        PMUPDATE  TRUE   IF:   ?FRACTIO = .90 = APPWK(PMFRACTION,1) 
                            PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
                            PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                                PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                                PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                            PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                            PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
                        PMUPDATE  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
                        === Macro started  <MUTIL DO_CMD PMETER .90 "Running the Data Viewer..." "Formatting the view" ========= 
                            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                            Mac:         ON ERROR ERR_RTN 
                            Mac:         GOTO DO_CMD 
                            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                            Mac:         IF ".90" =   THEN GOTO DO_CMD1 
                            Mac:         IF "Running the Data Viewer..." =   THEN 
                            Mac:         IF "Formatting the view" =   THEN GOTO D 
                            Mac:         IF " " =   THEN GOTO DO_CMD4 
                            Mac:         GOTO DO_CMD4 
                            Cmd:  OK     PMETER ".90" "Running the Data Viewer... elapse time:     0.01 sec 
                            Mac:         END 
                        === Macro finished <MUTIL    =====================    elapse time:     0.01 sec 
                        PMUPDATE  TRUE   IF:   <MUTIL DO_CMD PMETER [?FRACTIO=].90 "[&1=]Running the Data Viewer..." "[&2=]Forma 
                        PMUPDATE  TRUE   THEN: UPDATE_PROGRESS_METER_TASK 
                    RPM       TRUE   IF:   UPDATE_PROGRESS_METER_TASK 
                    RPM       TRUE   THEN: PROGRESS_METER 
                === Rule  finished >RPM      =====================    elapse time:     0.01 sec 
                Mac:         END 
==> Macro <MPM .90 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT        total  time:     0.01 sec 
 
            RDVX200   TRUE   IF:   <MPM .90 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK3,@) 
                        RDV234    FALSE  IF:   [:TABTYPE=]MD EQ "LP" 
                        RDV234    TRUE   IF:   :TITLE = Demand = DVTABLES([:DVTABLE=]_IDEMAND,D) 
                        RDV234    TRUE   IF:   ?LEN = 6 = STRLEN [:TITLE=]Demand 
                        RDV234    TRUE   IF:   [?LEN=]6 GT 0 
                        RDV234    TRUE   THEN: RDV_GET_TITLE_FOR_REPORT 
                    RDV233    TRUE   IF:   RDV_GET_TITLE_FOR_REPORT 
                        RDV235    TRUE   IF:   :UOM = " " 
                        RDV235    TRUE   IF:   ?UOM =  = DVOPT([:DVTABLE=]_IDEMAND,UOM) 
                        RDV235    FALSE  IF:   ?UOM =  IN BASEUOM 
                        RDV235    TRUE   IF:   ?UOM = KLB = DVCTL([:DVTABLE=]_IDEMAND,BASEUOM) 
                        RDV235    TRUE   IF:   ?UOM = KLB IN BASEUOM 
                        RDV235    TRUE   IF:   :UOM = Klb = DVUOMLNG(@,@) 
                        RDV235    TRUE   THEN: RDV_GET_UOM_FOR_REPORT_TITLE 
                    RDV233    TRUE   IF:   RDV_GET_UOM_FOR_REPORT_TITLE 
                        _RPATCH2  TRUE   IF:   [:UOM=]Klb NE "" 
                        _RPATCH2  TRUE   IF:   ?TTLLEN = 6 = STRLEN [:TITLE=]Demand 
                        _RPATCH2  TRUE   IF:   ?UOMLEN = 3 = STRLEN [:UOM=]Klb 
                        _RPATCH2  TRUE   IF:   ?LENGTH = 9 = [?TTLLEN=]6 + [?UOMLEN=]3 
                        _RPATCH2  TRUE   IF:   ?LENGTH = 12 = [?LENGTH=]12 + 3 
                        _RPATCH2  TRUE   IF:   [?LENGTH=]12 <= 64 
                        _RPATCH2  TRUE   IF:   :TITLE = Demand (Klb) = '[:TITLE=]Demand (Klb) [:OPENP:UOM:CLOSP=]****' 
                        _RPATCH2  TRUE   THEN: RDV_ATTACH_UOM_TO_REPORT_TITLE 
                    RDV233    TRUE   IF:   RDV_ATTACH_UOM_TO_REPORT_TITLE 
                    RDV233    TRUE   IF:   ?TITLE = Demand (Klb) = [:TITLE=]Demand (Klb) 
                    RDV233    TRUE   THEN: RDV_GET_REPORT_TITLE [?TITLE=]Demand (Klb) 
                RDV210    TRUE   IF:   RDV_GET_REPORT_TITLE [?TITLE=]Demand (Klb) 
                RDV210    TRUE   IF:   MODIFY DVTABM TITLE = [?TITLE=]Demand (Klb) 
                RDV210    TRUE   IF:   ?SIZE = 0 = SIZEOF DVTABMR 
                RDV210    TRUE   IF:   [?SIZE=]0 EQ 0 
                RDV210    TRUE   THEN: RDV_PREPARE_DISPLAY_FOR_DATALIST_VIEW 
            RDVX200   TRUE   IF:   RDV_PREPARE_DISPLAY_FOR_DATALIST_VIEW 
                RDV240    TRUE   IF:   ?SAVIDX = 4 = INDEXOF TDV(@) 
                    RDV241    FALSE  IF:   [:DVVONLY=]N EQ "Y" 
                RDV240    FALSE  IF:   RDV_SETUP_TABS_FOR_VIEWONLY 
                    RDV242    TRUE   IF:   ?X = MD_NUM_DATALIST = '[:TABTYPE_:TABFMT_:VIEWTYP=]MD' 
                    RDV242    TRUE   IF:   SELECT DVTABCTL(*,[?X=]MD_NUM_DATALIST) != " " 
                    RDV242    TRUE   IF:   TDV = NULL 
                    RDV242    TRUE   IF:   TDV = TCHOSENR 
                    RDV242    TRUE   IF:   ?X = "DDVUPD" 
                    RDV242    TRUE   IF:   ?X = DDVUPD IN TDV 
                    RDV242    TRUE   IF:   DDV(AFTER_UPDATE,D) = ">RDVUPD50" 
                    RDV242    TRUE   THEN: RDV_SETUP_TABS 
                RDV240    TRUE   IF:   RDV_SETUP_TABS 
                    RDV243    TRUE   IF:   ?OVERSAV = Y = DVCTL([:DVTABLE=]_IDEMAND,OVERSAVE) 
                    RDV243    TRUE   IF:   [?OVERSAV=]Y EQ "Y" 
                    RDV243    TRUE   THEN: RDV_CHECK_OVERRIDE_TAB 
                RDV240    TRUE   IF:   RDV_CHECK_OVERRIDE_TAB 
                    RDV244    TRUE   IF:   ?SCRNODI =  = DVCTL([:DVTABLE=]_IDEMAND,SCRNODISP) 
                    RDV244    FALSE  IF:   [?SCRNODI=] EQ "Y" 
                    RDV244    TRUE   IF:   TRUE 
                    RDV244    TRUE   THEN: RDV_CHECK_SCREENING_TAB 
                RDV240    TRUE   IF:   RDV_CHECK_SCREENING_TAB 
                RDV240    TRUE   IF:   ?COU = 6 = SETCOU TDV 
                RDV240    TRUE   IF:   ?LASTIDX = 5 = [?COU=]6 - 1 
                RDV240    TRUE   IF:   [?SAVIDX=]4 LE [?LASTIDX=]5 
                RDV240    TRUE   IF:   TDV(INDEX) = [?SAVIDX=]4 
                RDV240    TRUE   THEN: RDV_SETUP_PROPERTY_SHEET_TABS 
            RDVX200   TRUE   IF:   RDV_SETUP_PROPERTY_SHEET_TABS 
                RDV260    TRUE   IF:   DDV(STYLE_FILTER,D) = "INVISIBLE" 
                RDV260    TRUE   IF:   DDV(STYLE_SCREEN,D) = "INVISIBLE" 
                RDV260    TRUE   IF:   DDV(STYLE_FLTRSCR,D) = "INVISIBLE" 
                RDV260    TRUE   IF:   :FLTRSW = "N" 
                    RDV261    TRUE   IF:   ?ATT = _IDEMANR IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = _IDEMANR IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]_IDEMANR NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]_IDEMANR NE "RID" 
                    RDV261    FALSE  IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   ?X = "RID" 
                    RDV261    FALSE  IF:   ?X = RID IN LISTWRK 
                    RDV261    TRUE   IF:   ?X = "CID" 
                    RDV261    FALSE  IF:   ?X = CID IN LISTWRK 
                    RDV261    TRUE   IF:   ?ATT = _DIV IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = _DIV IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]_DIV NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]_DIV NE "RID" 
                    RDV261    FALSE  IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   ?X = "RID" 
                    RDV261    FALSE  IF:   ?X = RID IN LISTWRK 
                    RDV261    TRUE   IF:   ?X = "CID" 
                    RDV261    FALSE  IF:   ?X = CID IN LISTWRK 
                    RDV261    TRUE   IF:   ?ATT = PLA IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = PLA IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]PLA NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]PLA NE "RID" 
                    RDV261    FALSE  IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   ?X = "RID" 
                    RDV261    FALSE  IF:   ?X = RID IN LISTWRK 
                    RDV261    TRUE   IF:   ?X = "CID" 
                    RDV261    FALSE  IF:   ?X = CID IN LISTWRK 
                    RDV261    TRUE   IF:   ?ATT = MAT IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = MAT IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]MAT NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]MAT NE "RID" 
                    RDV261    TRUE   IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   :FLTRSW = "Y" 
                    RDV261    TRUE   THEN: RDV_DETERMINE_IF_FILTERS_ARE_ACTIVE 
                    RDV261    TRUE   IF:   ?ATT = SHIPTO IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = SHIPTO IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]SHIPTO NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]SHIPTO NE "RID" 
                    RDV261    TRUE   IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   :FLTRSW = "Y" 
                    RDV261    TRUE   THEN: RDV_DETERMINE_IF_FILTERS_ARE_ACTIVE 
                    RDV261    TRUE   IF:   ?ATT = DTYPE IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = DTYPE IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]DTYPE NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]DTYPE NE "RID" 
                    RDV261    FALSE  IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   ?X = "RID" 
                    RDV261    FALSE  IF:   ?X = RID IN LISTWRK 
                    RDV261    TRUE   IF:   ?X = "CID" 
                    RDV261    FALSE  IF:   ?X = CID IN LISTWRK 
                    RDV261    TRUE   IF:   ?ATT = EFFDTTM IN ATT 
                    RDV261    TRUE   IF:  NOT ?ATT = EFFDTTM IN DVSFLTR 
                    RDV261    TRUE   IF:   [?ATT=]EFFDTTM NE "CID" 
                    RDV261    TRUE   IF:   [?ATT=]EFFDTTM NE "RID" 
                    RDV261    FALSE  IF:   ATTFLTSW(@,1) NE 0 
                    RDV261    TRUE   IF:   ?X = "RID" 
                    RDV261    FALSE  IF:   ?X = RID IN LISTWRK 
                    RDV261    TRUE   IF:   ?X = "CID" 
                    RDV261    FALSE  IF:   ?X = CID IN LISTWRK 
                    RDV261    TRUE   IF:   TRUE 
                    RDV261    TRUE   THEN: RDV_DETERMINE_IF_FILTERS_ARE_ACTIVE 
                RDV260    TRUE   IF:   RDV_DETERMINE_IF_FILTERS_ARE_ACTIVE 
                    RDV263    TRUE   IF:   ?VALS = 2 = SIZEOF DVSCRGWK 
                    RDV263    TRUE   IF:   [?VALS=]2 GT 1 
                    RDV263    TRUE   IF:   ?VF = 0 = INDEXOF DVSCRGWK(@) 
                    RDV263    FALSE  IF:   [?VF=]0 NE 0 
                    RDV263    TRUE   IF:   TRUE 
                    RDV263    TRUE   THEN: RDV_DETERMINE_IF_VALUE_FILTERS_ARE_ACTIVE 
                RDV260    TRUE   IF:   RDV_DETERMINE_IF_VALUE_FILTERS_ARE_ACTIVE 
                RDV260    TRUE   IF:   :SCRSW = "N" 
                    RDV262    TRUE   IF:   ?SCRGP = NA = CODEOF DVSCRGWK(@) 
                    RDV262    TRUE   IF:   [?SCRGP=]NA EQ "NA" 
                    RDV262    TRUE   THEN: RDV_DETERMINE_IF_A_SCREEN_IS_ACTIVE 
                RDV260    TRUE   IF:   RDV_DETERMINE_IF_A_SCREEN_IS_ACTIVE 
                RDV260    TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
                RDV260    FALSE  IF:   [:SCRSW=]N EQ "Y" 
                RDV260    TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
                RDV260    TRUE   IF:   DDV(STYLE_FILTER,D) = 
                RDV260    TRUE   THEN: RDV_DETERMINE_IF_FILTERS_OR_SCREENS_ARE_ACTIVE 
            RDVX200   TRUE   IF:   RDV_DETERMINE_IF_FILTERS_OR_SCREENS_ARE_ACTIVE 
                    PMDONE    FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                    === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
                        Mac:         ON ERROR INITIAL_PM 
                        Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
                        Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MREGRAPH GPROGMET GPROGMET_GRAPH               total  time:     0.00 sec 
 
                    PMDONE    TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
                    PMDONE    FALSE  IF:   [&RETURN=] EQ "ERROR" 
                    PMDONE    TRUE   IF:   :PMWINBG = 258 
                        PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
                        PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                            PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                            PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
                    PMDONE    TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
                    PMDONE    TRUE   IF:   ?PMPROC = Complete = LNGTEXT(PMCOMPLET1,@) 
                    PMDONE    TRUE   IF:   &1 = Complete = [?PMPROC=]Complete 
                    === Macro started  <MUTIL DO_CMD PMETER 0.98 "Complete" ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO DO_CMD 
                        Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                        Mac:         IF "0.98" =   THEN GOTO DO_CMD1 
                        Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
                        Mac:         IF " " =   THEN GOTO DO_CMD3 
                        Mac:         GOTO DO_CMD3 
                        Cmd:  OK     PMETER "0.98" "Complete                  elapse time:     0.01 sec 
                        Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.98 "Complete"            total  time:     0.01 sec 
 
                    PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.98 "[&1=]Complete" 
                    === Macro started  <MUTIL DO_CMD PMETER 0.99 "Complete" ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO DO_CMD 
                        Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                        Mac:         IF "0.99" =   THEN GOTO DO_CMD1 
                        Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
                        Mac:         IF " " =   THEN GOTO DO_CMD3 
                        Mac:         GOTO DO_CMD3 
                        Cmd:  OK     PMETER "0.99" "Complete                  elapse time:     0.01 sec 
                        Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.99 "Complete"            total  time:     0.01 sec 
 
                    PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.99 "[&1=]Complete" 
                    === Macro started  <MUTIL DO_CMD PMETER 1.0 "Complete" ===================== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO DO_CMD 
                        Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                        Mac:         IF "1.0" =   THEN GOTO DO_CMD1 
                        Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
                        Mac:         IF " " =   THEN GOTO DO_CMD3 
                        Mac:         GOTO DO_CMD3 
                        Cmd:  OK     PMETER "1.0" "Complete                   elapse time:     0.00 sec 
                        Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 1.0 "Complete"             total  time:     0.00 sec 
 
                    PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 1.0 "[&1=]Complete" 
                    PMDONE    TRUE   THEN: COMPLETE_PROGRESS_METER 
                RDV202    TRUE   IF:   COMPLETE_PROGRESS_METER 
                RDV202    TRUE   IF:   FILL APPDATA(PMSWITCH,1) = [:DVPMSAV=]ON 
                RDV202    TRUE   IF:   FILL APPWK(DVNBRRECB4UPD,1) = " " 
                RDV202    TRUE   IF:   DESTROY DDVAFLT_DIALOG 
                RDV202    TRUE   IF:   DESTROY DDVSCR3_DIALOG 
                RDV202    TRUE   IF:   DESTROY DDVOVRDL_DIALOG 
                RDV202    TRUE   IF:   ?SVREGUI =  = APPWK(DVSVREGUI,1) 
                RDV202    FALSE  IF:   [?SVREGUI=] EQ "Y" 
                RDV202    TRUE   IF:   ?REGUI =  = APPWK(DVREGUI,1) 
                RDV202    TRUE   IF:   APPWK(DVREGUI,1) = 
                RDV202    FALSE  IF:   [?REGUI=] EQ "N" 
                RDV202    TRUE   IF:   ?VIEWTYP = DATALIST = CODEOF VIEWTYPE(@) 
                RDV202    TRUE   IF:   ?X = DV_DATALIST = 'DV_[?VIEWTYP=]DATALIST' 
                RDV202    TRUE   IF:   REGUI [?X=]DV_DATALIST 
                RDV202    TRUE   THEN: RDV_UPDATE_VIEW_WRAP_UP 
            RDVX200   TRUE   IF:   RDV_UPDATE_VIEW_WRAP_UP 
            RDVX200   TRUE   THEN: RDVCALL_UPDATE_VIEW 
        RDVC3A    TRUE   IF:   RDVCALL_UPDATE_VIEW 
            RDV999    TRUE   IF:   ?USREXIT =  = DVCTL([:DVTABLE=]_IDEMAND,[?PARM=]VIEWAFTER) 
            === Macro started  <MUTILDV DO_CMD ===================== 
                Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                Mac:         ON ERROR ERR_RTN 
                Mac:         GOTO DO_CMD 
                Mac:         IF " " =   THEN GOTO DO_CMD0 
                Mac:         GOTO DO_CMD0 
                Mac:         END 
==> Macro <MUTILDV DO_CMD                                 total  time:     0.00 sec 
 
            RDV999    TRUE   IF:   <MUTILDV DO_CMD [?USREXIT=] 
            RDV999    FALSE  IF:   [&RETURN=] EQ "EXIT" 
            RDV999    TRUE   IF:   [&RETURN=] EQ 
            RDV999    TRUE   THEN: RDV_RUN_USER_EXIT [?PARM=]VIEWAFTER 
        RDVC3A    TRUE   IF:   RDV_RUN_USER_EXIT VIEWAFTER 
        RDVC3A    TRUE   IF:   FREE [:ISPMSHO=]**** 
        RDVC3A    TRUE   IF:   :ISPMSHO = TRUE 
            _RPATC17  TRUE   IF:   ?UPD = DDVUPD 
            _RPATC17  TRUE   IF:   ?UPD = DDVUPD IN TDV 
                RDVC3AC   TRUE   IF:   DVTABMWR = NULL 
                RDVC3AC   TRUE   IF:   DVTABMWR = DVTABMR 
                RDVC3AC   TRUE   IF:   DVTABMWC = NULL 
                RDVC3AC   TRUE   IF:   DVTABMWC = DVTABMC 
                RDVC3AC   TRUE   IF:   ?SIZ = 0 = SIZEOF DVTABMR 
                RDVC3AC   TRUE   IF:   [?SIZ=]0 EQ 0 
                RDVC3AC   TRUE   THEN: RDVCALL_FILL_DVTABMWK_WITH_DVTABM_PREVIOUS_VALS 
            _RPATC17  TRUE   IF:   RDVCALL_FILL_DVTABMWK_WITH_DVTABM_PREVIOUS_VALS 
                    RDV301    TRUE   IF:   ?SIZE = 0 = SIZEOF DVTABMR 
                    RDV301    FALSE  IF:   [?SIZE=]0 GT 0 
                    RDV301    TRUE   IF:   APPEND DVTABMR " " 
                    RDV301    TRUE   IF:   ?SIZE = 0 = SIZEOF DVTABMC 
                    RDV301    FALSE  IF:   [?SIZE=]0 GT 0 
                    RDV301    TRUE   IF:   APPEND DVTABMC " " 
                    RDV301    TRUE   IF:   FORMAT DVTABM(*,*) = READONLY ON 
                    RDV301    TRUE   THEN: RDV_ENSURE_DVTABM_IS_READONLY 
                RDV300    TRUE   IF:   RDV_ENSURE_DVTABM_IS_READONLY 
                        RDV251    FALSE  IF:   [:DVVONLY=]N EQ "Y" 
                        RDV251    FALSE  IF:   [:TABTYPE=]MD EQ "2D" 
                        RDV251    TRUE   IF:   ?TAB = DDVUPD = CODEOF TDV(@) 
                        RDV251    TRUE   IF:   [?TAB=]DDVUPD EQ "DDVUPD" 
                        RDV251    TRUE   IF:   DDV(STYLE_UPDATE,D) = 
                        RDV251    TRUE   THEN: RDV_SET_STYLE_FOR_UPDATE_BUTTON 
                    RDV250    TRUE   IF:   RDV_SET_STYLE_FOR_UPDATE_BUTTON 
                        RDV252    TRUE   IF:   DVOPT([:DVTABLE=]_IDEMAND,VIEWTYPE) EQ "DATALIST" 
                        RDV252    TRUE   IF:   DDV(STYLE_SORT,D) = 
                        RDV252    TRUE   THEN: RDV_SET_STYLE_FOR_SORT_BUTTON 
                    RDV250    TRUE   IF:   RDV_SET_STYLE_FOR_SORT_BUTTON 
                    RDV250    TRUE   THEN: RDV_SET_STYLE_FOR_BUTTONS 
                RDV300    TRUE   IF:   RDV_SET_STYLE_FOR_BUTTONS 
                RDV300    TRUE   IF:   MODIFY DVTABM AFTER = BLANK 
                RDV300    TRUE   IF:   DESTROY DDVAFLT_DIALOG 
                RDV300    TRUE   IF:   DESTROY DDVSCR3_DIALOG 
                RDV300    TRUE   IF:   DESTROY DDVDUP_DIALOG 
                RDV300    TRUE   IF:   ?TDV = DDVUPD = CODEOF TDV(@) 
                RDV300    TRUE   IF:   [?TDV=]DDVUPD EQ "DDVUPD" 
                RDV300    TRUE   IF:   DDV(STYLE_REFRESH,D) = "DISABLED" 
                RDV300    TRUE   IF:   MODIFY DVTABM AFTER = BLANK 
                    RDVUPD10  TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
                        RDVUPD11  TRUE   IF:   :TABLE = _IDEMAND = DVCTL([:DVTABLE=]_IDEMAND,TABLE) 
                        RDVUPD11  TRUE   IF:   GETCAT [&0=]_IDEMANR = [:TABLE=]_IDEMAND ROWSET 
                        RDVUPD11  TRUE   IF:   FREE [:ROWSET=]**** 
                        RDVUPD11  TRUE   IF:   :ROWSET = _IDEMANR = [&0=]_IDEMANR 
                        RDVUPD11  TRUE   IF:   GETCAT [&0=]_IDEMANC = [:TABLE=]_IDEMAND COLSET 
                        RDVUPD11  TRUE   IF:   FREE [:COLSET=]**** 
                        RDVUPD11  TRUE   IF:   :COLSET = _IDEMANC = [&0=]_IDEMANC 
                        RDVUPD11  TRUE   IF:   ?SIZ = 759 = SIZEOF [:ROWSET=]_IDEMANR 
                        RDVUPD11  TRUE   IF:   APPWK(DVNBRRECB4UPD,1) = [?SIZ=]759 
                        RDVUPD11  TRUE   IF:   DVBATT = NULL 
                        RDVUPD11  TRUE   IF:   DVBATT = LISTWRK 
                        RDVUPD11  TRUE   IF:   SELECT DVATTWK(*,ATTTYPE) != "B" 
                        RDVUPD11  TRUE   IF:   DVBATT = DVBATT - TCHOSENR 
                        RDVUPD11  TRUE   IF:   SELECT DVATTWK(*,ATTTYPE) = "B" 
                        RDVUPD11  TRUE   IF:   DVBATT = DVBATT + TCHOSENR 
                        RDVUPD11  TRUE   IF:   :NOCHGSD = <No replacements> = LNGDLG(DDVUPD_NO_CHANGES,@) 
                        RDVUPD11  TRUE   IF:   FREE [:NOCHGS=]**** 
                        RDVUPD11  TRUE   IF:   FREE [?X=]**** 
                            RCHGCHAR  TRUE   IF:   ?LENGTH = 17 = STRLEN [?STR_IN=]<No replacements> 
                            RCHGCHAR  TRUE   IF:   [?LENGTH=]17 > 0 
                            RCHGCHAR  TRUE   IF:   TMPSTR = BLANK 
                            RCHGCHAR  TRUE   IF:   TMPSTR(1,1,[?LENGTH=]17) = [?STR_IN=]<No replacements> 
                                CHGCHSUB  TRUE   IF:   SELECT CHARPOS <= [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 1 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = < = TMPSTR(1,[?POS=]1,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]< EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 2 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = N = TMPSTR(1,[?POS=]2,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]N EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 3 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = o = TMPSTR(1,[?POS=]3,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]o EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 4 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR =  = TMPSTR(1,[?POS=]4,1) 
                                CHGCHSUB  FALSE  IF:  NOT [?CHAR=] EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   IF:   TMPSTR(1,[?POS=]4,1) = [?CHAR_TO=]_ 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 5 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = r = TMPSTR(1,[?POS=]5,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]r EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 6 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]6,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]e EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 7 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = p = TMPSTR(1,[?POS=]7,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]p EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 8 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]8,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]l EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 9 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = a = TMPSTR(1,[?POS=]9,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]a EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 10 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = c = TMPSTR(1,[?POS=]10,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]c EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 11 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]11,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]e EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 12 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = m = TMPSTR(1,[?POS=]12,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]m EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 13 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]13,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]e EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 14 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = n = TMPSTR(1,[?POS=]14,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]n EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 15 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = t = TMPSTR(1,[?POS=]15,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]t EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 16 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]16,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]s EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                                CHGCHSUB  TRUE   IF:   ?POS = 17 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = > = TMPSTR(1,[?POS=]17,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]> EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]17 
                            RCHGCHAR  TRUE   IF:   CHANGE_CHARACTERS_FROM [?C_FR=] TO [?C_TO=]_ [?LENGTH=]17 
                            RCHGCHAR  TRUE   IF:   ?STR_OUT = <No_replacements> = TMPSTR(1,1,[?LENGTH=]17) 
                            RCHGCHAR  TRUE   THEN: CHANGE_ALL_INSTANCES_OF [?C_FR=] IN [?STR_IN=]<No replacements> TO [?C_TO=]_ 
                        RDVUPD11  TRUE   IF:   CHANGE_ALL_INSTANCES_OF " " IN [:NOCHGSD=]<No replacements> TO "_" IN [?X=]<No_re 
                            RLC2UC    TRUE   IF:   ?LENGTH = 17 = STRLEN [?STR_IN=]<No_replacements> 
                            RLC2UC    TRUE   IF:   [?LENGTH=]17 > 0 
                            RLC2UC    TRUE   IF:   TMPSTR = BLANK 
                            RLC2UC    TRUE   IF:   TMPSTR(1,1,[?LENGTH=]17) = [?STR_IN=]<No_replacements> 
                                LC2UCSUB  TRUE   IF:   SELECT CHARPOS <= [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 1 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = < = TMPSTR(1,[?POS=]1,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]< NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = < IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 2 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = N = TMPSTR(1,[?POS=]2,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]N NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = N IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 3 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = o = TMPSTR(1,[?POS=]3,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]o NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = o IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]3,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 4 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = _ = TMPSTR(1,[?POS=]4,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]_ NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = _ IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 5 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = r = TMPSTR(1,[?POS=]5,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]r NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = r IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]5,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 6 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]6,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]e NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]6,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 7 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = p = TMPSTR(1,[?POS=]7,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]p NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = p IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]7,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 8 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]8,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]l NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]8,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 9 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = a = TMPSTR(1,[?POS=]9,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]a NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = a IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]9,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 10 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = c = TMPSTR(1,[?POS=]10,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]c NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = c IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]10,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 11 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]11,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]e NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]11,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 12 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = m = TMPSTR(1,[?POS=]12,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]m NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = m IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]12,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 13 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]13,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]e NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]13,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 14 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = n = TMPSTR(1,[?POS=]14,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]n NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = n IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]14,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 15 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = t = TMPSTR(1,[?POS=]15,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]t NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = t IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]15,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 16 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]16,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]s NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]16,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                                LC2UCSUB  TRUE   IF:   ?POS = 17 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = > = TMPSTR(1,[?POS=]17,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]> NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = > IN LC2UC 
                            RLC2UC    TRUE   IF:   CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]17 
                            RLC2UC    TRUE   IF:   ?STR_OUT = <NO_REPLACEMENTS> = TMPSTR(1,1,[?LENGTH=]17) 
                            RLC2UC    TRUE   THEN: CHANGE_LOWER_CASE_CHARS_IN [?STR_IN=]<No_replacements> TO_UPPER_CASE_IN [?STR 
                        RDVUPD11  TRUE   IF:   CHANGE_LOWER_CASE_CHARS_IN [?X=]<No_replacements> TO_UPPER_CASE_IN [:NOCHGS=]<NO_ 
                        RDVUPD11  TRUE   IF:   :ALLSELD = <All selections> = LNGDLG(DDVUPD_ALL_SELECTIONS,@) 
                        RDVUPD11  TRUE   IF:   FREE [:ALLSEL=]**** 
                        RDVUPD11  TRUE   IF:   FREE [?X=]**** 
                            RCHGCHAR  TRUE   IF:   ?LENGTH = 16 = STRLEN [?STR_IN=]<All selections> 
                            RCHGCHAR  TRUE   IF:   [?LENGTH=]16 > 0 
                            RCHGCHAR  TRUE   IF:   TMPSTR = BLANK 
                            RCHGCHAR  TRUE   IF:   TMPSTR(1,1,[?LENGTH=]16) = [?STR_IN=]<All selections> 
                                CHGCHSUB  TRUE   IF:   SELECT CHARPOS <= [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 1 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = < = TMPSTR(1,[?POS=]1,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]< EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 2 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = A = TMPSTR(1,[?POS=]2,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]A EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 3 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]3,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]l EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 4 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]4,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]l EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 5 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR =  = TMPSTR(1,[?POS=]5,1) 
                                CHGCHSUB  FALSE  IF:  NOT [?CHAR=] EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   IF:   TMPSTR(1,[?POS=]5,1) = [?CHAR_TO=]_ 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 6 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]6,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]s EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 7 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]7,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]e EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 8 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]8,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]l EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 9 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]9,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]e EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 10 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = c = TMPSTR(1,[?POS=]10,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]c EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 11 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = t = TMPSTR(1,[?POS=]11,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]t EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 12 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = i = TMPSTR(1,[?POS=]12,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]i EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 13 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = o = TMPSTR(1,[?POS=]13,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]o EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 14 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = n = TMPSTR(1,[?POS=]14,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]n EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 15 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]15,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]s EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                                CHGCHSUB  TRUE   IF:   ?POS = 16 IN CHOSEN 
                                CHGCHSUB  TRUE   IF:   ?CHAR = > = TMPSTR(1,[?POS=]16,1) 
                                CHGCHSUB  TRUE   IF:  NOT [?CHAR=]> EQ [?CHAR_FR=] 
                                CHGCHSUB  TRUE   THEN: CHANGE_CHARACTERS_FROM [?CHAR_FR=] TO [?CHAR_TO=]_ [?LENGTH=]16 
                            RCHGCHAR  TRUE   IF:   CHANGE_CHARACTERS_FROM [?C_FR=] TO [?C_TO=]_ [?LENGTH=]16 
                            RCHGCHAR  TRUE   IF:   ?STR_OUT = <All_selections> = TMPSTR(1,1,[?LENGTH=]16) 
                            RCHGCHAR  TRUE   THEN: CHANGE_ALL_INSTANCES_OF [?C_FR=] IN [?STR_IN=]<All selections> TO [?C_TO=]_ I 
                        RDVUPD11  TRUE   IF:   CHANGE_ALL_INSTANCES_OF " " IN [:ALLSELD=]<All selections> TO "_" IN [?X=]<All_se 
                            RLC2UC    TRUE   IF:   ?LENGTH = 16 = STRLEN [?STR_IN=]<All_selections> 
                            RLC2UC    TRUE   IF:   [?LENGTH=]16 > 0 
                            RLC2UC    TRUE   IF:   TMPSTR = BLANK 
                            RLC2UC    TRUE   IF:   TMPSTR(1,1,[?LENGTH=]16) = [?STR_IN=]<All_selections> 
                                LC2UCSUB  TRUE   IF:   SELECT CHARPOS <= [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 1 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = < = TMPSTR(1,[?POS=]1,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]< NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = < IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 2 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = A = TMPSTR(1,[?POS=]2,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]A NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = A IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 3 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]3,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]l NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]3,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 4 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]4,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]l NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]4,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 5 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = _ = TMPSTR(1,[?POS=]5,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]_ NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = _ IN LC2UC 
                                LC2UCSUB  TRUE   IF:   ?POS = 6 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]6,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]s NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]6,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 7 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]7,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]e NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]7,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 8 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l = TMPSTR(1,[?POS=]8,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]l NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = l IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]8,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 9 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e = TMPSTR(1,[?POS=]9,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]e NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = e IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]9,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 10 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = c = TMPSTR(1,[?POS=]10,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]c NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = c IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]10,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 11 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = t = TMPSTR(1,[?POS=]11,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]t NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = t IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]11,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 12 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = i = TMPSTR(1,[?POS=]12,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]i NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = i IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]12,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 13 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = o = TMPSTR(1,[?POS=]13,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]o NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = o IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]13,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 14 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = n = TMPSTR(1,[?POS=]14,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]n NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = n IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]14,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 15 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s = TMPSTR(1,[?POS=]15,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]s NE 
                                LC2UCSUB  TRUE   IF:   ?CHAR = s IN LC2UC 
                                LC2UCSUB  TRUE   IF:   TMPSTR(1,[?POS=]15,1) = LC2UC(@,D) 
                                LC2UCSUB  TRUE   THEN: CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                                LC2UCSUB  TRUE   IF:   ?POS = 16 IN CHOSEN 
                                LC2UCSUB  TRUE   IF:   ?CHAR = > = TMPSTR(1,[?POS=]16,1) 
                                LC2UCSUB  TRUE   IF:   [?CHAR=]> NE 
                                LC2UCSUB  FALSE  IF:   ?CHAR = > IN LC2UC 
                            RLC2UC    TRUE   IF:   CHANGE_LOWER_CASE_CHARACTERS_TO_UPPER_CASE [?LENGTH=]16 
                            RLC2UC    TRUE   IF:   ?STR_OUT = <ALL_SELECTIONS> = TMPSTR(1,1,[?LENGTH=]16) 
                            RLC2UC    TRUE   THEN: CHANGE_LOWER_CASE_CHARS_IN [?STR_IN=]<All_selections> TO_UPPER_CASE_IN [?STR_ 
                        RDVUPD11  TRUE   IF:   CHANGE_LOWER_CASE_CHARS_IN [?X=]<All_selections> TO_UPPER_CASE_IN [:ALLSEL=]<ALL_ 
                            RDVUPD12  TRUE   IF:   APPWK(DSDATE,1) = " " 
                            RDVUPD12  TRUE   IF:   APPWK(DSTIME,1) = " " 
                            RDVUPD12  TRUE   IF:   :EFFNBR = 0 
                            RDVUPD12  TRUE   IF:   :EXPNBR = 0 
                            RDVUPD12  TRUE   IF:   ?DVDT = EFFDATE IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = EFFDATE IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = EXPDATE IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = EXPDATE IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = EFFTIME IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = EFFTIME IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = EXPTIME IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = EXPTIME IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = EFFDTTM IN DVDT 
                            RDVUPD12  TRUE   IF:   ?DVDT = EFFDTTM IN DVBATT 
                            RDVUPD12  TRUE   IF:   :DSMETHD = DATETIME = DVDTCTL(@,DSMETHOD) 
                            RDVUPD12  TRUE   IF:   :DSPIXMA = DATTIMS.BMP = DVDTCTL(@,PIXMAP) 
                            RDVUPD12  TRUE   IF:   ?TYPE = EFF = DVDTCTL(@,TYPE) 
                            RDVUPD12  TRUE   IF:   [?TYPE=]EFF EQ "EFF" 
                            RDVUPD12  TRUE   IF:   :EFFNBR = 5 = INDEXOF DVBATT(@) 
                            RDVUPD12  TRUE   IF:   :EFFNBR = 6 = [:EFFNBR=]6 + 1 
                            RDVUPD12  TRUE   THEN: RDVUPD_PREPARE_FOR_DATES_OR_TIMES 
                            RDVUPD12  TRUE   IF:   ?DVDT = EXPDTTM IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = EXPDTTM IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = DATTIM IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = DATTIM IN DVBATT 
                            RDVUPD12  TRUE   IF:   ?DVDT = DATTIM2 IN DVDT 
                            RDVUPD12  FALSE  IF:   ?DVDT = DATTIM2 IN DVBATT 
                        RDVUPD11  TRUE   IF:   RDVUPD_PREPARE_FOR_DATES_OR_TIMES 
                        RDVUPD11  TRUE   IF:   ?SIZE = 6 = SIZEOF DVBATT 
                        RDVUPD11  TRUE   IF:   FREE [:LASTNBR=]**** 
                        RDVUPD11  TRUE   IF:   :LASTNBR = 6 = [?SIZE=]6 
                        RDVUPD11  TRUE   IF:   ?IDXLAST = 5 = [?SIZE=]6 - 1 
                        RDVUPD11  TRUE   IF:   :LASTDOM = EFFDTTM = CODEOF DVBATT([?IDXLAST=]5) 
                        RDVUPD11  TRUE   IF:   ?SIZE = 20 = SIZEOF [:COLSET=]_IDEMANC 
                        RDVUPD11  TRUE   IF:   ?IDXLAST = 19 = [?SIZE=]20 - 1 
                        RDVUPD11  TRUE   IF:   :LASTCOL = $ENTRY = CODEOF [:COLSET=]_IDEMANC([?IDXLAST=]19) 
                        RDVUPD11  TRUE   IF:   FREE [:UPDCOL=]**** 
                        RDVUPD11  FALSE  IF:   :LASTCOL = $ENTRY IN SCAT 
                        RDVUPD11  TRUE   IF:   :UPDTYPE = "VAL" 
                        RDVUPD11  TRUE   IF:   :UPDCOL = $ENTRY = [:LASTCOL=]$ENTRY 
                        RDVUPD11  TRUE   THEN: RDVUPD_INITIALIZE_VARIABLES 
                    RDVUPD10  TRUE   IF:   RDVUPD_INITIALIZE_VARIABLES 
                        RDVUPD13  TRUE   IF:   DDVUPDB(STYLE_RADIOBOX,D) = "NOBOX" 
                        RDVUPD13  TRUE   IF:   TMPSET1 = NULL 
                        RDVUPD13  TRUE   IF:   ?ADDLNG = Add = LNGTEXT(DV_MODE_ADD,@) 
                        RDVUPD13  TRUE   IF:   ?EDTLNG = Edit = LNGTEXT(DV_MODE_EDT,@) 
                        RDVUPD13  TRUE   IF:   ?REPLNG = Replace = LNGTEXT(DV_MODE_REP,@) 
                        RDVUPD13  TRUE   IF:   ?DELLNG = Delete = LNGTEXT(DV_MODE_DEL,@) 
                        RDVUPD13  TRUE   IF:   APPEND TMPSET1 ADD [?ADDLNG=]Add 
                        RDVUPD13  TRUE   IF:   APPEND TMPSET1 EDT [?EDTLNG=]Edit 
                        RDVUPD13  TRUE   IF:   APPEND TMPSET1 REP [?REPLNG=]Replace 
                        RDVUPD13  TRUE   IF:   APPEND TMPSET1 DEL [?DELLNG=]Delete 
                        RDVUPD13  TRUE   IF:   DVMODE = NULL 
                        RDVUPD13  TRUE   IF:   DVMODE = TMPSET1 
                            RDVUPD14  TRUE   IF:   [:UPDTYPE=]VAL EQ "VAL" 
                            RDVUPD14  TRUE   IF:   DVMODE = DVMODE * DVMODE3 
                            RDVUPD14  TRUE   THEN: RDVUPD_WHICH_MODES_ARE_AVAILABLE_FOR_DV_TABLE 
                        RDVUPD13  TRUE   IF:   RDVUPD_WHICH_MODES_ARE_AVAILABLE_FOR_DV_TABLE 
                            RDVUPD15  TRUE   IF:   :MODESET =  = DVCTL([:TABLE=]_IDEMAND,UPDMODES) 
                            RDVUPD15  TRUE   IF:   [:MODESET=] EQ 
                            RDVUPD15  TRUE   THEN: RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
                        RDVUPD13  TRUE   IF:   RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
                        RDVUPD13  TRUE   IF:   SETIND DVMODE = -1 
                        RDVUPD13  TRUE   IF:   ?SIZ = 4 = SIZEOF DVMODE 
                        RDVUPD13  TRUE   IF:   [?SIZ=]4 GT 0 
                        RDVUPD13  TRUE   THEN: RDVUPD_SETUP_MODES 
                    RDVUPD10  TRUE   IF:   RDVUPD_SETUP_MODES 
                        RDVUPD20  TRUE   IF:   DDVUPD = NULL 
                        RDVUPD20  TRUE   IF:   DDVUPD = DDVUPDB 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]0 
                                RDVUPD22  FALSE  IF:   [?N=]0 NE 0 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]1 
                                RDVUPD22  TRUE   IF:   [?N=]1 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]1 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL1 = 'SELFIL[?N=]1' 
                                === Macro started  <MUTIL NULL SELFIL1 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL1 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL1                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL1 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB1 = 'STYLE_LAB[?N=]1' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST1 = 'STYLE_LST[?N=]1' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]2 
                                RDVUPD22  TRUE   IF:   [?N=]2 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]2 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL2 = 'SELFIL[?N=]2' 
                                === Macro started  <MUTIL NULL SELFIL2 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL2 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL2                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL2 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB2 = 'STYLE_LAB[?N=]2' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST2 = 'STYLE_LST[?N=]2' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]3 
                                RDVUPD22  TRUE   IF:   [?N=]3 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]3 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL3 = 'SELFIL[?N=]3' 
                                === Macro started  <MUTIL NULL SELFIL3 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL3 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL3                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL3 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB3 = 'STYLE_LAB[?N=]3' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST3 = 'STYLE_LST[?N=]3' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]4 
                                RDVUPD22  TRUE   IF:   [?N=]4 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]4 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL4 = 'SELFIL[?N=]4' 
                                === Macro started  <MUTIL NULL SELFIL4 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL4 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL4                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL4 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB4 = 'STYLE_LAB[?N=]4' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST4 = 'STYLE_LST[?N=]4' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]5 
                                RDVUPD22  TRUE   IF:   [?N=]5 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]5 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL5 = 'SELFIL[?N=]5' 
                                === Macro started  <MUTIL NULL SELFIL5 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL5 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL5                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL5 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB5 = 'STYLE_LAB[?N=]5' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST5 = 'STYLE_LST[?N=]5' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]6 
                                RDVUPD22  TRUE   IF:   [?N=]6 NE 0 
                                RDVUPD22  TRUE   IF:   [?N=]6 LE 6 
                                RDVUPD22  TRUE   IF:   ?SELFIL = SELFIL6 = 'SELFIL[?N=]6' 
                                === Macro started  <MUTIL NULL SELFIL6 ===================== 
                                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                                    Mac:         ON ERROR ERR_RTN 
                                    Mac:         GOTO NULL 
                                    Cmd:  OK     SELFIL6 = NULL                           elapse time:     0.00 sec 
                                    Mac:         END 
==> Macro <MUTIL NULL SELFIL6                             total  time:     0.00 sec 
 
                                RDVUPD22  TRUE   IF:   <MUTIL NULL [?SELFIL=]SELFIL6 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LAB6 = 'STYLE_LAB[?N=]6' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   IF:   ?PROP = STYLE_LST6 = 'STYLE_LST[?N=]6' 
                                RDVUPD22  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD22  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                                RDVUPD22  TRUE   IF:   WHILE [?N=]7 
                                RDVUPD22  TRUE   IF:   [?N=]7 NE 0 
                                RDVUPD22  FALSE  IF:   [?N=]7 LE 6 
                                RDVUPD22  BREAK  IF:   BREAK [?N=]7 
                            RDVUPD21  TRUE   IF:   RDVUPD_INITIALIZE_OPTIONMENUS_TO_INVISIBLE 
                            RDVUPD21  TRUE   IF:   ?ATT = _DIV IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 0 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 1 = [?N=]1 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB1 = 'STYLE_LAB[?N=]1' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST1 = 'STYLE_LST[?N=]1' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB1 = 'DATA_LAB[?N=]1' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB1,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST1 = 'PORTION_LST[?N=]1' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = _DIV IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST1,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD21  TRUE   IF:   ?ATT = PLA IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 1 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 2 = [?N=]2 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB2 = 'STYLE_LAB[?N=]2' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST2 = 'STYLE_LST[?N=]2' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB2 = 'DATA_LAB[?N=]2' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB2,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST2 = 'PORTION_LST[?N=]2' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = PLA IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST2,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD21  TRUE   IF:   ?ATT = MAT IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 2 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 3 = [?N=]3 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB3 = 'STYLE_LAB[?N=]3' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST3 = 'STYLE_LST[?N=]3' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB3 = 'DATA_LAB[?N=]3' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB3,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST3 = 'PORTION_LST[?N=]3' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = MAT IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST3,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD21  TRUE   IF:   ?ATT = SHIPTO IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 3 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 4 = [?N=]4 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB4 = 'STYLE_LAB[?N=]4' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST4 = 'STYLE_LST[?N=]4' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB4 = 'DATA_LAB[?N=]4' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB4,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST4 = 'PORTION_LST[?N=]4' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = SHIPTO IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST4,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD21  TRUE   IF:   ?ATT = DTYPE IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 4 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 5 = [?N=]5 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB5 = 'STYLE_LAB[?N=]5' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST5 = 'STYLE_LST[?N=]5' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB5 = 'DATA_LAB[?N=]5' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB5,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST5 = 'PORTION_LST[?N=]5' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = DTYPE IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST5,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD21  TRUE   IF:   ?ATT = EFFDTTM IN DVBATT 
                            RDVUPD21  TRUE   IF:   ?N = 5 = INDEXOF DVBATT(@) 
                            RDVUPD21  TRUE   IF:   ?N = 6 = [?N=]6 + 1 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LAB6 = 'STYLE_LAB[?N=]6' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = STYLE_LST6 = 'STYLE_LST[?N=]6' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD21  TRUE   IF:   ?PROP = DATA_LAB6 = 'DATA_LAB[?N=]6' 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]DATA_LAB6,D) = DVBATT(@,D) 
                            RDVUPD21  TRUE   IF:   ?PROP = PORTION_LST6 = 'PORTION_LST[?N=]6' 
                            RDVUPD21  TRUE   IF:   DDVUPD(?PROP,D) = "D" 
                            RDVUPD21  TRUE   IF:   ?ATT = EFFDTTM IN LISTWRK 
                            RDVUPD21  TRUE   IF:   DDVUPD([?PROP=]PORTION_LST6,D) = TLISTFLT(@,DECODEL) 
                            RDVUPD21  TRUE   THEN: RDVUPD_INITIALIZE_OPTIONMENUS 
                        RDVUPD20  TRUE   IF:   RDVUPD_INITIALIZE_OPTIONMENUS 
                            RDVUPD23  TRUE   IF:   GETCAT [&0=]C35 = [:TABLE=]_IDEMAND FORMAT 
                            RDVUPD23  TRUE   IF:   ?X = C35 = [&0=]C35 
                            RDVUPD23  TRUE   IF:   ?NBRPOS = 35 = SUBSTR([?X=]C35,2,0) 
                            RDVUPD23  TRUE   IF:   DDVUPD1(MAXLENGTH_BOT2,D) = [?NBRPOS=]35 
                            RDVUPD23  TRUE   IF:   DDVUPD1(MAXLENGTH_BOT3,D) = [?NBRPOS=]35 
                            RDVUPD23  TRUE   IF:   ?LENGTH2 = 249.5500 = [?NBRPOS=]35 * 7.13 
                            RDVUPD23  TRUE   IF:   ?LENGTH2 = 249 = STRFMT([?LENGTH2=]249,I03) 
                            RDVUPD23  TRUE   IF:   [?LENGTH2=]249 GT 80 
                            RDVUPD23  FALSE  IF:   DVCTL([:DVTABLE=]_IDEMAND,TABFMT) NE "NUM" 
                            RDVUPD23  TRUE   IF:   ?LENGTH2 = 60 
                            RDVUPD23  TRUE   IF:   ?GEOM = 60x20+155+110 = DDVUPD1(GEOMETRY_BOT2,D) 
                            RDVUPD23  TRUE   IF:   FREE [?LENGTH=]**** [?HEIGHT=]**** [?LEFT=]**** [?TOP=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 0 
                                    RPARSEG2  TRUE   IF:   :P1 = 0 
                                    RPARSEG2  TRUE   IF:   :P2 = 0 
                                    RPARSEG2  TRUE   IF:   :STRLEN = 13 = STRLEN [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]0 
                                    RPARSEG2  TRUE   IF:   [?CNT=]0 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 1 = [?CNT=]0 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 6 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]1,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]6 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]1 
                                    RPARSEG2  TRUE   IF:   [?CNT=]1 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 2 = [?CNT=]1 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]2,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]2 
                                    RPARSEG2  TRUE   IF:   [?CNT=]2 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 3 = [?CNT=]2 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = x = SUBSTR([?GEOM=]60x20+155+110,[?POS=]3,1) 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]x EQ "x" 
                                    RPARSEG2  TRUE   IF:   FREE [:PX=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 3 = [?POS=]3 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]3 
                                    RPARSEG2  TRUE   IF:   [?CNT=]3 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 4 = [?CNT=]3 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 2 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]4,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]2 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]4 
                                    RPARSEG2  TRUE   IF:   [?CNT=]4 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 5 = [?CNT=]4 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]5,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]5 
                                    RPARSEG2  TRUE   IF:   [?CNT=]5 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 6 = [?CNT=]5 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]60x20+155+110,[?POS=]6,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]0 EQ 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P1=]**** 
                                    RPARSEG2  TRUE   IF:   :P1 = 6 = [?POS=]6 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]6 
                                    RPARSEG2  TRUE   IF:   [?CNT=]6 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 7 = [?CNT=]6 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]7,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]7 
                                    RPARSEG2  TRUE   IF:   [?CNT=]7 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 8 = [?CNT=]7 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 5 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]8,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]5 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]8 
                                    RPARSEG2  TRUE   IF:   [?CNT=]8 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 9 = [?CNT=]8 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 5 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]9,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]5 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]9 
                                    RPARSEG2  TRUE   IF:   [?CNT=]9 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 10 = [?CNT=]9 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]60x20+155+110,[?POS=]10,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  FALSE  IF:   [:P1=]6 EQ 0 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]6 NE 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P2=]**** 
                                    RPARSEG2  TRUE   IF:   :P2 = 10 = [?POS=]10 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]10 
                                    RPARSEG2  TRUE   IF:   [?CNT=]10 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 11 = [?CNT=]10 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]11,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]11 
                                    RPARSEG2  TRUE   IF:   [?CNT=]11 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 12 = [?CNT=]11 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]12,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]12 
                                    RPARSEG2  TRUE   IF:   [?CNT=]12 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 13 = [?CNT=]12 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]60x20+155+110,[?POS=]13,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]13 
                                    RPARSEG2  FALSE  IF:   [?CNT=]13 LT [:STRLEN=]13 
                                    RPARSEG2  BREAK  IF:   BREAK 
                                RPARSEG1  TRUE   IF:   FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x20+155+110 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 2 = [:PX=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?WIDTH = 60 = SUBSTR([?GEOM=]60x20+155+110,1,[?LENGTH=]2) 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 4 = [:PX=]3 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [:P1=]6 - [:PX=]3 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 2 = [?LENGTH=]2 - 1 
                                RPARSEG1  TRUE   IF:   ?HEIGHT = 20 = SUBSTR([?GEOM=]60x20+155+110,[?STRTPOS=]4,[?LENGTH=]2) 
                                RPARSEG1  FALSE  IF:   [:P1=]6 EQ 0 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 7 = [:P1=]6 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 4 = [:P2=]10 - [:P1=]6 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?LENGTH=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?LEFT = 155 = SUBSTR([?GEOM=]60x20+155+110,[?STRTPOS=]7,[?LENGTH=]3) 
                                RPARSEG1  FALSE  IF:   [:P2=]10 EQ 0 
                                RPARSEG1  TRUE   IF:   ?P3 = 13 = STRLEN [?GEOM=]60x20+155+110 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 11 = [:P2=]10 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?P3=]13 - [:P2=]10 
                                RPARSEG1  TRUE   IF:   ?TOP = 110 = SUBSTR([?GEOM=]60x20+155+110,[?STRTPOS=]11,[?LENGTH=]3) 
                                RPARSEG1  TRUE   THEN: PARSE_GEOMETRY [?GEOM=]60x20+155+110 [?WIDTH=]60 [?HEIGHT=]20 [?LEFT=]155 
                            RDVUPD23  TRUE   IF:   PARSE_GEOMETRY [?GEOM=]60x20+155+110 [?LENGTH=]60 [?HEIGHT=]20 [?LEFT=]155 [? 
                            RDVUPD23  TRUE   IF:   ?GEOM = 60x20+155+110 = '[?LENGTH2x?HEIGHT+?LEFT+?TOP=]60' 
                            RDVUPD23  TRUE   IF:   DDVUPD1(GEOMETRY_BOT2,D) = [?GEOM=]60x20+155+110 
                            RDVUPD23  TRUE   IF:   ?GEOM = 60x21+191+109 = DDVUPD1(GEOMETRY_BOT3,D) 
                            RDVUPD23  TRUE   IF:   FREE [?LENGTH=]**** [?HEIGHT=]**** [?LEFT=]**** [?TOP=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 0 
                                    RPARSEG2  TRUE   IF:   :P1 = 0 
                                    RPARSEG2  TRUE   IF:   :P2 = 0 
                                    RPARSEG2  TRUE   IF:   :STRLEN = 13 = STRLEN [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]0 
                                    RPARSEG2  TRUE   IF:   [?CNT=]0 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 1 = [?CNT=]0 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 6 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]1,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]6 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]1 
                                    RPARSEG2  TRUE   IF:   [?CNT=]1 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 2 = [?CNT=]1 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]2,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]2 
                                    RPARSEG2  TRUE   IF:   [?CNT=]2 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 3 = [?CNT=]2 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = x = SUBSTR([?GEOM=]60x21+191+109,[?POS=]3,1) 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]x EQ "x" 
                                    RPARSEG2  TRUE   IF:   FREE [:PX=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 3 = [?POS=]3 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]3 
                                    RPARSEG2  TRUE   IF:   [?CNT=]3 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 4 = [?CNT=]3 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 2 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]4,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]2 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]4 
                                    RPARSEG2  TRUE   IF:   [?CNT=]4 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 5 = [?CNT=]4 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]5,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]5 
                                    RPARSEG2  TRUE   IF:   [?CNT=]5 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 6 = [?CNT=]5 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]60x21+191+109,[?POS=]6,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]0 EQ 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P1=]**** 
                                    RPARSEG2  TRUE   IF:   :P1 = 6 = [?POS=]6 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]6 
                                    RPARSEG2  TRUE   IF:   [?CNT=]6 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 7 = [?CNT=]6 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]7,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]7 
                                    RPARSEG2  TRUE   IF:   [?CNT=]7 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 8 = [?CNT=]7 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 9 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]8,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]9 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]8 
                                    RPARSEG2  TRUE   IF:   [?CNT=]8 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 9 = [?CNT=]8 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]9,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]9 
                                    RPARSEG2  TRUE   IF:   [?CNT=]9 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 10 = [?CNT=]9 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]60x21+191+109,[?POS=]10,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  FALSE  IF:   [:P1=]6 EQ 0 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]6 NE 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P2=]**** 
                                    RPARSEG2  TRUE   IF:   :P2 = 10 = [?POS=]10 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]10 
                                    RPARSEG2  TRUE   IF:   [?CNT=]10 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 11 = [?CNT=]10 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]11,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]11 
                                    RPARSEG2  TRUE   IF:   [?CNT=]11 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 12 = [?CNT=]11 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]12,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]12 
                                    RPARSEG2  TRUE   IF:   [?CNT=]12 LT [:STRLEN=]13 
                                    RPARSEG2  TRUE   IF:   ?POS = 13 = [?CNT=]12 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 9 = SUBSTR([?GEOM=]60x21+191+109,[?POS=]13,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]9 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]9 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]13 
                                    RPARSEG2  FALSE  IF:   [?CNT=]13 LT [:STRLEN=]13 
                                    RPARSEG2  BREAK  IF:   BREAK 
                                RPARSEG1  TRUE   IF:   FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]60x21+191+109 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 2 = [:PX=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?WIDTH = 60 = SUBSTR([?GEOM=]60x21+191+109,1,[?LENGTH=]2) 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 4 = [:PX=]3 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [:P1=]6 - [:PX=]3 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 2 = [?LENGTH=]2 - 1 
                                RPARSEG1  TRUE   IF:   ?HEIGHT = 21 = SUBSTR([?GEOM=]60x21+191+109,[?STRTPOS=]4,[?LENGTH=]2) 
                                RPARSEG1  FALSE  IF:   [:P1=]6 EQ 0 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 7 = [:P1=]6 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 4 = [:P2=]10 - [:P1=]6 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?LENGTH=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?LEFT = 191 = SUBSTR([?GEOM=]60x21+191+109,[?STRTPOS=]7,[?LENGTH=]3) 
                                RPARSEG1  FALSE  IF:   [:P2=]10 EQ 0 
                                RPARSEG1  TRUE   IF:   ?P3 = 13 = STRLEN [?GEOM=]60x21+191+109 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 11 = [:P2=]10 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?P3=]13 - [:P2=]10 
                                RPARSEG1  TRUE   IF:   ?TOP = 109 = SUBSTR([?GEOM=]60x21+191+109,[?STRTPOS=]11,[?LENGTH=]3) 
                                RPARSEG1  TRUE   THEN: PARSE_GEOMETRY [?GEOM=]60x21+191+109 [?WIDTH=]60 [?HEIGHT=]21 [?LEFT=]191 
                            RDVUPD23  TRUE   IF:   PARSE_GEOMETRY [?GEOM=]60x21+191+109 [?LENGTH=]60 [?HEIGHT=]21 [?LEFT=]191 [? 
                            RDVUPD23  TRUE   IF:   ?GEOM = 60x21+191+109 = '[?LENGTH2x?HEIGHT+?LEFT+?TOP=]60' 
                            RDVUPD23  TRUE   IF:   DDVUPD1(GEOMETRY_BOT3,D) = [?GEOM=]60x21+191+109 
                            RDVUPD23  TRUE   IF:   APPWK(DVEDITVAL,1) = " " 
                            RDVUPD23  TRUE   IF:   APPEND DDVUPD1 ONTO DDVUPD 
                            RDVUPD23  TRUE   THEN: RDVUPD_BUILD_BOTTOM_OF_DIALOG 
                        RDVUPD20  TRUE   IF:   RDVUPD_BUILD_BOTTOM_OF_DIALOG 
                        RDVUPD20  FALSE  IF:   [:EFFNBR=]6 EQ 0 
                            RDVUPD24  TRUE   IF:   [?DATEIND=]ED EQ "ED" 
                            RDVUPD24  TRUE   IF:   ?DATENBR = 6 = [:EFFNBR=]6 
                            RDVUPD24  TRUE   IF:   ?DLG = "DDVUPD3" 
                                RDVUPD47  TRUE   IF:   ?PROP = STYLE_LAB6 = 'STYLE_LAB[?NBR=]6' 
                                RDVUPD47  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD47  TRUE   IF:   ?PROP = STYLE_LST6 = 'STYLE_LST[?NBR=]6' 
                                RDVUPD47  TRUE   IF:   DDVUPD(?PROP,D) = "INVISIBLE" 
                                RDVUPD47  TRUE   THEN: RDVUPD_REMOVE_OPTIONMENU [?NBR=]6 
                            RDVUPD24  TRUE   IF:   RDVUPD_REMOVE_OPTIONMENU [?DATENBR=]6 
                            RDVUPD24  TRUE   IF:   ?PROP = STYLE_LAB6 = 'STYLE_LAB[?DATENBR=]6' 
                            RDVUPD24  TRUE   IF:   DDVUPD(?PROP,D) = "DISABLED" 
                            RDVUPD24  TRUE   IF:   ?PROP = GEOMETRY_LST6 = 'GEOMETRY_LST[?DATENBR=]6' 
                            RDVUPD24  TRUE   IF:   ?GEOM = SCRGEOM(DDVUPDB_LIST6_OPTIONMENU,@) = DDVUPD([?PROP=]GEOMETRY_LST6,D) 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]275x300+665+71 = [?GEOM=]SCRGEOM(DDVUPDB_LIST6_OPTIONMENU,@) 
                            RDVUPD24  TRUE   IF:   ?GEOM = 275x300+665+71 = [&0=]275x300+665+71 
                            RDVUPD24  TRUE   IF:   FREE [?LENGTH=]**** [?HEIGHT=]**** [?LEFT=]**** [?TOP=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 0 
                                    RPARSEG2  TRUE   IF:   :P1 = 0 
                                    RPARSEG2  TRUE   IF:   :P2 = 0 
                                    RPARSEG2  TRUE   IF:   :STRLEN = 14 = STRLEN [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]0 
                                    RPARSEG2  TRUE   IF:   [?CNT=]0 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 1 = [?CNT=]0 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 2 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]1,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]2 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]2 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]1 
                                    RPARSEG2  TRUE   IF:   [?CNT=]1 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 2 = [?CNT=]1 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 7 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]2,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]7 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]2 
                                    RPARSEG2  TRUE   IF:   [?CNT=]2 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 3 = [?CNT=]2 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 5 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]3,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]5 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]3 
                                    RPARSEG2  TRUE   IF:   [?CNT=]3 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 4 = [?CNT=]3 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = x = SUBSTR([?GEOM=]275x300+665+71,[?POS=]4,1) 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]x EQ "x" 
                                    RPARSEG2  TRUE   IF:   FREE [:PX=]**** 
                                    RPARSEG2  TRUE   IF:   :PX = 4 = [?POS=]4 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]4 
                                    RPARSEG2  TRUE   IF:   [?CNT=]4 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 5 = [?CNT=]4 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 3 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]5,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]3 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]3 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]3 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]3 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]3 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]5 
                                    RPARSEG2  TRUE   IF:   [?CNT=]5 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 6 = [?CNT=]5 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]6,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]6 
                                    RPARSEG2  TRUE   IF:   [?CNT=]6 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 7 = [?CNT=]6 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 0 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]7,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]0 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]0 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]7 
                                    RPARSEG2  TRUE   IF:   [?CNT=]7 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 8 = [?CNT=]7 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]275x300+665+71,[?POS=]8,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]0 EQ 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P1=]**** 
                                    RPARSEG2  TRUE   IF:   :P1 = 8 = [?POS=]8 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]8 
                                    RPARSEG2  TRUE   IF:   [?CNT=]8 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 9 = [?CNT=]8 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 6 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]9,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]6 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]9 
                                    RPARSEG2  TRUE   IF:   [?CNT=]9 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 10 = [?CNT=]9 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 6 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]10,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]6 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]6 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]10 
                                    RPARSEG2  TRUE   IF:   [?CNT=]10 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 11 = [?CNT=]10 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 5 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]11,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]5 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]5 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]11 
                                    RPARSEG2  TRUE   IF:   [?CNT=]11 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 12 = [?CNT=]11 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = + = SUBSTR([?GEOM=]275x300+665+71,[?POS=]12,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]+ EQ X 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  FALSE  IF:   [:P1=]8 EQ 0 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]+ EQ "+" 
                                    RPARSEG2  TRUE   IF:   [:P1=]8 NE 0 
                                    RPARSEG2  TRUE   IF:   FREE [:P2=]**** 
                                    RPARSEG2  TRUE   IF:   :P2 = 12 = [?POS=]12 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]12 
                                    RPARSEG2  TRUE   IF:   [?CNT=]12 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 13 = [?CNT=]12 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 7 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]13,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]7 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]7 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]13 
                                    RPARSEG2  TRUE   IF:   [?CNT=]13 LT [:STRLEN=]14 
                                    RPARSEG2  TRUE   IF:   ?POS = 14 = [?CNT=]13 + 1 
                                    RPARSEG2  TRUE   IF:   ?CHAR = 1 = SUBSTR([?GEOM=]275x300+665+71,[?POS=]14,1) 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "x" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ X 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  FALSE  IF:   [?CHAR=]1 EQ "+" 
                                    RPARSEG2  TRUE   IF:   [?CHAR=]1 GE 0 
                                    RPARSEG2  TRUE   THEN: FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                    RPARSEG2  TRUE   IF:   WHILE [?CNT=]14 
                                    RPARSEG2  FALSE  IF:   [?CNT=]14 LT [:STRLEN=]14 
                                    RPARSEG2  BREAK  IF:   BREAK 
                                RPARSEG1  TRUE   IF:   FIND_POSITIONS_OF_X_AND_BOTH_PLUS_SIGNS [?GEOM=]275x300+665+71 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [:PX=]4 - 1 
                                RPARSEG1  TRUE   IF:   ?WIDTH = 275 = SUBSTR([?GEOM=]275x300+665+71,1,[?LENGTH=]3) 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 5 = [:PX=]4 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 4 = [:P1=]8 - [:PX=]4 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?LENGTH=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?HEIGHT = 300 = SUBSTR([?GEOM=]275x300+665+71,[?STRTPOS=]5,[?LENGTH=]3) 
                                RPARSEG1  FALSE  IF:   [:P1=]8 EQ 0 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 9 = [:P1=]8 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 4 = [:P2=]12 - [:P1=]8 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 3 = [?LENGTH=]3 - 1 
                                RPARSEG1  TRUE   IF:   ?LEFT = 665 = SUBSTR([?GEOM=]275x300+665+71,[?STRTPOS=]9,[?LENGTH=]3) 
                                RPARSEG1  FALSE  IF:   [:P2=]12 EQ 0 
                                RPARSEG1  TRUE   IF:   ?P3 = 14 = STRLEN [?GEOM=]275x300+665+71 
                                RPARSEG1  TRUE   IF:   ?STRTPOS = 13 = [:P2=]12 + 1 
                                RPARSEG1  TRUE   IF:   ?LENGTH = 2 = [?P3=]14 - [:P2=]12 
                                RPARSEG1  TRUE   IF:   ?TOP = 71 = SUBSTR([?GEOM=]275x300+665+71,[?STRTPOS=]13,[?LENGTH=]2) 
                                RPARSEG1  TRUE   THEN: PARSE_GEOMETRY [?GEOM=]275x300+665+71 [?WIDTH=]275 [?HEIGHT=]300 [?LEFT=] 
                            RDVUPD24  TRUE   IF:   PARSE_GEOMETRY [?GEOM=]275x300+665+71 [?LENGTH=]275 [?HEIGHT=]300 [?LEFT=]665 
                            RDVUPD24  TRUE   IF:   ?RIGHT = 940 = [?LEFT=]665 + [?LENGTH=]275 
                            RDVUPD24  TRUE   IF:   ?LENGTH = 235 = [?LENGTH=]235 - 40 
                            RDVUPD24  TRUE   IF:   ?HEIGHT = 21 
                            RDVUPD24  TRUE   IF:   ?GEOM = 235x21+665+71 = '[?LENGTHx?HEIGHT+?LEFT+?TOP=]****' 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]235X21+665+71 = [?GEOM=]235x21+665+71 
                            RDVUPD24  TRUE   IF:   ?PROP = GEOMETRY_ED1 = 'GEOMETRY_[?DATEIND1=]ED' 
                            RDVUPD24  TRUE   IF:   FILL [?DLG=]DDVUPD3([?PROP=]GEOMETRY_ED1,D) = "[&0=]235X21+665+71" 
                            RDVUPD24  TRUE   IF:   ?LENGTH = 185 = [?LENGTH=]185 - 50 
                            RDVUPD24  TRUE   IF:   ?HEIGHT = 13 
                            RDVUPD24  TRUE   IF:   ?LEFT = 670 = [?LEFT=]670 + 5 
                            RDVUPD24  TRUE   IF:   ?TOP = 76 = [?TOP=]76 + 5 
                            RDVUPD24  TRUE   IF:   ?GEOM = 185x13+670+76 = '[?LENGTHx?HEIGHT+?LEFT+?TOP=]****' 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]185X13+670+76 = [?GEOM=]185x13+670+76 
                            RDVUPD24  TRUE   IF:   ?PROP = GEOMETRY_ED2 = 'GEOMETRY_[?DATEIND2=]ED' 
                            RDVUPD24  TRUE   IF:   FILL [?DLG=]DDVUPD3([?PROP=]GEOMETRY_ED2,D) = "[&0=]185X13+670+76" 
                            RDVUPD24  TRUE   IF:   ?LENGTH = 40 
                            RDVUPD24  TRUE   IF:   ?HEIGHT = 21 
                            RDVUPD24  TRUE   IF:   ?LEFT = 900 = [?RIGHT=]940 - [?LENGTH=]40 
                            RDVUPD24  TRUE   IF:   ?TOP = 71 = [?TOP=]71 - 5 
                            RDVUPD24  TRUE   IF:   ?GEOM = 40x21+900+71 = '[?LENGTHx?HEIGHT+?LEFT+?TOP=]****' 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]40X21+900+71 = [?GEOM=]40x21+900+71 
                            RDVUPD24  TRUE   IF:   ?PROP = GEOMETRY_EDCAL = 'GEOMETRY_[?DATEINDCAL=]ED' 
                            RDVUPD24  TRUE   IF:   FILL [?DLG=]DDVUPD3([?PROP=]GEOMETRY_EDCAL,D) = "[&0=]40X21+900+71" 
                            RDVUPD24  TRUE   IF:   ?LEFT = 900 = [?LEFT=]900 + 0 
                            RDVUPD24  TRUE   IF:   ?TOP = 171 = [?TOP=]171 + 100 
                            RDVUPD24  TRUE   IF:   ?AFTER = <MDVCAL 900 171 DATETIME DATETIMEED = '<MDVCAL [?LEFT=]900 [?TOP=]17 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]<MDVCAL 900 171 DATETIME DATETIMEED = [?AFTER=]<MDVCAL 900 171 DA 
                            RDVUPD24  TRUE   IF:   ?PROP = AFTER_EDCAL = 'AFTER_[?DATEINDCAL=]ED' 
                            RDVUPD24  TRUE   IF:   FILL [?DLG=]DDVUPD3([?PROP=]AFTER_EDCAL,D) = "[&0=]<MDVCAL 900 171 DATETIME D 
                            RDVUPD24  TRUE   IF:   AMPSET [&0=]DATTIMS.BMP = [:DSPIXMA=]DATTIMS.BMP 
                            RDVUPD24  TRUE   IF:   FILL [?DLG=]DDVUPD3(PIXMAP_DATSEL,D) = "[&0=]DATTIMS.BMP" 
                            RDVUPD24  TRUE   IF:   APPWK(DVDATECODE1,1) = " " 
                            RDVUPD24  TRUE   IF:   APPWK(DVDATECODE2,1) = " " 
                            RDVUPD24  TRUE   IF:   APPWK(DVDATEHOLD1,1) = " " 
                            RDVUPD24  TRUE   IF:   APPWK(DVDATEHOLD2,1) = " " 
                            RDVUPD24  TRUE   IF:   APPEND [?DLG=]DDVUPD3 ONTO DDVUPD 
                            RDVUPD24  TRUE   THEN: RDVUPD_REPLACE_OPTIONMENU_WITH_DATE_WIDGETS [?DATEIND=]ED 
                        RDVUPD20  TRUE   IF:   RDVUPD_REPLACE_OPTIONMENU_WITH_DATE_WIDGETS ED 
                        RDVUPD20  TRUE   IF:   [:EXPNBR=]0 EQ 0 
                        RDVUPD20  TRUE   THEN: RDVUPD_BUILD_DDVUPD_DIALOG 
                    RDVUPD10  TRUE   IF:   RDVUPD_BUILD_DDVUPD_DIALOG 
                    RDVUPD10  TRUE   THEN: RDVUPD_INITIALIZE_UPDATE_DATA_DIALOG 
                RDV300    TRUE   IF:   RDVUPD_INITIALIZE_UPDATE_DATA_DIALOG 
                RDV300    TRUE   IF:   REGUI 
                RDV300    TRUE   THEN: RDV_AFTER_ROUTINE_FOR_DDV_PROPERTYSHEET 
            _RPATC17  TRUE   IF:   RDV_AFTER_ROUTINE_FOR_DDV_PROPERTYSHEET 
            _RPATC17  TRUE   IF:   ?SIZ1 = 1 = SIZEOF DVTABMR 
            _RPATC17  TRUE   IF:   :TABTYPE = MD = DVCTL([:DVTABLE=]_IDEMAND,TABTYPE) 
            _RPATC17  TRUE   IF:   [?SIZ1=]1 == 1 
            _RPATC17  TRUE   IF:   [:VIEWTYP=]DATALIST == "DATALIST" 
            _RPATC17  TRUE   IF:   SETIND DVTABMR = 0 
            _RPATC17  TRUE   IF:   ?CODE =  = CODEOF DVTABMR(@) 
            _RPATC17  TRUE   IF:   [?CODE=] == 
            _RPATC17  TRUE   IF:   DVTABMR = NULL 
            _RPATC17  TRUE   IF:   DVTABMC = NULL 
            _RPATC17  TRUE   IF:   DVTABMC = [:COLSET=]_IDEMANC 
                RDVTXT51  TRUE   IF:   TMPSET7 = NULL 
                RDVTXT51  TRUE   IF:   TMPSET7 = DVTABMC 
                RDVTXT51  TRUE   IF:   TMPSET7 = DVTABMC - LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = _DIV IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = _DIV IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]_DIV BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                    RDVTXT52  TRUE   IF:   ?COL = PLA IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = PLA IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]PLA BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                    RDVTXT52  TRUE   IF:   ?COL = MAT IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = MAT IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]MAT BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                    RDVTXT52  TRUE   IF:   ?COL = SHIPTO IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = SHIPTO IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]SHIPTO BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                    RDVTXT52  TRUE   IF:   ?COL = DTYPE IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = DTYPE IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]DTYPE BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                    RDVTXT52  TRUE   IF:   ?COL = EFFDTTM IN LISTWRK 
                    RDVTXT52  TRUE   IF:   ?COL = EFFDTTM IN DVTABMC 
                    RDVTXT52  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]EFFDTTM BOTTOM 
                    RDVTXT52  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                RDVTXT51  TRUE   IF:   RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ_CONT 
                RDVTXT51  TRUE   IF:   ?SIZE = 14 = SIZEOF TMPSET7 
                RDVTXT51  FALSE  IF:   [?SIZE=]14 EQ 0 
                RDVTXT51  TRUE   IF:   ?COL = _NETLOC IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]_NETLOC BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = _DMDATE IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]_DMDATE BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = _GMN IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]_GMN BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = PACK IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]PACK BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = DCI IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]DCI BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = SLONUM IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]SLONUM BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = SLINUM IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]SLINUM BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = DNUM IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]DNUM BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = DLIT IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]DLIT BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = BATN IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]BATN BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = PONUM IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]PONUM BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = CLOC IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]CLOC BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = _DEST IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]_DEST BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT51  TRUE   IF:   ?COL = $ENTRY IN TMPSET7 
                RDVTXT51  TRUE   IF:   RESEQUENCE DVTABMC [?COL=]$ENTRY BOTTOM 
                RDVTXT51  TRUE   THEN: RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
            _RPATC17  TRUE   IF:   RDVTXT_RESEQUENCE_COLUMNS_TO_MATCH_DOMAIN_SEQ 
                RDVTXT53  TRUE   IF:   ?COL = _DIV IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = _DIV IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Division = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Division 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = PLA IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = PLA IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Plant = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Plant 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = MAT IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = MAT IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Material = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Material 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = SHIPTO IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = SHIPTO IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Ship To = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Ship To 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = DTYPE IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = DTYPE IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Demand Type = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Demand Type 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = EFFDTTM IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = EFFDTTM IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Schedule Date and Time = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Schedule Date and Time 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = _NETLOC IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = _NETLOC IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Custom Hier/Netting Loc = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Custom Hier/Netting Loc 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = _DMDATE IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = _DMDATE IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = _GMN IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = _GMN IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = GMN = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]GMN 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = PACK IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = PACK IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = DCI IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = DCI IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = SLONUM IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = SLONUM IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = SLINUM IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = SLINUM IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = DNUM IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = DNUM IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = DLIT IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = DLIT IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = BATN IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = BATN IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = PONUM IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = PONUM IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = CLOC IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = CLOC IN DVATT 
                RDVTXT53  TRUE   IF:   ?COL = _DEST IN DVTABMC 
                RDVTXT53  TRUE   IF:   ?COL = _DEST IN DVATT 
                RDVTXT53  TRUE   IF:   ?DESC = Destination = DVATT(@,D) 
                RDVTXT53  TRUE   IF:   DVTABMC(@,D) = [?DESC=]Destination 
                RDVTXT53  TRUE   THEN: RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTXT53  TRUE   IF:   ?COL = $ENTRY IN DVTABMC 
                RDVTXT53  FALSE  IF:   ?COL = $ENTRY IN DVATT 
            _RPATC17  TRUE   IF:   RDVTXT_ASSIGN_COLUMN_TITLES 
                RDVTX50A  TRUE   IF:   ?X = "$ENTRY" 
                RDVTX50A  TRUE   IF:   ?X = $ENTRY IN DVTABMC 
                RDVTX50A  TRUE   IF:   ?NEWDESC = Value = LNGTEXT(DV_RDVTXT1,@) 
                RDVTX50A  TRUE   IF:   ?DESC = Amount = DESCOF DVTABMC(@) 
                RDVTX50A  FALSE  IF:   [?DESC=]Amount EQ "Value" 
                RDVTX50A  FALSE  IF:   [?DESC=]Amount EQ "value" 
                RDVTX50A  FALSE  IF:   [?DESC=]Amount EQ "VALUE" 
                RDVTX50A  TRUE   IF:   TRUE 
                RDVTX50A  TRUE   THEN: RDVTXT_TRANSLATE_[$E=]NTRY_WHEN_DESC_IS_VALUE 
            _RPATC17  TRUE   IF:   RDVTXT_TRANSLATE_[$E=]NTRY_WHEN_DESC_IS_VALUE 
            _RPATC17  TRUE   IF:   MODIFY DVTABM FORMAT = C64 
            _RPATC17  TRUE   IF:   FORMAT DVTABM = DEFAULT 
            _RPATC17  TRUE   IF:   MODIFY DVTABM DECODE = BD 
            _RPATC17  TRUE   IF:   FREE [:MODE=]**** 
            _RPATC17  TRUE   IF:   :MODE = ADD 
                RDVC3AB   TRUE   IF:   DVTABMFC = NULL 
                RDVC3AB   TRUE   IF:   DVTABMFC = DVTABMC 
                RDVC3AB   TRUE   IF:   ?SET = _DIV IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = _DIV IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 0 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 1 = [?N=]1 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = _DIV IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL1 = 'SELFIL[?N=]1' 
                === Macro started  <MUTIL ASSIGN SELFIL1 _DIV ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL1 = _DIV                           elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL1 _DIV                      total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL1 [?SET=]_DIV 
                RDVC3AB   FALSE  IF:   ?SET = _DIV IN DVDT 
                RDVC3AB   TRUE   IF:   TRUE 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL1 = 'DECODEL[?N=]1' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL1 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL1(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL1(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = PLA IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = PLA IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 1 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 2 = [?N=]2 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = PLA IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL2 = 'SELFIL[?N=]2' 
                === Macro started  <MUTIL ASSIGN SELFIL2 PLA ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL2 = PLA                            elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL2 PLA                       total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL2 [?SET=]PLA 
                RDVC3AB   FALSE  IF:   ?SET = PLA IN DVDT 
                RDVC3AB   TRUE   IF:   TRUE 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL2 = 'DECODEL[?N=]2' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL2 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL2(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL2(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = MAT IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = MAT IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 2 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 3 = [?N=]3 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = MAT IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL3 = 'SELFIL[?N=]3' 
                === Macro started  <MUTIL ASSIGN SELFIL3 MAT ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL3 = MAT                            elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL3 MAT                       total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL3 [?SET=]MAT 
                RDVC3AB   FALSE  IF:   ?SET = MAT IN DVDT 
                RDVC3AB   TRUE   IF:   TRUE 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL3 = 'DECODEL[?N=]3' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL3 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL3(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL3(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = SHIPTO IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = SHIPTO IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 3 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 4 = [?N=]4 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = SHIPTO IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL4 = 'SELFIL[?N=]4' 
                === Macro started  <MUTIL ASSIGN SELFIL4 SHIPTO ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL4 = SHIPTO                         elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL4 SHIPTO                    total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL4 [?SET=]SHIPTO 
                RDVC3AB   FALSE  IF:   ?SET = SHIPTO IN DVDT 
                RDVC3AB   TRUE   IF:   TRUE 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL4 = 'DECODEL[?N=]4' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL4 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL4(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL4(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = DTYPE IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = DTYPE IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 4 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 5 = [?N=]5 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = DTYPE IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL5 = 'SELFIL[?N=]5' 
                === Macro started  <MUTIL ASSIGN SELFIL5 DTYPE ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL5 = DTYPE                          elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL5 DTYPE                     total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL5 [?SET=]DTYPE 
                RDVC3AB   FALSE  IF:   ?SET = DTYPE IN DVDT 
                RDVC3AB   TRUE   IF:   TRUE 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL5 = 'DECODEL[?N=]5' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL5 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL5(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL5(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = EFFDTTM IN DVTABMFC 
                RDVC3AB   TRUE   IF:   ?SET = EFFDTTM IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?N = 5 = INDEXOF LISTWRK(@) 
                RDVC3AB   TRUE   IF:   ?N = 6 = [?N=]6 + 1 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(WIDTH,@) = "AUTO" 
                RDVC3AB   TRUE   IF:   ?SET = EFFDTTM IN SCAT 
                RDVC3AB   TRUE   IF:   DVTABMFT(TYPE,@) = "ENUM_SORTASC" 
                RDVC3AB   TRUE   IF:   ?FILSET = SELFIL6 = 'SELFIL[?N=]6' 
                === Macro started  <MUTIL ASSIGN SELFIL6 EFFDTTM ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     SELFIL6 = EFFDTTM                        elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN SELFIL6 EFFDTTM                   total  time:     0.00 sec 
 
                RDVC3AB   TRUE   IF:   <MUTIL ASSIGN [?FILSET=]SELFIL6 [?SET=]EFFDTTM 
                RDVC3AB   TRUE   IF:   ?SET = EFFDTTM IN DVDT 
                RDVC3AB   TRUE   IF:   ?METHOD = DATETIME = DVDTCTL(@,DSMETHOD) 
                    RDVC3AB0  FALSE  IF:   [?METHOD=]DATETIME == "DATEONLY" 
                    RDVC3AB0  FALSE  IF:   [?METHOD=]DATETIME == "TIMEONLY" 
                    RDVC3AB0  TRUE   IF:   [?METHOD=]DATETIME == "DATETIME" 
                    RDVC3AB0  TRUE   IF:   ?FMT = "DATETIME" 
                    RDVC3AB0  TRUE   THEN: RDVCALL_GET_DATE_FORMAT [?METHOD=]DATETIME [?FMT=]DATETIME 
                RDVC3AB   TRUE   IF:   RDVCALL_GET_DATE_FORMAT [?METHOD=]DATETIME [?FMT=]DATETIME 
                RDVC3AB   TRUE   IF:   FILL DVTABMFT(TYPE,@) = [?FMT=]DATETIME 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL6 = 'DECODEL[?N=]6' 
                RDVC3AB   TRUE   IF:   ?DECDL = DECODEL6 IN DVOPTC 
                RDVC3AB   TRUE   IF:   ?DECODE = D = DVOPT(@,@) 
                RDVC3AB   TRUE   IF:   ?NAME = SELFIL6(D) = '[?FILSET:OPENP?DECODE:CLOSP=]****' 
                RDVC3AB   TRUE   IF:   DVTABMFT(RANGE,@) = [?NAME=]SELFIL6(D) 
                RDVC3AB   TRUE   THEN: RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
                RDVC3AB   TRUE   IF:   ?SET = _NETLOC IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = _NETLOC IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = _DMDATE IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = _DMDATE IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = _GMN IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = _GMN IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = PACK IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = PACK IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = DCI IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = DCI IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = SLONUM IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = SLONUM IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = SLINUM IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = SLINUM IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = DNUM IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = DNUM IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = DLIT IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = DLIT IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = BATN IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = BATN IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = PONUM IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = PONUM IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = CLOC IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = CLOC IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = _DEST IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = _DEST IN LISTWRK 
                RDVC3AB   TRUE   IF:   ?SET = $ENTRY IN DVTABMFC 
                RDVC3AB   FALSE  IF:   ?SET = $ENTRY IN LISTWRK 
            _RPATC17  TRUE   IF:   RDVCALL_DVTABM_FILL_DVTABMFT_WITH_COLUMN_FORMATS 
            _RPATC17  TRUE   IF:   [:DVVONLY=]N NE "Y" 
                RDVUPD13  TRUE   IF:   DDVUPDB(STYLE_RADIOBOX,D) = "NOBOX" 
                RDVUPD13  TRUE   IF:   TMPSET1 = NULL 
                RDVUPD13  TRUE   IF:   ?ADDLNG = Add = LNGTEXT(DV_MODE_ADD,@) 
                RDVUPD13  TRUE   IF:   ?EDTLNG = Edit = LNGTEXT(DV_MODE_EDT,@) 
                RDVUPD13  TRUE   IF:   ?REPLNG = Replace = LNGTEXT(DV_MODE_REP,@) 
                RDVUPD13  TRUE   IF:   ?DELLNG = Delete = LNGTEXT(DV_MODE_DEL,@) 
                RDVUPD13  TRUE   IF:   APPEND TMPSET1 ADD [?ADDLNG=]Add 
                RDVUPD13  TRUE   IF:   APPEND TMPSET1 EDT [?EDTLNG=]Edit 
                RDVUPD13  TRUE   IF:   APPEND TMPSET1 REP [?REPLNG=]Replace 
                RDVUPD13  TRUE   IF:   APPEND TMPSET1 DEL [?DELLNG=]Delete 
                RDVUPD13  TRUE   IF:   DVMODE = NULL 
                RDVUPD13  TRUE   IF:   DVMODE = TMPSET1 
                    RDVUPD14  TRUE   IF:   [:UPDTYPE=]VAL EQ "VAL" 
                    RDVUPD14  TRUE   IF:   DVMODE = DVMODE * DVMODE3 
                    RDVUPD14  TRUE   THEN: RDVUPD_WHICH_MODES_ARE_AVAILABLE_FOR_DV_TABLE 
                RDVUPD13  TRUE   IF:   RDVUPD_WHICH_MODES_ARE_AVAILABLE_FOR_DV_TABLE 
                    RDVUPD15  TRUE   IF:   :MODESET =  = DVCTL([:TABLE=]_IDEMAND,UPDMODES) 
                    RDVUPD15  TRUE   IF:   [:MODESET=] EQ 
                    RDVUPD15  TRUE   THEN: RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
                RDVUPD13  TRUE   IF:   RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
                RDVUPD13  TRUE   IF:   SETIND DVMODE = -1 
                RDVUPD13  TRUE   IF:   ?SIZ = 4 = SIZEOF DVMODE 
                RDVUPD13  TRUE   IF:   [?SIZ=]4 GT 0 
                RDVUPD13  TRUE   THEN: RDVUPD_SETUP_MODES 
            _RPATC17  TRUE   IF:   RDVUPD_SETUP_MODES 
                RDVUPD15  TRUE   IF:   :MODESET =  = DVCTL([:TABLE=]_IDEMAND,UPDMODES) 
                RDVUPD15  TRUE   IF:   [:MODESET=] EQ 
                RDVUPD15  TRUE   THEN: RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
            _RPATC17  TRUE   IF:   RDVUPD_WHICH_MODES_ARE_SPECIFIED_IN_DVCTL 
            _RPATC17  TRUE   IF:   [:DVVONLY=]N EQ "N" 
            _RPATC17  TRUE   IF:   FILL DVEDITS3(@,1) = 1 
            _RPATC17  TRUE   IF:   ?SIZE = 4 = SIZEOF DVMODE 
            _RPATC17  TRUE   IF:   [?SIZE=]4 > 0 
            _RPATC17  TRUE   IF:   FILL DVEDITS3(@,1) = 1 
            _RPATC17  TRUE   IF:   ?MODE = DEL 
            _RPATC17  TRUE   IF:   ?MODE = DEL IN DVMODE 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,*) = 0 
            _RPATC17  TRUE   IF:   ?MODE = ADD 
            _RPATC17  TRUE   IF:   ?MODE = ADD IN DVMODE 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,*) = "" 
            _RPATC17  TRUE   IF:   APPENDIF DVMODE EDT 
            _RPATC17  TRUE   IF:   ?FMT = F7.0 = DVOPT(@,NBRFMT) 
            _RPATC17  TRUE   IF:   ?MODE = EDT 
            _RPATC17  TRUE   IF:   ?MODE = EDT IN DVMODE 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,*) = "" 
            _RPATC17  TRUE   IF:   ?ENTRY = "$ENTRY" 
            _RPATC17  TRUE   IF:   ?ENTRY = $ENTRY IN DVTABMC 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?ENTRY=]$ENTRY) = "" 
                RDVC3AE   TRUE   IF:   PARSEWK = NULL 
                    RPARSE0   FALSE  IF:   [?DELIM=]. EQ 
                        RPARSE2   TRUE   IF:   PARSEWK = NULL 
                        RPARSE2   TRUE   IF:   TMPSTR = NULL 
                        RPARSE2   TRUE   IF:   :POS2 = 1 
                        RPARSE2   TRUE   IF:   :TOTCHAR = 4 = STRLEN [?INPSTR=]F7.0 
                        RPARSE2   FALSE  IF:   [:TOTCHAR=]4 EQ 0 
                        RPARSE2   TRUE   IF:   WHILE [?I=]0 
                        RPARSE2   FALSE  IF:   [?I=]0 NE 0 
                        RPARSE2   TRUE   IF:   WHILE [?I=]1 
                        RPARSE2   TRUE   IF:   [?I=]1 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 1 = [?I=]1 
                        RPARSE2   TRUE   IF:   [?POS=]1 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = F = SUBSTR([?INPSTR=]F7.0,[?POS=]1,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]F EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]1,1) = [?CHAR=]F 
                            RPARSE3   TRUE   IF:   :POS2 = 2 = [:POS2=]2 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]F [?DELIM=]. [?POS=]1 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]F [?DELIM=]. [?POS=]1 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]2 
                        RPARSE2   TRUE   IF:   [?I=]2 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 2 = [?I=]2 
                        RPARSE2   TRUE   IF:   [?POS=]2 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = 7 = SUBSTR([?INPSTR=]F7.0,[?POS=]2,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]7 EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]2,1) = [?CHAR=]7 
                            RPARSE3   TRUE   IF:   :POS2 = 3 = [:POS2=]3 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]7 [?DELIM=]. [?POS=]2 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]7 [?DELIM=]. [?POS=]2 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]3 
                        RPARSE2   TRUE   IF:   [?I=]3 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 3 = [?I=]3 
                        RPARSE2   TRUE   IF:   [?POS=]3 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = . = SUBSTR([?INPSTR=]F7.0,[?POS=]3,1) 
                            RPARSE3   TRUE   IF:   [?CHAR=]. EQ [?DELIM=]. 
                                RPARSE4   TRUE   IF:   ?TOKEN = F7 = TMPSTR(1,1,64) 
                                RPARSE4   FALSE  IF:   [?TOKEN=]F7 EQ 
                                RPARSE4   TRUE   IF:   ?SIZE = 0 = SIZEOF PARSEWK 
                                RPARSE4   TRUE   IF:   ?ROWNBR = 1 = [?SIZE=]0 + 1 
                                RPARSE4   TRUE   IF:   APPEND PARSEWK [?ROWNBR=]1 [?TOKEN=]F7 
                                RPARSE4   TRUE   IF:   TMPSTR = NULL 
                                RPARSE4   TRUE   IF:   :POS2 = 1 
                                RPARSE4   TRUE   THEN: APPEND_TOKEN_TO_PARSEWK 
                            RPARSE3   TRUE   IF:   APPEND_TOKEN_TO_PARSEWK 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]. [?DELIM=]. [?POS=]3 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]. [?DELIM=]. [?POS=]3 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]4 
                        RPARSE2   TRUE   IF:   [?I=]4 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 4 = [?I=]4 
                        RPARSE2   TRUE   IF:   [?POS=]4 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = 0 = SUBSTR([?INPSTR=]F7.0,[?POS=]4,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]0 EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]1,1) = [?CHAR=]0 
                            RPARSE3   TRUE   IF:   :POS2 = 2 = [:POS2=]2 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]0 [?DELIM=]. [?POS=]4 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]0 [?DELIM=]. [?POS=]4 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]5 
                        RPARSE2   TRUE   IF:   [?I=]5 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 5 = [?I=]5 
                        RPARSE2   FALSE  IF:   [?POS=]5 LE [:TOTCHAR=]4 
                            RPARSE4   TRUE   IF:   ?TOKEN = 0 = TMPSTR(1,1,64) 
                            RPARSE4   FALSE  IF:   [?TOKEN=]0 EQ 
                            RPARSE4   TRUE   IF:   ?SIZE = 1 = SIZEOF PARSEWK 
                            RPARSE4   TRUE   IF:   ?ROWNBR = 2 = [?SIZE=]1 + 1 
                            RPARSE4   TRUE   IF:   APPEND PARSEWK [?ROWNBR=]2 [?TOKEN=]0 
                            RPARSE4   TRUE   IF:   TMPSTR = NULL 
                            RPARSE4   TRUE   IF:   :POS2 = 1 
                            RPARSE4   TRUE   THEN: APPEND_TOKEN_TO_PARSEWK 
                        RPARSE2   TRUE   IF:   APPEND_TOKEN_TO_PARSEWK 
                        RPARSE2   BREAK  IF:   BREAK [?I=]5 
                    RPARSE0   TRUE   IF:   PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                    RPARSE0   TRUE   THEN: PARSE [?INPSTR=]F7.0 DELIMITED_BY [?DELIM=]. 
                RDVC3AE   TRUE   IF:   PARSE [?FMT=]F7.0 DELIMITED_BY "." 
                RDVC3AE   TRUE   IF:   ?SIZ = 2 = SIZEOF PARSEWK 
                RDVC3AE   TRUE   IF:   [?SIZ=]2 >= 2 
                RDVC3AE   TRUE   IF:   ?CD = "2" 
                RDVC3AE   TRUE   IF:   ?CD = 2 IN PARSEWK 
                RDVC3AE   TRUE   IF:   ?DIGIT = 0 = DESCOF PARSEWK(@) 
                RDVC3AE   TRUE   THEN: RDVCALL_PARSE_NBRFMT [?FMT=]F7.0 [?DIGIT=]0 
            _RPATC17  TRUE   IF:   RDVCALL_PARSE_NBRFMT [?FMT=]F7.0 [?DIGIT=]0 
            _RPATC17  TRUE   IF:   ?DIGFMT = 24.0 = '24.[?DIGIT=]0' 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(TYPE,[?ENTRY=]$ENTRY) = "Real" 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(RANGE,[?ENTRY=]$ENTRY) = [?DIGFMT=]24.0 
            _RPATC17  TRUE   IF:   ?MODE = REP 
            _RPATC17  TRUE   IF:   ?MODE = REP IN DVMODE 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,*) = "" 
            _RPATC17  TRUE   IF:   APPENDIF DVMODE EDT 
            _RPATC17  TRUE   IF:   ?ENTRY = "$ENTRY" 
            _RPATC17  TRUE   IF:   ?ENTRY = $ENTRY IN DVTABMC 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?ENTRY=]$ENTRY) = "" 
                RDVC3AE   TRUE   IF:   PARSEWK = NULL 
                    RPARSE0   FALSE  IF:   [?DELIM=]. EQ 
                        RPARSE2   TRUE   IF:   PARSEWK = NULL 
                        RPARSE2   TRUE   IF:   TMPSTR = NULL 
                        RPARSE2   TRUE   IF:   :POS2 = 1 
                        RPARSE2   TRUE   IF:   :TOTCHAR = 4 = STRLEN [?INPSTR=]F7.0 
                        RPARSE2   FALSE  IF:   [:TOTCHAR=]4 EQ 0 
                        RPARSE2   TRUE   IF:   WHILE [?I=]0 
                        RPARSE2   FALSE  IF:   [?I=]0 NE 0 
                        RPARSE2   TRUE   IF:   WHILE [?I=]1 
                        RPARSE2   TRUE   IF:   [?I=]1 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 1 = [?I=]1 
                        RPARSE2   TRUE   IF:   [?POS=]1 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = F = SUBSTR([?INPSTR=]F7.0,[?POS=]1,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]F EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]1,1) = [?CHAR=]F 
                            RPARSE3   TRUE   IF:   :POS2 = 2 = [:POS2=]2 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]F [?DELIM=]. [?POS=]1 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]F [?DELIM=]. [?POS=]1 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]2 
                        RPARSE2   TRUE   IF:   [?I=]2 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 2 = [?I=]2 
                        RPARSE2   TRUE   IF:   [?POS=]2 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = 7 = SUBSTR([?INPSTR=]F7.0,[?POS=]2,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]7 EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]2,1) = [?CHAR=]7 
                            RPARSE3   TRUE   IF:   :POS2 = 3 = [:POS2=]3 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]7 [?DELIM=]. [?POS=]2 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]7 [?DELIM=]. [?POS=]2 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]3 
                        RPARSE2   TRUE   IF:   [?I=]3 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 3 = [?I=]3 
                        RPARSE2   TRUE   IF:   [?POS=]3 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = . = SUBSTR([?INPSTR=]F7.0,[?POS=]3,1) 
                            RPARSE3   TRUE   IF:   [?CHAR=]. EQ [?DELIM=]. 
                                RPARSE4   TRUE   IF:   ?TOKEN = F7 = TMPSTR(1,1,64) 
                                RPARSE4   FALSE  IF:   [?TOKEN=]F7 EQ 
                                RPARSE4   TRUE   IF:   ?SIZE = 0 = SIZEOF PARSEWK 
                                RPARSE4   TRUE   IF:   ?ROWNBR = 1 = [?SIZE=]0 + 1 
                                RPARSE4   TRUE   IF:   APPEND PARSEWK [?ROWNBR=]1 [?TOKEN=]F7 
                                RPARSE4   TRUE   IF:   TMPSTR = NULL 
                                RPARSE4   TRUE   IF:   :POS2 = 1 
                                RPARSE4   TRUE   THEN: APPEND_TOKEN_TO_PARSEWK 
                            RPARSE3   TRUE   IF:   APPEND_TOKEN_TO_PARSEWK 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]. [?DELIM=]. [?POS=]3 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]. [?DELIM=]. [?POS=]3 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]4 
                        RPARSE2   TRUE   IF:   [?I=]4 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 4 = [?I=]4 
                        RPARSE2   TRUE   IF:   [?POS=]4 LE [:TOTCHAR=]4 
                        RPARSE2   TRUE   IF:   ?CHAR = 0 = SUBSTR([?INPSTR=]F7.0,[?POS=]4,1) 
                            RPARSE3   FALSE  IF:   [?CHAR=]0 EQ [?DELIM=]. 
                            RPARSE3   TRUE   IF:   TMPSTR(1,[:POS2=]1,1) = [?CHAR=]0 
                            RPARSE3   TRUE   IF:   :POS2 = 2 = [:POS2=]2 + 1 
                            RPARSE3   TRUE   THEN: DECIDE_WHAT_TO_DO [?CHAR=]0 [?DELIM=]. [?POS=]4 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   IF:   DECIDE_WHAT_TO_DO [?CHAR=]0 [?DELIM=]. [?POS=]4 [?INPSTR=]F7.0 
                        RPARSE2   TRUE   THEN: PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                        RPARSE2   TRUE   IF:   WHILE [?I=]5 
                        RPARSE2   TRUE   IF:   [?I=]5 NE 0 
                        RPARSE2   TRUE   IF:   ?POS = 5 = [?I=]5 
                        RPARSE2   FALSE  IF:   [?POS=]5 LE [:TOTCHAR=]4 
                            RPARSE4   TRUE   IF:   ?TOKEN = 0 = TMPSTR(1,1,64) 
                            RPARSE4   FALSE  IF:   [?TOKEN=]0 EQ 
                            RPARSE4   TRUE   IF:   ?SIZE = 1 = SIZEOF PARSEWK 
                            RPARSE4   TRUE   IF:   ?ROWNBR = 2 = [?SIZE=]1 + 1 
                            RPARSE4   TRUE   IF:   APPEND PARSEWK [?ROWNBR=]2 [?TOKEN=]0 
                            RPARSE4   TRUE   IF:   TMPSTR = NULL 
                            RPARSE4   TRUE   IF:   :POS2 = 1 
                            RPARSE4   TRUE   THEN: APPEND_TOKEN_TO_PARSEWK 
                        RPARSE2   TRUE   IF:   APPEND_TOKEN_TO_PARSEWK 
                        RPARSE2   BREAK  IF:   BREAK [?I=]5 
                    RPARSE0   TRUE   IF:   PARSE [?INPSTR=]F7.0 USING_DELIMITER [?DELIM=]. 
                    RPARSE0   TRUE   THEN: PARSE [?INPSTR=]F7.0 DELIMITED_BY [?DELIM=]. 
                RDVC3AE   TRUE   IF:   PARSE [?FMT=]F7.0 DELIMITED_BY "." 
                RDVC3AE   TRUE   IF:   ?SIZ = 2 = SIZEOF PARSEWK 
                RDVC3AE   TRUE   IF:   [?SIZ=]2 >= 2 
                RDVC3AE   TRUE   IF:   ?CD = "2" 
                RDVC3AE   TRUE   IF:   ?CD = 2 IN PARSEWK 
                RDVC3AE   TRUE   IF:   ?DIGIT = 0 = DESCOF PARSEWK(@) 
                RDVC3AE   TRUE   THEN: RDVCALL_PARSE_NBRFMT [?FMT=]F7.0 [?DIGIT=]0 
            _RPATC17  TRUE   IF:   RDVCALL_PARSE_NBRFMT [?FMT=]F7.0 [?DIGIT=]0 
            _RPATC17  TRUE   IF:   ?DIGFMT = 24.0 = '24.[?DIGIT=]0' 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(TYPE,[?ENTRY=]$ENTRY) = "Real" 
            _RPATC17  TRUE   IF:   FILL DVTABMFT(RANGE,[?ENTRY=]$ENTRY) = [?DIGFMT=]24.0 
                RDVC3AB1  TRUE   IF:   ?COL = _DIV IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = _DIV IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = PLA IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = PLA IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = MAT IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = MAT IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = SHIPTO IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = SHIPTO IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = DTYPE IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = DTYPE IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = EFFDTTM IN DVTABMC 
                RDVC3AB1  TRUE   IF:   ?COL = EFFDTTM IN DVBATT 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = _NETLOC IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = _NETLOC IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]_NETLOC NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]_NETLOC) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = _DMDATE IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = _DMDATE IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]_DMDATE NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]_DMDATE) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = _GMN IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = _GMN IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]_GMN NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]_GMN) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = PACK IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = PACK IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]PACK NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]PACK) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = DCI IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = DCI IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]DCI NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]DCI) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = SLONUM IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = SLONUM IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]SLONUM NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]SLONUM) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = SLINUM IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = SLINUM IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]SLINUM NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]SLINUM) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = DNUM IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = DNUM IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]DNUM NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]DNUM) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = DLIT IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = DLIT IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]DLIT NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]DLIT) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = BATN IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = BATN IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]BATN NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]BATN) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = PONUM IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = PONUM IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]PONUM NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]PONUM) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = CLOC IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = CLOC IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]CLOC NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]CLOC) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = _DEST IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = _DEST IN DVBATT 
                RDVC3AB1  TRUE   IF:   [?COL=]_DEST NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   FILL DVTABMFT(ALLOWEDIT,[?COL=]_DEST) = 0 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
                RDVC3AB1  TRUE   IF:   ?COL = $ENTRY IN DVTABMC 
                RDVC3AB1  FALSE  IF:   ?COL = $ENTRY IN DVBATT 
                RDVC3AB1  FALSE  IF:   [?COL=]$ENTRY NE "[$E=]NTRY" 
                RDVC3AB1  TRUE   IF:   TRUE 
                RDVC3AB1  TRUE   THEN: RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
            _RPATC17  TRUE   IF:   RDVCALL_DVTABM_DISABLE_NON_BASE_ATTRIBUTE 
            _RPATC17  TRUE   IF:   SETIND DVMODE = -1 
            _RPATC17  TRUE   THEN: RDVCALL_DVTABM_EDITABLE 
        RDVC3A    TRUE   IF:   RDVCALL_DVTABM_EDITABLE 
        RDVC3A    TRUE   THEN: RDVCALL_FILL_DVTABM_FIRST 
    RDVC3     TRUE   IF:   RDVCALL_FILL_DVTABM_FIRST 
    RDVC3     FALSE  IF:   [?TAB=]_IDEMAND EQ 'ILOOKUP' 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   MODIFY DVEDITS FORMAT = C64 
    RDVC3     TRUE   IF:   MODIFY DVEDITS2 FORMAT = C64 
    RDVC3     TRUE   IF:   [:ISPMSHO=]TRUE == TRUE 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = "OFF" 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     FALSE  IF:   [?DATA=]DATALIST != DATALIST 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   SETIND DVVIEWS([?CURVIEW=]_IDEMAND) 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   SETIND VIEWTYPE([?TMPVTYPE=]DATALIST) 
    RDVC3     TRUE   IF:   DVOPT([?CURVIEW=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   DVOPT([?TAB=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   FREE [:VIEWTYP=]**** 
    RDVC3     TRUE   IF:   :VIEWTYP = DATALIST = [?TMPVTYP=]DATALIST 
            RDVAT501  TRUE   IF:   ATTWK = NULL 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,FILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = TCHOSENR 
            RDVAT501  TRUE   IF:   BASEWK = TCHOSENR 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = ATTWK + TCHOSENR 
            RDVAT501  TRUE   IF:   NBASEWK = TCHOSENR 
            RDVAT501  TRUE   THEN: RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   ?SIZE = 6 = SIZEOF ATTWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?SIZE=]6 GT 0 
        RDVC9     FALSE  IF:   [?BASE=]6 GT 6 
        RDVC9     TRUE   IF:   ?SIZE = 0 = SIZEOF NBASEWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?BASE=]6 LE 6 
        RDVC9     FALSE  IF:   [?SIZE=]0 GT 0 
        RDVC9     TRUE   IF:   TRUE 
        RDVC9     TRUE   THEN: RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
    RDVC3     TRUE   IF:   RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
        RDVC3AF   TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
        RDVC3AF   FALSE  IF:   [:SCRSW=]N EQ "Y" 
        RDVC3AF   TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
        RDVC3AF   TRUE   IF:   FILL CDVVCTL(ADVFLTTEXT,1) = LNGDLG(DDV_FILTERLABEL,@) 
        RDVC3AF   TRUE   THEN: RDVCALL_SET_ADV_FILTER_STATUS_TEXT 
    RDVC3     TRUE   IF:   RDVCALL_SET_ADV_FILTER_STATUS_TEXT 
        RDVC3AH   TRUE   IF:   [:FLTRSW=]Y EQ Y 
        RDVC3AH   TRUE   IF:   FILL CDVVCTL(IsFilter,1) = TRUE 
        RDVC3AH   TRUE   THEN: RDVCALL_SET_IS_FILTER_STATUS 
    RDVC3     TRUE   IF:   RDVCALL_SET_IS_FILTER_STATUS 
    RDVC3     TRUE   IF:   VMACTION [?CURVM=]CDVCUST:_IDEMAND_VM !Reset StatusTextState 
    RDVC3     TRUE   IF:   FILL DVEDITS3([?TAB=]_IDEMAND,4) = 0 
        PMDONE    FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
        === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
            Mac:         ON ERROR INITIAL_PM 
            Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
            Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MREGRAPH GPROGMET GPROGMET_GRAPH               total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
        PMDONE    FALSE  IF:   [&RETURN=] EQ "ERROR" 
        PMDONE    TRUE   IF:   :PMWINBG = 258 
            PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
            PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
            PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
            PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
        PMDONE    TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
        PMDONE    TRUE   IF:   ?PMPROC = Complete = LNGTEXT(PMCOMPLET1,@) 
        PMDONE    TRUE   IF:   &1 = Complete = [?PMPROC=]Complete 
        === Macro started  <MUTIL DO_CMD PMETER 0.98 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "0.98" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "0.98" "Complete                  elapse time:     0.01 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.98 "Complete"            total  time:     0.01 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.98 "[&1=]Complete" 
        === Macro started  <MUTIL DO_CMD PMETER 0.99 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "0.99" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "0.99" "Complete                  elapse time:     0.02 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.99 "Complete"            total  time:     0.02 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.99 "[&1=]Complete" 
        === Macro started  <MUTIL DO_CMD PMETER 1.0 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "1.0" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "1.0" "Complete                   elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 1.0 "Complete"             total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 1.0 "[&1=]Complete" 
        PMDONE    TRUE   THEN: COMPLETE_PROGRESS_METER 
    RDVC3     TRUE   IF:   COMPLETE_PROGRESS_METER 
        RUOM233   TRUE   IF:   ?TAB = _IDEMAND = DVTABLES(@,C) 
        RUOM233   TRUE   IF:   ?TAB = _IDEMAND IN DVVIEWS 
            RUOM234   TRUE   IF:   :TABTYPE = MD = DVCTL(@,TABTYPE) 
            RUOM234   FALSE  IF:   [:TABTYPE=]MD EQ "LP" 
            RUOM234   TRUE   IF:   :TITLE = Demand = DVTABLES(@,D) 
            RUOM234   TRUE   IF:   ?LEN = 6 = STRLEN [:TITLE=]Demand 
            RUOM234   TRUE   IF:   [?LEN=]6 GT 0 
            RUOM234   TRUE   THEN: RUOM_GET_TITLE_FOR_REPORT 
        RUOM233   TRUE   IF:   RUOM_GET_TITLE_FOR_REPORT 
            RUOM235   TRUE   IF:   :UOM = " " 
            RUOM235   TRUE   IF:   ?UOM =  = DVOPT(@,UOM) 
            RUOM235   FALSE  IF:   ?UOM =  IN BASEUOM 
            RUOM235   TRUE   IF:   ?UOM = KLB = DVCTL(@,BASEUOM) 
            RUOM235   TRUE   IF:   ?UOM = KLB IN BASEUOM 
            RUOM235   TRUE   IF:   :UOM = Klb = DVUOMLNG(@,@) 
            RUOM235   TRUE   THEN: RUOM_GET_UOM_FOR_REPORT_TITLE 
        RUOM233   TRUE   IF:   RUOM_GET_UOM_FOR_REPORT_TITLE 
            _RPATCH2  TRUE   IF:   [:UOM=]Klb NE "" 
            _RPATCH2  TRUE   IF:   ?TTLLEN = 6 = STRLEN [:TITLE=]Demand 
            _RPATCH2  TRUE   IF:   ?UOMLEN = 3 = STRLEN [:UOM=]Klb 
            _RPATCH2  TRUE   IF:   ?LENGTH = 9 = [?TTLLEN=]6 + [?UOMLEN=]3 
            _RPATCH2  TRUE   IF:   ?LENGTH = 12 = [?LENGTH=]12 + 3 
            _RPATCH2  TRUE   IF:   [?LENGTH=]12 <= 64 
            _RPATCH2  TRUE   IF:   :TITLE = Demand (Klb) = '[:TITLE=]Demand (Klb) [:OPENP:UOM:CLOSP=]****' 
            _RPATCH2  TRUE   THEN: RDV_ATTACH_UOM_TO_REPORT_TITLE 
        RUOM233   TRUE   IF:   RDV_ATTACH_UOM_TO_REPORT_TITLE 
        RUOM233   TRUE   IF:   CDVVCTL(HEADER,1) = [:TITLE=]Demand (Klb) 
        RUOM233   TRUE   THEN: RUOM_SET_REPORT_TITLE 
    RDVC3     TRUE   IF:   RUOM_SET_REPORT_TITLE 
    RDVC3     TRUE   THEN: RDVCALL_FILL_DVTABM_AND_DVTAB 
==> Rule  >RDVC3 DATALIST                                 total  time:     0.00 sec 
 
==> Rule  started  >RDVC3 TABLE 
    RDVC3     TRUE   IF:   ?CURVM = CDVCUST:_IDEMAND_VM = [&CURRVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM = [?CURVM=]CDVCUST:_IDEMAND_VM 
        RDVCH0    TRUE   IF:   ?VM = CDVCUST:_IDEMAND_VM IN DVVMTBSR 
        RDVCH0    TRUE   IF:   ?TAB = _IDEMAND = DVVMTBS(@,1) 
        RDVCH0    TRUE   THEN: RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   RDVCALL_GET_DV_TABLE [?CURVM=]CDVCUST:_IDEMAND_VM [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?DATA = TABLE = [%1=]TABLE 
        RDV888    TRUE   IF:   ?TAB = _IDEMAND IN DVTABLES 
        RDV888    TRUE   IF:   ?USRBEF =  = DVCTL(@,DVSETUP) 
        RDV888    FALSE  IF:   [?USRBEF=] NE 
        RDV888    TRUE   IF:   TRUE 
        RDV888    TRUE   THEN: RDV_RUN_USER_BEFORE [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   RDV_RUN_USER_BEFORE [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?OLDTAB = _IDEMAND = APPWK(DVTABLE,1) 
    RDVC3     TRUE   IF:   ?TABTYPE = MD = DVCTL(@,TABTYPE) 
    RDVC3     TRUE   IF:   APPWK(DVTABLE,1) = [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   ?CURVIEW = _IDEMAND = DVEDITS3([?TAB=]_IDEMAND,2) 
    RDVC3     TRUE   IF:   ?TMPVTYP = DATALIST = DVOPT([?CURVIEW=]_IDEMAND,VIEWTYPE) 
    RDVC3     TRUE   IF:   FREE [:VIEWTYP=]**** 
    RDVC3     TRUE   IF:   :VIEWTYP = DATALIST = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   FREE [:VIEW=]**** 
    RDVC3     TRUE   IF:   :VIEW = _IDEMAND = [?CURVIEW=]_IDEMAND 
    RDVC3     TRUE   IF:   FREE [:ISPMSHO=]**** 
    RDVC3     TRUE   IF:   :ISPMSHO = FALSE 
    RDVC3     TRUE   IF:   ?TMPSWCH = ON = APPDATA(DVPMSWITCH,1) 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = "OFF" 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   ?GF = YES = APPDATA(DVGLOBALFILTER,1) 
    RDVC3     TRUE   IF:   [?GF=]YES == YES 
            RGF4H     TRUE   IF:   GFFILT = [&BLANK=] 
            RGF4H     TRUE   IF:   ?FLT = _DIV IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 1 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 = 'FLTRSHOW[?SLNUM=]1' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW1 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = _DIV IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(_DIV,GFSWITCH) = 'GFUICTL([?FLT=]_DIV,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(_DIV,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]_DIV 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = PLA IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 2 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 = 'FLTRSHOW[?SLNUM=]2' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW2 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = PLA IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(PLA,GFSWITCH) = 'GFUICTL([?FLT=]PLA,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(PLA,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]PLA 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = MAT IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 3 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 = 'FLTRSHOW[?SLNUM=]3' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW3 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = MAT IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(MAT,GFSWITCH) = 'GFUICTL([?FLT=]MAT,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(MAT,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]MAT 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = SHIPTO IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 4 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 = 'FLTRSHOW[?SLNUM=]4' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW4 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = SHIPTO IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(SHIPTO,GFSWITCH) = 'GFUICTL([?FLT=]SHIPTO,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]SHIPTO 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = DTYPE IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 5 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 = 'FLTRSHOW[?SLNUM=]5' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW5 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = DTYPE IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(DTYPE,GFSWITCH) = 'GFUICTL([?FLT=]DTYPE,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]DTYPE 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4H     TRUE   IF:   ?FLT = EFFDTTM IN LISTWRK 
            RGF4H     TRUE   IF:   ?SLNUM = 6 = TLISTWRK(@,LISTNUM) 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 = 'FLTRSHOW[?SLNUM=]6' 
            RGF4H     TRUE   IF:   ?GFROW = FLTRSHOW6 IN ADVFILTR 
                RGF4A     TRUE   IF:   ?FLT = EFFDTTM IN GFUI 
                RGF4A     TRUE   IF:   ?STR = GFUICTL(EFFDTTM,GFSWITCH) = 'GFUICTL([?FLT=]EFFDTTM,GFSWITCH)' 
                RGF4A     TRUE   IF:   GFFILT(@,1) = [?STR=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4A     TRUE   THEN: RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
            RGF4H     TRUE   IF:   RGF_FILL_GFFILT_FOR_GLOBAL_FILTERS [?FLT=]EFFDTTM 
            RGF4H     TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
        RGF4      TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS_HELPER 
            RGF4B     TRUE   IF:   FREE [:NUM=]**** 
            RGF4B     TRUE   IF:   :NUM = 10 
            RGF4B     TRUE   IF:   ?ROW = _DIV IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = PLA IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = MAT IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = SHIPTO IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = DTYPE IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   ?ROW = EFFDTTM IN DVATTWKR 
            RGF4B     FALSE  IF:   DVATTWK(@,AFILTER) == Y 
            RGF4B     TRUE   IF:   TRUE 
            RGF4B     TRUE   THEN: RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
        RGF4      TRUE   IF:   RGF_FILL_GFFILT_FOR_AGG_FILTER_VISIBILITY 
            RGF4C     TRUE   IF:   TMPSET3 = NULL 
            RGF4C     TRUE   IF:   TMPSET4 = NULL 
                RGF4C1    TRUE   IF:   SELECT GFFILT(*,1) != BLANK 
                RGF4C1    TRUE   IF:   ?SIZ = 6 = SIZEOF TCHOSENR 
                RGF4C1    FALSE  IF:   [?SIZ=]6 == 0 
                RGF4C1    TRUE   IF:   ?ONE = 1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW1 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(_DIV,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(_DIV,GFSWITCH) [?FLAG=]GFUICTL(_DIV,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW2 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(PLA,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(PLA,GFSWITCH) [?FLAG=]GFUICTL(PLA,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW3 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(MAT,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(MAT,GFSWITCH) [?FLAG=]GFUICTL(MAT,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW4 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(SHIPTO,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) [?FLAG=]GFUICTL(SHIPTO,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW5 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(DTYPE,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(DTYPE,GFSWITCH) [?FLAG=]GFUICTL(DTYPE,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
                RGF4C1    TRUE   IF:   ?ENTRY = FLTRSHOW6 IN TCHOSENR 
                RGF4C1    TRUE   IF:   ?FLAG = GFUICTL(EFFDTTM,GFSWITCH) = TCHOSEN(@,[?ONE=]1) 
                RGF4C1    TRUE   IF:   APPEND TMPSET4 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4C1    TRUE   IF:   APPENDIF TMPSET3 [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) [?FLAG=]GFUICTL(EFFDTTM,GFSWITCH) 
                RGF4C1    TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
            RGF4C     TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT_HELPER1 
            RGF4C     TRUE   IF:   ?SIZ1 = 6 = SIZEOF TMPSET3 
            RGF4C     TRUE   IF:   ?SIZ2 = 6 = SIZEOF TMPSET4 
            RGF4C     TRUE   IF:   [?SIZ1=]6 == [?SIZ2=]6 
            RGF4C     TRUE   THEN: RGF_REMOVE_DUPLICATES_FROM_GFFILT 
        RGF4      TRUE   IF:   RGF_REMOVE_DUPLICATES_FROM_GFFILT 
            RGF5A1    TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
            RGF5A1    TRUE   IF:   ?SIZE = 0 = SIZEOF CHOSEN 
            RGF5A1    FALSE  IF:   [?SIZE=]0 > 0 
            RGF5A1    TRUE   IF:   FILL APPWK(DVCLRGF_ENABLED,1) = 0 
            RGF5A1    TRUE   THEN: RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
        RGF4      TRUE   IF:   RGF_ENABLE_OR_DISABLE_CLEAR_GLOBAL_FITLERS_BUTTON_HELPER 
        RGF4      TRUE   THEN: RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
    RDVC3     TRUE   IF:   RGF_INITIALIZE_ADVANCED_FILTER_PANEL_GLOBAL_FILTERS 
        RGF2      TRUE   IF:   ?INDFIL = NO = APPDATA(DVGFINDFILTER,1) 
        RGF2      TRUE   IF:   [?INDFIL=]NO NE YES 
        RGF2      TRUE   IF:   SELECT 1 GFUICTL(*,GFSWITCH) 
        RGF2      TRUE   IF:   GFSETS = GFSETS * CHOSEN 
        RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
        RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
        RGF2      FALSE  IF:   [?CASE=]PS EQ "SP" 
        RGF2      TRUE   IF:   ?CASENAM = PS_LC_LL_DV = [&CASENAME=]PS_LC_LL_DV 
        RGF2      TRUE   IF:   ?CASE = PS = SUBSTR([?CASENAME=]PS_LC_LL_DV,1,2) 
        RGF2      TRUE   IF:   [?CASE=]PS EQ "PS" 
        === Macro started  <MUTIL DO_CMD >RCNSP ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF ">RCNSP" =   THEN GOTO DO_CMD0 
            Mac:         IF " " =   THEN GOTO DO_CMD1 
            Mac:         GOTO DO_CMD1 
            === Rule  started  >RCNSP    ===================== 
                RCNSP     FALSE  IF:   GFUICTL(MAT,GFSWITCH) == 1 
                RCNSP     FALSE  IF:   GFUICTL(PRO,GFSWITCH) == 1 
                RCNSP     TRUE   IF:   TRUE 
                RCNSP     TRUE   IF:   REMOVEIF GFSETS PRO MPPRO 
                RCNSP     TRUE   IF:   REMOVEIF GFSETS MAT MPMAT 
                RCNSP     TRUE   THEN: RCN_ADD_SPECIAL_SETS_TO_GFSETS 
            === Rule  finished >RCNSP    =====================    elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD >RCNSP                            total  time:     0.00 sec 
 
        RGF2      TRUE   IF:   <MUTIL DO_CMD >RCNSP 
        RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
        RGF2      FALSE  IF:   [?SC=]0 GT 0 
        RGF2      TRUE   IF:   TRUE 
        RGF2      TRUE   IF:   ?SC = 0 = SETCOU GFSETS 
        RGF2      FALSE  IF:   [?SC=]0 GT 0 
        RGF2      TRUE   IF:   TRUE 
        RGF2      TRUE   THEN: RGF_APPLY_GLOBAL_FILTERS 
    RDVC3     TRUE   IF:   RGF_APPLY_GLOBAL_FILTERS 
        RDVC702   TRUE   IF:   FILL ADVFILT(*,2) = "" 
        RDVC702   TRUE   IF:   TSELECT DVTXTR(*,DVVIEW) = [:VIEW=]_IDEMAND 
        RDVC702   TRUE   IF:   ?SETCOU = 0 = SETCOU TCHOSENR 
        RDVC702   FALSE  IF:   [?SETCOU=]0 GT 0 
        RDVC702   TRUE   IF:   TRUE 
        RDVC702   TRUE   THEN: RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
    RDVC3     TRUE   IF:   RDVCALL_RESTORE_TEXT_FILTER_FOR_FILTER 
        RDVC7M    TRUE   IF:   SELECT DVATTUSG(*,@) != BLANK 
        RDVC7M    TRUE   IF:   ?COU = 6 = SETCOU TCHOSENR 
        RDVC7M    TRUE   IF:   [?COU=]6 GT 0 
        RDVC7M    TRUE   IF:   WHILE [?I=]0 
        RDVC7M    TRUE   IF:   ?I = 1 = [?I=]1 + 1 
        RDVC7M    TRUE   IF:   [?I=]1 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 01 = STRFMT([?I=]1,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT01 = 'AGFILT[?NUM=]01' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK01 = 'AGFWK[?NUM=]01' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT07 = [?AGFILT=]AGFILT01 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT07 = [&1=]MATATT07 
            RDVC7P    FALSE  IF:   ?ROW = MATATT07 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT01 [?AGFWK=]AGFWK01 [?ROW=]MATATT07 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]1 
        RDVC7M    TRUE   IF:   ?I = 2 = [?I=]2 + 1 
        RDVC7M    TRUE   IF:   [?I=]2 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 02 = STRFMT([?I=]2,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT02 = 'AGFILT[?NUM=]02' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK02 = 'AGFWK[?NUM=]02' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]DAYOF = [?AGFILT=]AGFILT02 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = DAYOF = [&1=]DAYOF 
            RDVC7P    FALSE  IF:   ?ROW = DAYOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT02 [?AGFWK=]AGFWK02 [?ROW=]DAYOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]2 
        RDVC7M    TRUE   IF:   ?I = 3 = [?I=]3 + 1 
        RDVC7M    TRUE   IF:   [?I=]3 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 03 = STRFMT([?I=]3,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT03 = 'AGFILT[?NUM=]03' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK03 = 'AGFWK[?NUM=]03' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]WEEKOF = [?AGFILT=]AGFILT03 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = WEEKOF = [&1=]WEEKOF 
            RDVC7P    FALSE  IF:   ?ROW = WEEKOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT03 [?AGFWK=]AGFWK03 [?ROW=]WEEKOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]3 
        RDVC7M    TRUE   IF:   ?I = 4 = [?I=]4 + 1 
        RDVC7M    TRUE   IF:   [?I=]4 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 04 = STRFMT([?I=]4,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT04 = 'AGFILT[?NUM=]04' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK04 = 'AGFWK[?NUM=]04' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MONTHOF = [?AGFILT=]AGFILT04 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MONTHOF = [&1=]MONTHOF 
            RDVC7P    FALSE  IF:   ?ROW = MONTHOF IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT04 [?AGFWK=]AGFWK04 [?ROW=]MONTHOF 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]4 
        RDVC7M    TRUE   IF:   ?I = 5 = [?I=]5 + 1 
        RDVC7M    TRUE   IF:   [?I=]5 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 05 = STRFMT([?I=]5,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT05 = 'AGFILT[?NUM=]05' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK05 = 'AGFWK[?NUM=]05' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT01 = [?AGFILT=]AGFILT05 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT01 = [&1=]MATATT01 
            RDVC7P    FALSE  IF:   ?ROW = MATATT01 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT05 [?AGFWK=]AGFWK05 [?ROW=]MATATT01 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]5 
        RDVC7M    TRUE   IF:   ?I = 6 = [?I=]6 + 1 
        RDVC7M    TRUE   IF:   [?I=]6 LE [?COU=]6 
        RDVC7M    TRUE   IF:   ?NUM = 06 = STRFMT([?I=]6,I02) 
        RDVC7M    TRUE   IF:   ?AGFILT = AGFILT06 = 'AGFILT[?NUM=]06' 
        RDVC7M    TRUE   IF:   ?AGFWK = AGFWK06 = 'AGFWK[?NUM=]06' 
        RDVC7M    TRUE   IF:   GETCAT [&1=]MATATT10 = [?AGFILT=]AGFILT06 ROWSET 
        RDVC7M    TRUE   IF:   ?ROW = MATATT10 = [&1=]MATATT10 
            RDVC7P    FALSE  IF:   ?ROW = MATATT10 IN ATT 
            RDVC7P    TRUE   IF:   TRUE 
            RDVC7P    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS_DETAILS [?AGFILT=]AGFILT06 [?AGFWK=]AGFWK06 [?ROW=]MATATT10 
        RDVC7M    TRUE   THEN: RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M    TRUE   IF:   WHILE [?I=]6 
        RDVC7M    TRUE   IF:   ?I = 7 = [?I=]7 + 1 
        RDVC7M    FALSE  IF:   [?I=]7 LE [?COU=]6 
        RDVC7M    BREAK  IF:   BREAK [?I=]7 
    RDVC3     TRUE   IF:   RDVCALL_RESTORE_AGG_FILTER_LISTS 
        RDVC7M1   TRUE   IF:   :ISAGGCH = FALSE 
        RDVC7M1   FALSE  IF:   [:ISAGGCH=]FALSE == TRUE 
        RDVC7M1   TRUE   IF:   TRUE 
        RDVC7M1   TRUE   THEN: RDVCALL_APPLY_AGGR_FILTERS [?CURVM=]CDVCUST:_IDEMAND_VM [?RESET=]TRUE 
    RDVC3     TRUE   IF:   RDVCALL_APPLY_AGGR_FILTERS [?CURVM=]CDVCUST:_IDEMAND_VM TRUE 
        RDV201    TRUE   IF:   :DVTABLE = _IDEMAND = APPWK(DVTABLE,1) 
        RDV201    TRUE   IF:   :TABFMT = NUM = DVCTL([:DVTABLE=]_IDEMAND,TABFMT) 
        RDV201    TRUE   IF:   :TABTYPE = MD = DVCTL([:DVTABLE=]_IDEMAND,TABTYPE) 
        RDV201    TRUE   IF:   :DVPMSAV = ON = APPDATA(PMSWITCH,1) 
        RDV201    TRUE   IF:   FILL APPDATA(PMSWITCH,1) = APPDATA(DVPMSWITCH,1) 
        === Macro started  <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK1,@) ===================== 
            Cmd:  OK     FILL APPWK(MSGP1,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP2,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP3,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP4,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP5,1) = " "                elapse time:     0.00 sec 
            Cmd:  OK     FILL APPWK(MSGP6,1) = " "                elapse time:     0.00 sec 
            === Rule  started  >RPM ".10" "LNGTEXT(DV_RDV_PROC1,@)" "LNGTEXT(DV_RDV_TASK1,@)" ===================== 
                RPM       FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                RPM       TRUE   IF:   AMPSET [&1=].10 = [%1=].10 
                RPM       TRUE   IF:   FILL APPWK(PMFRACTION,1) = "[&1=].10" 
                RPM       TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [%2=]LNGTEXT(DV_RDV_PROC1,@) 
                RPM       TRUE   IF:   FILL APPWK(PMPROCESS,1) = "[&1=]Running the Data Viewer..." 
                    RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                    RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                    RMSG      TRUE   IF:   MSGWRKR = NULL 
                    RMSG      TRUE   IF:   :MSGID = PMPROCESS* = '[?MSGID*=]****' 
                        RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                            RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                            RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                            RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                            RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                            RMSGLANG  TRUE   IF:   TRUE 
                            RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                        RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                        RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMPROCESS* 
                    RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                    RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                    RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                        RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                        RMSG1     TRUE   IF:   :COUNT = 1 
                        RMSG1     TRUE   IF:   ?ID = PMPROCESS IN MSGWRKR 
                        RMSG1     TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = [?MSGTS=]APPWK([?ID=]PMPROCESS,[:MSGCOL= 
                        RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Running the Data Viewer..." 
                        RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                        RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                        RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                    RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                    RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                    RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                    RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                    RMSG      TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = MSGWRKR(@,D) 
                    RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Running the Data Viewer..." 
                    RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMPROCESS 
                RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMPROCESS 
                RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                RPM       TRUE   IF:   APPWK(PMPROCESS,1) = MSGWRK(@,1,64) 
                RPM       TRUE   IF:   AMPSET [&1=]Preparing the view = [%3=]LNGTEXT(DV_RDV_TASK1,@) 
                RPM       TRUE   IF:   FILL APPWK(PMTASK,1) = "[&1=]Preparing the view" 
                    RMSG      TRUE   IF:   FREE [:MSGTS=]**** 
                    RMSG      TRUE   IF:   :MSGTS = APPWK = [?MSGSRC=]APPWK 
                    RMSG      TRUE   IF:   MSGWRKR = NULL 
                    RMSG      TRUE   IF:   :MSGID = PMTASK* = '[?MSGID*=]****' 
                        RMSG0     FALSE  IF:   :MSGTS = APPWK IN SCAT 
                            RMSGLANG  TRUE   IF:   GETCAT [&1=]1 = [:MSGTS=]APPWK COLSET 
                            RMSGLANG  TRUE   IF:   :MSGCOL = 1 = [&1=]1 
                            RMSGLANG  FALSE  IF:   [:MSGCOL=]1 EQ LANGUAGE 
                            RMSGLANG  FALSE  IF:   :MSGCOL = 1 IN SCAT 
                            RMSGLANG  TRUE   IF:   TRUE 
                            RMSGLANG  TRUE   THEN: SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   SET_CURRENT_LANGUAGE_OR_COLSET 
                        RMSG0     TRUE   IF:   GETCAT [&1=]APPWKR = [:MSGTS=]APPWK ROWSET 
                        RMSG0     TRUE   IF:   ?MSGROW = APPWKR = [&1=]APPWKR 
                        RMSG0     TRUE   THEN: DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   DEFINE_MESSAGE_SET_NAME [?MSGROW=]APPWKR 
                    RMSG      TRUE   IF:   CHOOSE QMSG(SELMSG) [?MSGROW=]APPWKR [:MSGID=]PMTASK* 
                    RMSG      TRUE   IF:   MODIFY MSGWRKR DESC = 64 
                    RMSG      TRUE   IF:   ?SIZ = 1 = SIZEOF MSGWRKR 
                    RMSG      FALSE  IF:   [?SIZ=]1 EQ 0 
                        RMSG1     FALSE  IF:   ?MSGTS = APPWK IN SCAT 
                        RMSG1     TRUE   IF:   :COUNT = 1 
                        RMSG1     TRUE   IF:   ?ID = PMTASK IN MSGWRKR 
                        RMSG1     TRUE   IF:   AMPSET [&1=]Preparing the view = [?MSGTS=]APPWK([?ID=]PMTASK,[:MSGCOL=]1) 
                        RMSG1     TRUE   IF:   FILL MSGWRKR(@,D) = "[&1=]Preparing the view" 
                        RMSG1     TRUE   IF:   MSGWRKR(@,C) = [:COUNT=]1 
                        RMSG1     TRUE   IF:   :COUNT = 2 = [:COUNT=]2 + 1 
                        RMSG1     TRUE   THEN: MOVE_MESSAGE_TEXT_FROM_THE_TABLE [?MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MOVE_MESSAGE_TEXT_FROM_THE_TABLE [:MSGTS=]APPWK 
                    RMSG      TRUE   IF:   MODIFY FMSGWK COUNT = 8 
                    RMSG      TRUE   IF:   APPEND MSGWRKR ONTO FMSGWK 
                    RMSG      TRUE   IF:   APPEND FMSGWK END " " 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP1 = 'MSG[?PX=]P1' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP1,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P1 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P1 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP2 = 'MSG[?PX=]P2' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP2,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P2 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P2 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP3 = 'MSG[?PX=]P3' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP3,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P3 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P3 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP4 = 'MSG[?PX=]P4' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP4,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P4 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P4 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP5 = 'MSG[?PX=]P5' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP5,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P5 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P5 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP6 = 'MSG[?PX=]P6' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP6,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P6 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P6 
                        RMSG4     TRUE   IF:   FMSGWK(?PX,D) = " " 
                        RMSG4     TRUE   IF:   :MSGPX = MSGP7 = 'MSG[?PX=]P7' 
                        RMSG4     TRUE   IF:   :MSGSTR =  = APPWK([:MSGPX=]MSGP7,1) 
                        RMSG4     TRUE   IF:   [:MSGSTR=] EQ 
                        RMSG4     TRUE   THEN: POPULATE_FMSGWK_FOR [?PX=]P7 
                    RMSG      TRUE   IF:   POPULATE_FMSGWK_FOR P7 
                    RMSG      TRUE   IF:   FMSGWK(P1,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P2,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P3,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P4,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P5,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P6,D) EQ 
                    RMSG      TRUE   IF:   FMSGWK(P7,D) EQ 
                    RMSG      TRUE   IF:   ?ID = 1 IN MSGWRKR 
                    RMSG      TRUE   IF:   AMPSET [&1=]Preparing the view = MSGWRKR(@,D) 
                    RMSG      TRUE   IF:   FILL MSGWRK(@,1,256) = "[&1=]Preparing the view" 
                    RMSG      TRUE   THEN: RETRIEVE_MESSAGE_BY_SOURCE_AND_ID [?MSGSRC=]APPWK [?MSGID=]PMTASK 
                RPM       TRUE   IF:   RETRIEVE_MESSAGE_BY_SOURCE_AND_ID APPWK PMTASK 
                RPM       TRUE   IF:   MSGWRKR(INDEX) = 0 
                RPM       TRUE   IF:   APPWK(PMTASK,1) = MSGWRK(@,1,64) 
                    PMUPDATE  FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
                    === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
                        Mac:         ON ERROR INITIAL_PM 
                        Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
                        Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
                        Mac:         END 
                    === Macro finished <MREGRAPH =====================    elapse time:     0.00 sec 
                    PMUPDATE  TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
                    PMUPDATE  TRUE   IF:   :PMWINBG = 258 
                    PMUPDATE  TRUE   IF:   AMPSET [&1=]Running the Data Viewer... = APPWK(PMPROCESS,1) 
                    PMUPDATE  TRUE   IF:   AMPSET [&2=]Preparing the view = APPWK(PMTASK,1) 
                    PMUPDATE  TRUE   IF:   ?FRACTIO = .10 = APPWK(PMFRACTION,1) 
                        PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
                        PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                            PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                            PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
                        PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
                    PMUPDATE  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
                    === Macro started  <MUTIL DO_CMD PMETER .10 "Running the Data Viewer..." "Preparing the view" ============== 
                        Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                        Mac:         ON ERROR ERR_RTN 
                        Mac:         GOTO DO_CMD 
                        Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
                        Mac:         IF ".10" =   THEN GOTO DO_CMD1 
                        Mac:         IF "Running the Data Viewer..." =   THEN 
                        Mac:         IF "Preparing the view" =   THEN GOTO DO 
                        Mac:         IF " " =   THEN GOTO DO_CMD4 
                        Mac:         GOTO DO_CMD4 
                        Cmd:  OK     PMETER ".10" "Running the Data Viewer... elapse time:     0.01 sec 
                        Mac:         END 
                    === Macro finished <MUTIL    =====================    elapse time:     0.01 sec 
                    PMUPDATE  TRUE   IF:   <MUTIL DO_CMD PMETER [?FRACTIO=].10 "[&1=]Running the Data Viewer..." "[&2=]Preparing 
                    PMUPDATE  TRUE   THEN: UPDATE_PROGRESS_METER_TASK 
                RPM       TRUE   IF:   UPDATE_PROGRESS_METER_TASK 
                RPM       TRUE   THEN: PROGRESS_METER 
            === Rule  finished >RPM      =====================    elapse time:     0.01 sec 
            Mac:         END 
==> Macro <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT        total  time:     0.01 sec 
 
        RDV201    TRUE   IF:   <MPM .10 LNGTEXT(DV_RDV_PROC1,@) LNGTEXT(DV_RDV_TASK1,@) 
        RDV201    TRUE   THEN: RDV_UPDATE_VIEW_INITIALIZATION 
    RDVC3     TRUE   IF:   RDV_UPDATE_VIEW_INITIALIZATION 
        RDV999    TRUE   IF:   ?USREXIT =  = DVCTL([:DVTABLE=]_IDEMAND,[?PARM=]VIEWBEFORE) 
        === Macro started  <MUTILDV DO_CMD ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF " " =   THEN GOTO DO_CMD0 
            Mac:         GOTO DO_CMD0 
            Mac:         END 
==> Macro <MUTILDV DO_CMD                                 total  time:     0.00 sec 
 
        RDV999    TRUE   IF:   <MUTILDV DO_CMD [?USREXIT=] 
        RDV999    FALSE  IF:   [&RETURN=] EQ "EXIT" 
        RDV999    TRUE   IF:   [&RETURN=] EQ 
        RDV999    TRUE   THEN: RDV_RUN_USER_EXIT [?PARM=]VIEWBEFORE 
    RDVC3     TRUE   IF:   RDV_RUN_USER_EXIT VIEWBEFORE 
    RDVC3     FALSE  IF:   [?DATA=]TABLE == DATALIST 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     FALSE  IF:   [?TAB=]_IDEMAND EQ 'ILOOKUP' 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   MODIFY DVEDITS FORMAT = C64 
    RDVC3     TRUE   IF:   MODIFY DVEDITS2 FORMAT = C64 
    RDVC3     FALSE  IF:   [:ISPMSHO=]FALSE == TRUE 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     FALSE  IF:   [?OLDTAB=]_IDEMAND != [?TAB=]_IDEMAND 
    RDVC3     TRUE   IF:   TRUE 
    RDVC3     TRUE   IF:   [?DATA=]TABLE != DATALIST 
        RDVC3B    TRUE   IF:   ?F1 = TABLE 
        RDVC3B    FALSE  IF:   ?F1 = TABLE IN VIEWTYPE 
        RDVC3B    TRUE   IF:   TRUE 
        RDVC3B    TRUE   THEN: RDVCALL_FILL_DVTAB_NEXT 
    RDVC3     TRUE   IF:   RDVCALL_FILL_DVTAB_NEXT 
    RDVC3     TRUE   IF:   SETIND VIEWTYPE([?TMPVTYPE=]DATALIST) 
    RDVC3     TRUE   IF:   DVOPT([?CURVIEW=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   DVOPT([?TAB=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   SETIND DVVIEWS([?CURVIEW=]_IDEMAND) 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   SETIND VIEWTYPE([?TMPVTYPE=]DATALIST) 
    RDVC3     TRUE   IF:   DVOPT([?CURVIEW=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   DVOPT([?TAB=]_IDEMAND,VIEWTYPE) = [?TMPVTYP=]DATALIST 
    RDVC3     TRUE   IF:   FILL APPDATA(DVPMSWITCH,1) = [?TMPSWCH=]ON 
    RDVC3     TRUE   IF:   FREE [:VIEWTYP=]**** 
    RDVC3     TRUE   IF:   :VIEWTYP = DATALIST = [?TMPVTYP=]DATALIST 
            RDVAT501  TRUE   IF:   ATTWK = NULL 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,FILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = TCHOSENR 
            RDVAT501  TRUE   IF:   BASEWK = TCHOSENR 
            RDVAT501  TRUE   IF:   SELECT DVATTWK(*,AFILTER) = "Y" 
            RDVAT501  TRUE   IF:   ATTWK = ATTWK + TCHOSENR 
            RDVAT501  TRUE   IF:   NBASEWK = TCHOSENR 
            RDVAT501  TRUE   THEN: RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   RDVATTDF_GET_ALL_FILTER_INTO_WORKING_SET_UI 
        RDVC9     TRUE   IF:   ?SIZE = 6 = SIZEOF ATTWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?SIZE=]6 GT 0 
        RDVC9     FALSE  IF:   [?BASE=]6 GT 6 
        RDVC9     TRUE   IF:   ?SIZE = 0 = SIZEOF NBASEWK 
        RDVC9     TRUE   IF:   ?BASE = 6 = SIZEOF BASEWK 
        RDVC9     TRUE   IF:   [?BASE=]6 LE 6 
        RDVC9     FALSE  IF:   [?SIZE=]0 GT 0 
        RDVC9     TRUE   IF:   TRUE 
        RDVC9     TRUE   THEN: RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
    RDVC3     TRUE   IF:   RDVCALL_FILL_ATTLNG_WITH_ATT_LABELS 
        RDVC3AF   TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
        RDVC3AF   FALSE  IF:   [:SCRSW=]N EQ "Y" 
        RDVC3AF   TRUE   IF:   [:FLTRSW=]Y EQ "Y" 
        RDVC3AF   TRUE   IF:   FILL CDVVCTL(ADVFLTTEXT,1) = LNGDLG(DDV_FILTERLABEL,@) 
        RDVC3AF   TRUE   THEN: RDVCALL_SET_ADV_FILTER_STATUS_TEXT 
    RDVC3     TRUE   IF:   RDVCALL_SET_ADV_FILTER_STATUS_TEXT 
        RDVC3AH   TRUE   IF:   [:FLTRSW=]Y EQ Y 
        RDVC3AH   TRUE   IF:   FILL CDVVCTL(IsFilter,1) = TRUE 
        RDVC3AH   TRUE   THEN: RDVCALL_SET_IS_FILTER_STATUS 
    RDVC3     TRUE   IF:   RDVCALL_SET_IS_FILTER_STATUS 
    RDVC3     TRUE   IF:   VMACTION [?CURVM=]CDVCUST:_IDEMAND_VM !Reset StatusTextState 
    RDVC3     TRUE   IF:   FILL DVEDITS3([?TAB=]_IDEMAND,4) = 0 
        PMDONE    FALSE  IF:   APPDATA(PMSWITCH,1) EQ OFF 
        === Macro started  <MREGRAPH GPROGMET GPROGMET_GRAPH ===================== 
            Mac:         ON ERROR INITIAL_PM 
            Cmd:  OK     REGRAPH GPROGMET                         elapse time:     0.00 sec 
            Cmd:  OK     RAISE GPROGMET_GRAPH                     elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MREGRAPH GPROGMET GPROGMET_GRAPH               total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MREGRAPH GPROGMET GPROGMET_GRAPH 
        PMDONE    FALSE  IF:   [&RETURN=] EQ "ERROR" 
        PMDONE    TRUE   IF:   :PMWINBG = 258 
            PMCHKVER  TRUE   IF:   ?ISWPF = "PMISWPF" 
            PMCHKVER  TRUE   IF:   ?ISWPF = PMISWPF IN APPDATAR 
                PMCHKVE1  TRUE   IF:   APPDATA(PMISWPF,1) == YES 
                PMCHKVE1  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
            PMCHKVER  TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER_HELPER1 
            PMCHKVER  TRUE   THEN: CHECK_IF_TO_USE_WPF_PMETER 
        PMDONE    TRUE   IF:   CHECK_IF_TO_USE_WPF_PMETER 
        PMDONE    TRUE   IF:   ?PMPROC = Complete = LNGTEXT(PMCOMPLET1,@) 
        PMDONE    TRUE   IF:   &1 = Complete = [?PMPROC=]Complete 
        === Macro started  <MUTIL DO_CMD PMETER 0.98 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "0.98" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "0.98" "Complete                  elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.98 "Complete"            total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.98 "[&1=]Complete" 
        === Macro started  <MUTIL DO_CMD PMETER 0.99 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "0.99" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "0.99" "Complete                  elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 0.99 "Complete"            total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 0.99 "[&1=]Complete" 
        === Macro started  <MUTIL DO_CMD PMETER 1.0 "Complete" ===================== 
            Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
            Mac:         ON ERROR ERR_RTN 
            Mac:         GOTO DO_CMD 
            Mac:         IF "PMETER" =   THEN GOTO DO_CMD0 
            Mac:         IF "1.0" =   THEN GOTO DO_CMD1 
            Mac:         IF "Complete" =   THEN GOTO DO_CMD2 
            Mac:         IF " " =   THEN GOTO DO_CMD3 
            Mac:         GOTO DO_CMD3 
            Cmd:  OK     PMETER "1.0" "Complete                   elapse time:     0.00 sec 
            Mac:         END 
==> Macro <MUTIL DO_CMD PMETER 1.0 "Complete"             total  time:     0.00 sec 
 
        PMDONE    TRUE   IF:   <MUTIL DO_CMD PMETER 1.0 "[&1=]Complete" 
        PMDONE    TRUE   THEN: COMPLETE_PROGRESS_METER 
    RDVC3     TRUE   IF:   COMPLETE_PROGRESS_METER 
        RUOM233   TRUE   IF:   ?TAB = _IDEMAND = DVTABLES(@,C) 
        RUOM233   TRUE   IF:   ?TAB = _IDEMAND IN DVVIEWS 
            RUOM234   TRUE   IF:   :TABTYPE = MD = DVCTL(@,TABTYPE) 
            RUOM234   FALSE  IF:   [:TABTYPE=]MD EQ "LP" 
            RUOM234   TRUE   IF:   :TITLE = Demand = DVTABLES(@,D) 
            RUOM234   TRUE   IF:   ?LEN = 6 = STRLEN [:TITLE=]Demand 
            RUOM234   TRUE   IF:   [?LEN=]6 GT 0 
            RUOM234   TRUE   THEN: RUOM_GET_TITLE_FOR_REPORT 
        RUOM233   TRUE   IF:   RUOM_GET_TITLE_FOR_REPORT 
            RUOM235   TRUE   IF:   :UOM = " " 
            RUOM235   TRUE   IF:   ?UOM =  = DVOPT(@,UOM) 
            RUOM235   FALSE  IF:   ?UOM =  IN BASEUOM 
            RUOM235   TRUE   IF:   ?UOM = KLB = DVCTL(@,BASEUOM) 
            RUOM235   TRUE   IF:   ?UOM = KLB IN BASEUOM 
            RUOM235   TRUE   IF:   :UOM = Klb = DVUOMLNG(@,@) 
            RUOM235   TRUE   THEN: RUOM_GET_UOM_FOR_REPORT_TITLE 
        RUOM233   TRUE   IF:   RUOM_GET_UOM_FOR_REPORT_TITLE 
            _RPATCH2  TRUE   IF:   [:UOM=]Klb NE "" 
            _RPATCH2  TRUE   IF:   ?TTLLEN = 6 = STRLEN [:TITLE=]Demand 
            _RPATCH2  TRUE   IF:   ?UOMLEN = 3 = STRLEN [:UOM=]Klb 
            _RPATCH2  TRUE   IF:   ?LENGTH = 9 = [?TTLLEN=]6 + [?UOMLEN=]3 
            _RPATCH2  TRUE   IF:   ?LENGTH = 12 = [?LENGTH=]12 + 3 
            _RPATCH2  TRUE   IF:   [?LENGTH=]12 <= 64 
            _RPATCH2  TRUE   IF:   :TITLE = Demand (Klb) = '[:TITLE=]Demand (Klb) [:OPENP:UOM:CLOSP=]****' 
            _RPATCH2  TRUE   THEN: RDV_ATTACH_UOM_TO_REPORT_TITLE 
        RUOM233   TRUE   IF:   RDV_ATTACH_UOM_TO_REPORT_TITLE 
        RUOM233   TRUE   IF:   CDVVCTL(HEADER,1) = [:TITLE=]Demand (Klb) 
        RUOM233   TRUE   THEN: RUOM_SET_REPORT_TITLE 
    RDVC3     TRUE   IF:   RUOM_SET_REPORT_TITLE 
    RDVC3     TRUE   THEN: RDVCALL_FILL_DVTABM_AND_DVTAB 
==> Rule  >RDVC3 TABLE                                    total  time:     0.00 sec 
 
==> Rule  started  >RDVC5 
    RDVC5     TRUE   IF:   DVTABPC = NULL 
    RDVC5     TRUE   IF:   DVTABPR = NULL 
        RDVC5A    TRUE   IF:   DVTABPC = NULL 
        RDVC5A    TRUE   IF:   DVTABPR = NULL 
        RDVC5A    TRUE   IF:   GETCAT [&1=]F7.0 = DVTAB FORMAT 
        RDVC5A    TRUE   IF:   MODIFY DVTABP FORMAT = [&1=]F7.0 
        RDVC5A    TRUE   IF:   ?SIZE = 0 = SIZEOF DVTABR 
        RDVC5A    FALSE  IF:   [?SIZE=]0 GT 0 
        RDVC5A    TRUE   IF:   TRUE 
        RDVC5A    TRUE   THEN: RDVCALL_FILL_DVTABP_TABLE 
    RDVC5     TRUE   IF:   RDVCALL_FILL_DVTABP_TABLE 
    RDVC5     TRUE   IF:   MODIFY TMPTAB7 FORMAT = C64 
    RDVC5     TRUE   IF:   APPENDIF FMTVARR ROW_0 
    RDVC5     TRUE   IF:   APPENDIF FMTVARR DESC_T 
        RDVC5B    TRUE   IF:   ?SC = 0 = SETCOU DVTABPR 
        RDVC5B    FALSE  IF:   [?SC=]0 GT 0 
        RDVC5B    TRUE   IF:   TRUE 
        RDVC5B    TRUE   THEN: RDVCALL_FILL_DVTABPR_CHART_LABELS 
    RDVC5     TRUE   IF:   RDVCALL_FILL_DVTABPR_CHART_LABELS 
        RDVC5C    TRUE   IF:   ?SC = 0 = SETCOU DVTABPC 
        RDVC5C    FALSE  IF:   [?SC=]0 GT 0 
        RDVC5C    TRUE   IF:   TRUE 
        RDVC5C    TRUE   THEN: RDVCALL_FILL_DVTABPC_CHART_X_AXIS 
    RDVC5     TRUE   IF:   RDVCALL_FILL_DVTABPC_CHART_X_AXIS 
        RDVC5D    TRUE   IF:   ?SW = OFF = APPDATA(COMPOPT,1) 
        RDVC5D    FALSE  IF:   [?SW=]OFF EQ ON 
        RDVC5D    TRUE   IF:   TRUE 
        RDVC5D    TRUE   THEN: RDVCALL_RESTORE_COMPOSITE_SITTING 
    RDVC5     TRUE   IF:   RDVCALL_RESTORE_COMPOSITE_SITTING 
    RDVC5     TRUE   IF:   FILL APPWK(DVDECIMALS,1) = 0 
    RDVC5     TRUE   IF:   ?NBRFMT = F7.0 = CODEOF DVNBRFMT(@) 
    RDVC5     TRUE   IF:   ?NBRDEC = 0 = SUBSTR([?NBRFMT=]F7.0,4,1) 
    RDVC5     TRUE   IF:   APPWK(DVDECIMALS,1) = [?NBRDEC=]0 
    RDVC5     TRUE   THEN: RDVCALL_FILL_DVTABP_FOR_CHARTS 
==> Rule  >RDVC5                                          total  time:     0.00 sec 
 
==> Rule  started  >RCDILOG1 
    RCDILOG1  TRUE   IF:   SETIND IMPLST(IMPSTAT) 
        RIMPORT6  TRUE   IF:   ?LOGTAB = IMPSTAT = IMPLST(@,C) 
        RIMPORT6  TRUE   IF:   [?LOGTAB=]IMPSTAT NE SQLLOG 
        RIMPORT6  TRUE   IF:   WSDEFN(IMPORT,R2) = [?LOGTAB=]IMPSTAT 
        RIMPORT6  TRUE   IF:   SELECT Y IMPCTL(*,IMPFLAG) 
        RIMPORT6  TRUE   IF:   IMPSTATR = IMPSTATR + CHOSEN 
        RIMPORT6  TRUE   IF:   TMPSET1 = IMPSTATR - CHOSEN 
        RIMPORT6  TRUE   IF:   IMPSTATR = IMPSTATR - TMPSET1 
            RUEXIT    FALSE  IF:   APPWK(UEXIT_BYPASS,1) EQ Y 
            RUEXIT    TRUE   IF:   ?MASK = IMPBDSP* = '[?EXTMASK*=]IMPBDSP' 
            RUEXIT    TRUE   IF:   SELECT [?MASK=]IMPBDSP* UEXIT 
            RUEXIT    TRUE   IF:   ?C = 1 = SIZEOF CHOSEN 
            RUEXIT    FALSE  IF:   [?C=]1 EQ 0 
                RUEXIT10  TRUE   IF:   :NESTLEV = 0 = APPWK(UEXIT_NEST_LEV,1) 
                RUEXIT10  TRUE   IF:   :NESTLEV = 1 = [:NESTLEV=]1 + 1 
                RUEXIT10  FALSE  IF:   [:NESTLEV=]1 GT 5 
                RUEXIT10  TRUE   IF:   APPWK(UEXIT_NEST_LEV,1) = [:NESTLEV=]1 
                RUEXIT10  TRUE   THEN: RUEXIT_INCREASE_NEST_LEVEL 
            RUEXIT    TRUE   IF:   RUEXIT_INCREASE_NEST_LEVEL 
                RUEXIT1   TRUE   IF:   ?WKSET = UEXITWK1 = 'UEXITWK[:NESTLEV=]1' 
                === Macro started  <MUTIL NULL UEXITWK1 ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO NULL 
                    Cmd:  OK     UEXITWK1 = NULL                          elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL NULL UEXITWK1                            total  time:     0.00 sec 
 
                RUEXIT1   TRUE   IF:   <MUTIL NULL [?WKSET=]UEXITWK1 
                RUEXIT1   TRUE   IF:   ?MASK = IMPBDSP* = '[?EXTMASK*=]IMPBDSP' 
                RUEXIT1   TRUE   IF:   SELECT [?MASK=]IMPBDSP* UEXIT 
                === Macro started  <MUTIL ASSIGN UEXITWK1 CHOSEN ===================== 
                    Cmd:  OK     AMPSET &RETURN = " "                     elapse time:     0.00 sec 
                    Mac:         ON ERROR ERR_RTN 
                    Mac:         GOTO ASSIGN 
                    Cmd:  OK     UEXITWK1 = CHOSEN                        elapse time:     0.00 sec 
                    Mac:         END 
==> Macro <MUTIL ASSIGN UEXITWK1 CHOSEN                   total  time:     0.00 sec 
 
                RUEXIT1   TRUE   IF:   <MUTIL ASSIGN [?WKSET=]UEXITWK1 CHOSEN 
                RUEXIT1   TRUE   IF:   ?UE = IMPBDSP1 IN [?WKSET=]UEXITWK1 
                RUEXIT1   TRUE   IF:   AMPSET [&0=] = [?WKSET=]UEXITWK1(@,D) 
                RUEXIT1   TRUE   IF:   ?CMD =  = [&0=] 
                RUEXIT1   TRUE   IF:   ?CHK = X = 'X[?CMD=]' 
                RUEXIT1   FALSE  IF:   [?CHK=]X NE X 
                RUEXIT1   TRUE   IF:   TRUE 
                RUEXIT1   TRUE   THEN: USER_EXIT_CONT [?EXTMASK=]IMPBDSP 
            RUEXIT    TRUE   IF:   USER_EXIT_CONT [?EXTMASK=]IMPBDSP 
                RUEXIT11  TRUE   IF:   :NESTLEV = 1 = APPWK(UEXIT_NEST_LEV,1) 
                RUEXIT11  TRUE   IF:   :NESTLEV = 0 = [:NESTLEV=]0 - 1 
                RUEXIT11  FALSE  IF:   [:NESTLEV=]0 LT 0 
                RUEXIT11  TRUE   IF:   APPWK(UEXIT_NEST_LEV,1) = [:NESTLEV=]0 
                RUEXIT11  TRUE   THEN: RUEXIT_DECREASE_NEST_LEVEL 
            RUEXIT    TRUE   IF:   RUEXIT_DECREASE_NEST_LEVEL 
            RUEXIT    TRUE   THEN: USER_EXIT [?EXTMASK=]IMPBDSP 
        RIMPORT6  TRUE   IF:   USER_EXIT IMPBDSP 
        RIMPORT6  TRUE   IF:   FORMAT IMPSTAT(*,ROWHDR) = COLWIDTH AUTO 
        RIMPORT6  TRUE   IF:   FORMAT IMPSTAT(*,*) = COLWIDTH AUTO 
        RIMPORT6  TRUE   IF:   [?LOGTAB=]IMPSTAT EQ IMPSTAT 
        RIMPORT6  TRUE   IF:   FORMAT [?LOGTAB=]IMPSTAT(*,*) = READONLY 
        RIMPORT6  TRUE   IF:   ?REGUI =  = APPWK(IMPREGUI,1) 
        RIMPORT6  TRUE   IF:   APPWK(IMPREGUI,1) = " " 
        RIMPORT6  FALSE  IF:   [?REGUI=] EQ "N" 
        RIMPORT6  TRUE   IF:   REGUI IMPORT 
        RIMPORT6  TRUE   IF:   RAISE DUMSG_DIALOG 
        RIMPORT6  TRUE   THEN: VIEW_SELECTED_LOG_FILE 
    RCDILOG1  TRUE   IF:   VIEW_SELECTED_LOG_FILE 
    RCDILOG1  TRUE   IF:   ?SIZE = 40 = SIZEOF IMPSTATR 
    RCDILOG1  FALSE  IF:   [?SIZE=]40 LT 1 
    RCDILOG1  FALSE  IF:   [?SIZE=]40 EQ 1 
    RCDILOG1  TRUE   IF:   REMOVEIF IMPSTATR X 
    RCDILOG1  TRUE   THEN: RCDATIMP_VIEWLOG_IMPORT_STATISTICS 
==> Rule  >RCDILOG1                                       total  time:     0.00 sec 
 
